Nonterminals useless in grammar

    TypeSwitchStmt
    TypeSwitchGuard
    TypeCaseClauseList
    TypeCaseClause
    TypeSwitchCase
    Slice


Terminals unused in grammar

    EOL
    METHOD
    NEW
    IOTA
    FLOAT_HEX
    CONST_INT_ERR
    CONST_BIN_ERR
    INT
    STRING
    COMPLEXTYPE
    BYTE
    FLOAT
    RUNE
    UINT
    BOOL_TYPE
    UINTPTR
    ERRORTYPE
    ANYTYPE
    COMPARABLE


Rules useless in grammar

  303 TypeSwitchStmt: SWITCH TypeSwitchGuard '{' TypeCaseClauseList '}'
  304               | SWITCH SimpleStmt SEMICOLON TypeSwitchGuard '{' TypeCaseClauseList '}'

  305 TypeSwitchGuard: id PEQ PrimaryExpr '.' '(' TYPE ')'
  306                | PrimaryExpr '.' '(' TYPE ')'

  307 TypeCaseClauseList: TypeCaseClause TypeCaseClauseList
  308                   | TypeCaseClause

  309 TypeCaseClause: TypeSwitchCase ':' Statements

  310 TypeSwitchCase: CASE TypeList
  311               | DEFAULT

  312 Slice: '[' Expression ':' Expression ']'
  313      | '[' ':' Expression ']'
  314      | '[' Expression ':' ']'
  315      | '[' ':' ']'
  316      | '[' Expression ':' Expression ':' Expression ']'
  317      | '[' ':' Expression ':' Expression ']'


Rules useless in parser due to conflicts

   36 PostStmt: ε

  208 Key: id
  210    | LiteralValue

  212 Element: LiteralValue


State 16 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 26 conflicts: 10 shift/reduce
State 27 conflicts: 1 shift/reduce
State 35 conflicts: 10 shift/reduce
State 39 conflicts: 1 shift/reduce
State 47 conflicts: 2 shift/reduce
State 78 conflicts: 1 shift/reduce
State 81 conflicts: 41 shift/reduce
State 105 conflicts: 2 shift/reduce, 6 reduce/reduce
State 127 conflicts: 5 shift/reduce
State 129 conflicts: 2 shift/reduce
State 170 conflicts: 3 shift/reduce, 4 reduce/reduce
State 174 conflicts: 1 reduce/reduce
State 175 conflicts: 1 shift/reduce
State 177 conflicts: 27 shift/reduce
State 179 conflicts: 1 shift/reduce
State 180 conflicts: 1 shift/reduce
State 182 conflicts: 42 shift/reduce
State 202 conflicts: 5 shift/reduce, 1 reduce/reduce
State 204 conflicts: 42 shift/reduce
State 207 conflicts: 2 shift/reduce, 1 reduce/reduce
State 214 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 224 conflicts: 3 reduce/reduce
State 237 conflicts: 2 shift/reduce, 3 reduce/reduce
State 240 conflicts: 3 reduce/reduce
State 249 conflicts: 2 shift/reduce
State 316 conflicts: 5 shift/reduce
State 319 conflicts: 5 shift/reduce
State 320 conflicts: 3 shift/reduce, 5 reduce/reduce
State 321 conflicts: 5 shift/reduce, 3 reduce/reduce
State 360 conflicts: 1 shift/reduce, 5 reduce/reduce
State 361 conflicts: 2 reduce/reduce
State 367 conflicts: 19 shift/reduce
State 374 conflicts: 5 shift/reduce
State 401 conflicts: 5 shift/reduce
State 426 conflicts: 2 reduce/reduce
State 445 conflicts: 41 shift/reduce
State 460 conflicts: 41 shift/reduce
State 472 conflicts: 41 shift/reduce, 3 reduce/reduce
State 476 conflicts: 1 shift/reduce, 1 reduce/reduce
State 481 conflicts: 41 shift/reduce, 3 reduce/reduce


Grammar

    0 $accept: prog $end

    1 prog: PACKAGE IMPORTS
    2     | prog TopLevelDecl

    3 TopLevelDecl: Declaration
    4             | FunctionDecl
    5             | MethodDecl

    6 FunctionDecl: FUNCTION id TypeParameters Signature Block
    7             | FUNCTION id Signature Block
    8             | FUNCTION id Signature
    9             | FUNCTION id TypeParameters Signature

   10 MethodDecl: FUNCTION Receiver id Signature Block

   11 Receiver: Parameters

   12 Statement: Declaration
   13          | SimpleStmt
   14          | GoStmt
   15          | ReturnStmt
   16          | BreakStmt
   17          | ContinueStmt
   18          | GotoStmt
   19          | FALLTHROUGH
   20          | Block
   21          | IfStmt
   22          | SwitchStmt
   23          | SelectStmt
   24          | ForStmt
   25          | DeferStmt

   26 ForStmt: FOR Expression Block
   27        | FOR ForClause Block
   28        | FOR RangeClause Block
   29        | FOR Block

   30 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   31 InitStmt: SimpleStmt
   32         | ε

   33 Condition: Expression
   34          | ε

   35 PostStmt: SimpleStmt
   36         | ε

   37 RangeClause: ExpressionList EQ RANGE Expression
   38            | IdentifierList PEQ RANGE Expression
   39            | RANGE Expression

   40 DeferStmt: DEFER Expression

   41 Declaration: ConstDecl
   42            | TypeDecl
   43            | VarDecl

   44 GoStmt: GO Expression

   45 ReturnStmt: RETURN ExpressionList
   46           | RETURN

   47 BreakStmt: BREAK Label
   48          | BREAK

   49 ContinueStmt: CONTINUE Label
   50             | CONTINUE

   51 GotoStmt: GOTO Label
   52         | GOTO

   53 Label: id

   54 SelectStmt: SELECT '{' CommClauseList '}'
   55           | SELECT '{' '}'

   56 CommClauseList: CommClauseList CommClause
   57               | CommClause

   58 CommClause: CommCase ':' Statements

   59 CommCase: CASE SendStmt
   60         | CASE RecvStmt
   61         | DEFAULT

   62 RecvStmt: ExpressionList EQ Expression
   63         | IdentifierList PEQ Expression
   64         | Expression

   65 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt
   66       | IF SimpleStmt SEMICOLON Expression Block ELSE Block
   67       | IF SimpleStmt SEMICOLON Expression Block
   68       | IF Expression Block
   69       | IF Expression Block ELSE IfStmt
   70       | IF Expression Block ELSE Block

   71 SwitchStmt: ExprSwitchStmt

   72 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression '{' ExprCaseClauseList '}'
   73               | SWITCH SimpleStmt SEMICOLON '{' ExprCaseClauseList '}'
   74               | SWITCH Expression '{' ExprCaseClauseList '}'
   75               | SWITCH '{' ExprCaseClauseList '}'

   76 ExprCaseClauseList: ExprCaseClause ExprCaseClauseList
   77                   | ExprCaseClause

   78 ExprCaseClause: ExprSwitchCase ':' Statements

   79 ExprSwitchCase: CASE ExpressionList
   80               | DEFAULT

   81 ConstDecl: CONST ConstSpec
   82          | CONST '(' ConstSpecList ')'
   83          | CONST '(' ')'

   84 ConstSpecList: ConstSpec ConstSpecList
   85              | ConstSpec

   86 ConstSpec: IdentifierList ConstExpr
   87          | IdentifierList

   88 ConstExpr: Type EQ ExpressionList
   89          | EQ ExpressionList

   90 TypeDecl: TYPE TypeSpec
   91         | TYPE '(' TypeSpecList ')'
   92         | TYPE '(' ')'

   93 TypeSpecList: TypeSpec TypeSpecList
   94             | TypeSpec

   95 TypeSpec: AliasDecl
   96         | TypeDef

   97 AliasDecl: id EQ Type

   98 TypeDef: id TypeParameters Type

   99 TypeParameters: '[' TypeParamList ']'
  100               | '[' TypeParamList ',' ']'
  101               | ε

  102 TypeParamList: TypeParamDecl ',' TypeParamList
  103              | TypeParamDecl

  104 TypeParamDecl: IdentifierList TypeConstraint

  105 TypeConstraint: TypeElem

  106 VarDecl: VAR VarSpec
  107        | VAR '(' VarSpecList ')'
  108        | VAR '(' ')'

  109 VarSpecList: VarSpec VarSpecList
  110            | VarSpec

  111 VarSpec: IdentifierList Type
  112        | IdentifierList Type EQ ExpressionList
  113        | IdentifierList EQ ExpressionList

  114 SimpleStmt: Assignment
  115           | Expression
  116           | SendStmt
  117           | IncDecStmt
  118           | EmptyStatement

  119 EmptyStatement: ε

  120 SendStmt: Channel POINTER Expression

  121 Channel: Expression

  122 IncDecStmt: Expression INC
  123           | Expression DEC

  124 Assignment: IdentifierList PEQ ExpressionList
  125           | IdentifierList EQ ExpressionList
  126           | ExpressionList EQ ExpressionList
  127           | ExpressionList ADDEQ ExpressionList
  128           | ExpressionList DIVEQ ExpressionList
  129           | ExpressionList DECEQ ExpressionList
  130           | ExpressionList MULEQ ExpressionList
  131           | ExpressionList MODEQ ExpressionList
  132           | ExpressionList LSHIFTEQ ExpressionList
  133           | ExpressionList RSHIFTEQ ExpressionList
  134           | ExpressionList XOREQ ExpressionList
  135           | ExpressionList ANDXOREQ ExpressionList
  136           | ExpressionList ANDEQ ExpressionList
  137           | ExpressionList OREQ ExpressionList

  138 Expression: UnaryExpr
  139           | Expression binary_op Expression

  140 binary_op: OR
  141          | AND
  142          | rel_op
  143          | add_op
  144          | mul_op

  145 mul_op: '*'
  146       | '/'
  147       | '%'
  148       | LSHIFT
  149       | RSHIFT
  150       | '&'
  151       | AMP_EXP

  152 add_op: '-'
  153       | XOR
  154       | '|'
  155       | '+'

  156 rel_op: EQUAL
  157       | NOTEQUAL
  158       | '<'
  159       | '>'
  160       | LESSOREQUAL
  161       | GREATEROREQUAL

  162 UnaryExpr: PrimaryExpr
  163          | '+' UnaryExpr
  164          | '-' UnaryExpr
  165          | '!' UnaryExpr
  166          | XOR UnaryExpr
  167          | '*' UnaryExpr
  168          | '&' UnaryExpr
  169          | POINTER UnaryExpr

  170 PrimaryExpr: Operand
  171            | PrimaryExpr Arguments
  172            | MethodExpr
  173            | Conversion
  174            | PrimaryExpr Selector
  175            | PrimaryExpr Index
  176            | PrimaryExpr TypeAssertion

  177 Conversion: Type '(' ExpressionList ')'
  178           | Type '(' ExpressionList ',' ')'

  179 MethodExpr: Type '.' id

  180 Operand: id '.' id
  181        | id
  182        | BasicLit
  183        | CompositeLit
  184        | FunctionLit
  185        | '(' ExpressionList ')'

  186 BasicLit: int_lit
  187         | float_lit
  188         | imaginary_lit
  189         | RUNE_LIT
  190         | CONST_CHAR
  191         | CONST_STRING
  192         | BOOL

  193 CompositeLit: LiteralType LiteralValue
  194             | LiteralValue

  195 LiteralType: StructType
  196            | ArrayType
  197            | '[' POINT ']' Type
  198            | SliceType
  199            | MapType
  200            | id

  201 LiteralValue: '{' ElementList '}'
  202             | '{' ElementList ',' '}'
  203             | '{' '}'

  204 ElementList: ElementList ',' KeyedElement
  205            | KeyedElement

  206 KeyedElement: Key ':' Element
  207             | Element

  208 Key: id
  209    | Expression
  210    | LiteralValue

  211 Element: Expression
  212        | LiteralValue

  213 int_lit: CONST_BIN
  214        | CONST_HEX
  215        | CONST_OCTAL
  216        | CONST_INT

  217 imaginary_lit: IMAGINARY_LIT

  218 float_lit: DECIMAL_FLOAT_LIT
  219          | HEX_FLOAT_LIT

  220 FunctionLit: FUNCTION Signature Block

  221 Block: '{' Statements '}'

  222 Statements: Statements Statement
  223           | Statement

  224 Selector: '.' id

  225 Index: '[' Expression ']'
  226      | '[' Expression ',' ']'

  227 TypeAssertion: '.' '(' Type ')'

  228 Arguments: '(' ExpressionList ')'
  229          | '(' ExpressionList ',' ')'
  230          | '(' ExpressionList POINT ')'
  231          | '(' Type ',' ')'
  232          | '(' Type POINT ')'
  233          | '(' Type ')'
  234          | '(' Type ',' ExpressionList ')'
  235          | '(' ')'

  236 ExpressionList: ExpressionList ',' Expression
  237               | Expression

  238 Type: id
  239     | id '.' id
  240     | id TypeArgs
  241     | id '.' id TypeArgs
  242     | '(' Type ')'
  243     | ArrayType
  244     | PointerType
  245     | StructType
  246     | FunctionType
  247     | InterfaceType
  248     | SliceType
  249     | MapType
  250     | ChannelType

  251 TypeArgs: '[' TypeList ']'
  252         | '[' TypeList ',' ']'

  253 TypeList: Type ',' TypeList
  254         | Type

  255 TypeName: id
  256         | id '.' TypeName

  257 ArrayType: '[' Expression ']' Type

  258 StructType: STRUCT '{' DeclList '}'
  259           | STRUCT '{' '}'

  260 DeclList: FieldDecl DeclList
  261         | FieldDecl

  262 FieldDecl: IdentifierList Type CONST_STRING
  263          | IdentifierList Type
  264          | EmbeddedField CONST_STRING
  265          | EmbeddedField

  266 EmbeddedField: '*' TypeName TypeArgs
  267              | TypeName TypeArgs
  268              | '*' TypeName
  269              | TypeName

  270 PointerType: '*' Type

  271 FunctionType: FUNCTION Signature

  272 Signature: Parameters '(' ParameterList ')'
  273          | Parameters '(' ')'
  274          | Parameters '(' ParameterList ',' ')'
  275          | Parameters Type
  276          | Parameters

  277 Parameters: '(' ParameterList ')'
  278           | '(' ')'
  279           | '(' ParameterList ',' ')'

  280 ParameterList: ParameterDecl ',' ParameterList
  281              | ParameterDecl

  282 ParameterDecl: IdentifierList POINT Type
  283              | IdentifierList Type
  284              | IdentifierList
  285              | POINT Type

  286 IdentifierList: id
  287               | id ',' IdentifierList

  288 InterfaceType: INTERFACE '{' InterfaceElemList '}'
  289              | INTERFACE '{' '}'

  290 InterfaceElemList: InterfaceElem InterfaceElemList
  291                  | InterfaceElem

  292 InterfaceElem: id Signature
  293              | TypeElem

  294 TypeElem: TypeTerm '|' TypeElem
  295         | TypeTerm

  296 TypeTerm: id
  297         | '~' Type

  298 SliceType: '[' ']' Type

  299 MapType: MAP '[' Type ']' Type

  300 ChannelType: CHAN Type
  301            | CHAN POINTER id
  302            | POINTER CHAN Type


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 165
    '%' (37) 147
    '&' (38) 150 168
    '(' (40) 82 83 91 92 107 108 177 178 185 227 228 229 230 231 232 233 234 235 242 272 273 274 277 278 279
    ')' (41) 82 83 91 92 107 108 177 178 185 227 228 229 230 231 232 233 234 235 242 272 273 274 277 278 279
    '*' (42) 145 167 266 268 270
    '+' (43) 155 163
    ',' (44) 100 102 178 202 204 226 229 231 234 236 252 253 274 279 280 287
    '-' (45) 152 164
    '.' (46) 179 180 224 227 239 241 256
    '/' (47) 146
    ':' (58) 58 78 206
    '<' (60) 158
    '>' (62) 159
    '[' (91) 99 100 197 225 226 251 252 257 298 299
    ']' (93) 99 100 197 225 226 251 252 257 298 299
    '{' (123) 54 55 72 73 74 75 201 202 203 221 258 259 288 289
    '|' (124) 154 294
    '}' (125) 54 55 72 73 74 75 201 202 203 221 258 259 288 289
    '~' (126) 297
    error (256)
    PACKAGE (258) 1
    IMPORTS (259) 1
    FUNCTION (260) 6 7 8 9 10 220 271
    id (261) 6 7 8 9 10 53 97 98 179 180 181 200 208 224 238 239 240 241 255 256 286 287 292 296 301
    VAR (262) 106 107 108
    EOL (263)
    CONST (264) 81 82 83
    METHOD (265)
    IF (266) 65 66 67 68 69 70
    ELSE (267) 65 66 69 70
    SWITCH (268) 72 73 74 75
    CASE (269) 59 60 79
    FALLTHROUGH (270) 19
    DEFAULT (271) 61 80
    FOR (272) 26 27 28 29
    BREAK (273) 47 48
    RANGE (274) 37 38 39
    NEW (275)
    SELECT (276) 54 55
    RETURN (277) 45 46
    MAP (278) 299
    GO (279) 44
    GOTO (280) 51 52
    INTERFACE (281) 288 289
    CHAN (282) 300 301 302
    CONTINUE (283) 49 50
    DEFER (284) 40
    CONST_INT (285) 216
    CONST_CHAR (286) 190
    CONST_STRING (287) 191 262 264
    BOOL (288) 192
    IOTA (289)
    CONST_OCTAL (290) 215
    CONST_HEX (291) 214
    CONST_BIN (292) 213
    FLOAT_HEX (293)
    DECIMAL_FLOAT_LIT (294) 218
    HEX_FLOAT_LIT (295) 219
    RUNE_LIT (296) 189
    IMAGINARY_LIT (297) 217
    CONST_INT_ERR (298)
    CONST_BIN_ERR (299)
    INT (300)
    STRING (301)
    COMPLEXTYPE (302)
    BYTE (303)
    FLOAT (304)
    RUNE (305)
    UINT (306)
    BOOL_TYPE (307)
    TYPE (308) 90 91 92
    STRUCT (309) 258 259
    UINTPTR (310)
    ERRORTYPE (311)
    ANYTYPE (312)
    COMPARABLE (313)
    ADDEQ (314) 127
    DECEQ (315) 129
    OREQ (316) 137
    XOREQ (317) 134
    MULEQ (318) 130
    DIVEQ (319) 128
    MODEQ (320) 131
    LSHIFTEQ (321) 132
    RSHIFTEQ (322) 133
    ANDEQ (323) 136
    ANDXOREQ (324) 135
    EQ (325) 37 62 88 89 97 112 113 125 126
    INC (326) 122
    DEC (327) 123
    EQUAL (328) 156
    NOTEQUAL (329) 157
    GREATEROREQUAL (330) 161
    LESSOREQUAL (331) 160
    AND (332) 141
    OR (333) 140
    LSHIFT (334) 148
    RSHIFT (335) 149
    PEQ (336) 38 63 124
    XOR (337) 153 166
    SEMICOLON (338) 30 65 66 67 72 73
    AMP_EXP (339) 151
    POINT (340) 197 230 232 282 285
    POINTER (341) 120 169 301 302


Nonterminals, with rules where they appear

    $accept (107)
        on left: 0
    prog (108)
        on left: 1 2
        on right: 0 2
    TopLevelDecl (109)
        on left: 3 4 5
        on right: 2
    FunctionDecl (110)
        on left: 6 7 8 9
        on right: 4
    MethodDecl (111)
        on left: 10
        on right: 5
    Receiver (112)
        on left: 11
        on right: 10
    Statement (113)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25
        on right: 222 223
    ForStmt (114)
        on left: 26 27 28 29
        on right: 24
    ForClause (115)
        on left: 30
        on right: 27
    InitStmt (116)
        on left: 31 32
        on right: 30
    Condition (117)
        on left: 33 34
        on right: 30
    PostStmt (118)
        on left: 35 36
        on right: 30
    RangeClause (119)
        on left: 37 38 39
        on right: 28
    DeferStmt (120)
        on left: 40
        on right: 25
    Declaration (121)
        on left: 41 42 43
        on right: 3 12
    GoStmt (122)
        on left: 44
        on right: 14
    ReturnStmt (123)
        on left: 45 46
        on right: 15
    BreakStmt (124)
        on left: 47 48
        on right: 16
    ContinueStmt (125)
        on left: 49 50
        on right: 17
    GotoStmt (126)
        on left: 51 52
        on right: 18
    Label (127)
        on left: 53
        on right: 47 49 51
    SelectStmt (128)
        on left: 54 55
        on right: 23
    CommClauseList (129)
        on left: 56 57
        on right: 54 56
    CommClause (130)
        on left: 58
        on right: 56 57
    CommCase (131)
        on left: 59 60 61
        on right: 58
    RecvStmt (132)
        on left: 62 63 64
        on right: 60
    IfStmt (133)
        on left: 65 66 67 68 69 70
        on right: 21 65 69
    SwitchStmt (134)
        on left: 71
        on right: 22
    ExprSwitchStmt (135)
        on left: 72 73 74 75
        on right: 71
    ExprCaseClauseList (136)
        on left: 76 77
        on right: 72 73 74 75 76
    ExprCaseClause (137)
        on left: 78
        on right: 76 77
    ExprSwitchCase (138)
        on left: 79 80
        on right: 78
    ConstDecl (139)
        on left: 81 82 83
        on right: 41
    ConstSpecList (140)
        on left: 84 85
        on right: 82 84
    ConstSpec (141)
        on left: 86 87
        on right: 81 84 85
    ConstExpr (142)
        on left: 88 89
        on right: 86
    TypeDecl (143)
        on left: 90 91 92
        on right: 42
    TypeSpecList (144)
        on left: 93 94
        on right: 91 93
    TypeSpec (145)
        on left: 95 96
        on right: 90 93 94
    AliasDecl (146)
        on left: 97
        on right: 95
    TypeDef (147)
        on left: 98
        on right: 96
    TypeParameters (148)
        on left: 99 100 101
        on right: 6 9 98
    TypeParamList (149)
        on left: 102 103
        on right: 99 100 102
    TypeParamDecl (150)
        on left: 104
        on right: 102 103
    TypeConstraint (151)
        on left: 105
        on right: 104
    VarDecl (152)
        on left: 106 107 108
        on right: 43
    VarSpecList (153)
        on left: 109 110
        on right: 107 109
    VarSpec (154)
        on left: 111 112 113
        on right: 106 109 110
    SimpleStmt (155)
        on left: 114 115 116 117 118
        on right: 13 31 35 65 66 67 72 73
    EmptyStatement (156)
        on left: 119
        on right: 118
    SendStmt (157)
        on left: 120
        on right: 59 116
    Channel (158)
        on left: 121
        on right: 120
    IncDecStmt (159)
        on left: 122 123
        on right: 117
    Assignment (160)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137
        on right: 114
    Expression (161)
        on left: 138 139
        on right: 26 33 37 38 39 40 44 62 63 64 65 66 67 68 69 70 72 74 115 120 121 122 123 139 209 211 225 226 236 237 257
    binary_op (162)
        on left: 140 141 142 143 144
        on right: 139
    mul_op (163)
        on left: 145 146 147 148 149 150 151
        on right: 144
    add_op (164)
        on left: 152 153 154 155
        on right: 143
    rel_op (165)
        on left: 156 157 158 159 160 161
        on right: 142
    UnaryExpr (166)
        on left: 162 163 164 165 166 167 168 169
        on right: 138 163 164 165 166 167 168 169
    PrimaryExpr (167)
        on left: 170 171 172 173 174 175 176
        on right: 162 171 174 175 176
    Conversion (168)
        on left: 177 178
        on right: 173
    MethodExpr (169)
        on left: 179
        on right: 172
    Operand (170)
        on left: 180 181 182 183 184 185
        on right: 170
    BasicLit (171)
        on left: 186 187 188 189 190 191 192
        on right: 182
    CompositeLit (172)
        on left: 193 194
        on right: 183
    LiteralType (173)
        on left: 195 196 197 198 199 200
        on right: 193
    LiteralValue (174)
        on left: 201 202 203
        on right: 193 194 210 212
    ElementList (175)
        on left: 204 205
        on right: 201 202 204
    KeyedElement (176)
        on left: 206 207
        on right: 204 205
    Key (177)
        on left: 208 209 210
        on right: 206
    Element (178)
        on left: 211 212
        on right: 206 207
    int_lit (179)
        on left: 213 214 215 216
        on right: 186
    imaginary_lit (180)
        on left: 217
        on right: 188
    float_lit (181)
        on left: 218 219
        on right: 187
    FunctionLit (182)
        on left: 220
        on right: 184
    Block (183)
        on left: 221
        on right: 6 7 10 20 26 27 28 29 65 66 67 68 69 70 220
    Statements (184)
        on left: 222 223
        on right: 58 78 221 222
    Selector (185)
        on left: 224
        on right: 174
    Index (186)
        on left: 225 226
        on right: 175
    TypeAssertion (187)
        on left: 227
        on right: 176
    Arguments (188)
        on left: 228 229 230 231 232 233 234 235
        on right: 171
    ExpressionList (189)
        on left: 236 237
        on right: 37 45 62 79 88 89 112 113 124 125 126 127 128 129 130 131 132 133 134 135 136 137 177 178 185 228 229 230 234 236
    Type (190)
        on left: 238 239 240 241 242 243 244 245 246 247 248 249 250
        on right: 88 97 98 111 112 177 178 179 197 227 231 232 233 234 242 253 254 257 262 263 270 275 282 283 285 297 298 299 300 302
    TypeArgs (191)
        on left: 251 252
        on right: 240 241 266 267
    TypeList (192)
        on left: 253 254
        on right: 251 252 253
    TypeName (193)
        on left: 255 256
        on right: 256 266 267 268 269
    ArrayType (194)
        on left: 257
        on right: 196 243
    StructType (195)
        on left: 258 259
        on right: 195 245
    DeclList (196)
        on left: 260 261
        on right: 258 260
    FieldDecl (197)
        on left: 262 263 264 265
        on right: 260 261
    EmbeddedField (198)
        on left: 266 267 268 269
        on right: 264 265
    PointerType (199)
        on left: 270
        on right: 244
    FunctionType (200)
        on left: 271
        on right: 246
    Signature (201)
        on left: 272 273 274 275 276
        on right: 6 7 8 9 10 220 271 292
    Parameters (202)
        on left: 277 278 279
        on right: 11 272 273 274 275 276
    ParameterList (203)
        on left: 280 281
        on right: 272 274 277 279 280
    ParameterDecl (204)
        on left: 282 283 284 285
        on right: 280 281
    IdentifierList (205)
        on left: 286 287
        on right: 38 63 86 87 104 111 112 113 124 125 262 263 282 283 284 287
    InterfaceType (206)
        on left: 288 289
        on right: 247
    InterfaceElemList (207)
        on left: 290 291
        on right: 288 290
    InterfaceElem (208)
        on left: 292 293
        on right: 290 291
    TypeElem (209)
        on left: 294 295
        on right: 105 293 294
    TypeTerm (210)
        on left: 296 297
        on right: 294 295
    SliceType (211)
        on left: 298
        on right: 198 248
    MapType (212)
        on left: 299
        on right: 199 249
    ChannelType (213)
        on left: 300 301 302
        on right: 250


State 0

    0 $accept: • prog $end

    PACKAGE  shift, and go to state 1

    prog  go to state 2


State 1

    1 prog: PACKAGE • IMPORTS

    IMPORTS  shift, and go to state 3


State 2

    0 $accept: prog • $end
    2 prog: prog • TopLevelDecl

    $end      shift, and go to state 4
    FUNCTION  shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    TYPE      shift, and go to state 8

    TopLevelDecl  go to state 9
    FunctionDecl  go to state 10
    MethodDecl    go to state 11
    Declaration   go to state 12
    ConstDecl     go to state 13
    TypeDecl      go to state 14
    VarDecl       go to state 15


State 3

    1 prog: PACKAGE IMPORTS •

    $default  reduce using rule 1 (prog)


State 4

    0 $accept: prog $end •

    $default  accept


State 5

    6 FunctionDecl: FUNCTION • id TypeParameters Signature Block
    7             | FUNCTION • id Signature Block
    8             | FUNCTION • id Signature
    9             | FUNCTION • id TypeParameters Signature
   10 MethodDecl: FUNCTION • Receiver id Signature Block

    id   shift, and go to state 16
    '('  shift, and go to state 17

    Receiver    go to state 18
    Parameters  go to state 19


State 6

  106 VarDecl: VAR • VarSpec
  107        | VAR • '(' VarSpecList ')'
  108        | VAR • '(' ')'

    id   shift, and go to state 20
    '('  shift, and go to state 21

    VarSpec         go to state 22
    IdentifierList  go to state 23


State 7

   81 ConstDecl: CONST • ConstSpec
   82          | CONST • '(' ConstSpecList ')'
   83          | CONST • '(' ')'

    id   shift, and go to state 20
    '('  shift, and go to state 24

    ConstSpec       go to state 25
    IdentifierList  go to state 26


State 8

   90 TypeDecl: TYPE • TypeSpec
   91         | TYPE • '(' TypeSpecList ')'
   92         | TYPE • '(' ')'

    id   shift, and go to state 27
    '('  shift, and go to state 28

    TypeSpec   go to state 29
    AliasDecl  go to state 30
    TypeDef    go to state 31


State 9

    2 prog: prog TopLevelDecl •

    $default  reduce using rule 2 (prog)


State 10

    4 TopLevelDecl: FunctionDecl •

    $default  reduce using rule 4 (TopLevelDecl)


State 11

    5 TopLevelDecl: MethodDecl •

    $default  reduce using rule 5 (TopLevelDecl)


State 12

    3 TopLevelDecl: Declaration •

    $default  reduce using rule 3 (TopLevelDecl)


State 13

   41 Declaration: ConstDecl •

    $default  reduce using rule 41 (Declaration)


State 14

   42 Declaration: TypeDecl •

    $default  reduce using rule 42 (Declaration)


State 15

   43 Declaration: VarDecl •

    $default  reduce using rule 43 (Declaration)


State 16

    6 FunctionDecl: FUNCTION id • TypeParameters Signature Block
    7             | FUNCTION id • Signature Block
    8             | FUNCTION id • Signature
    9             | FUNCTION id • TypeParameters Signature

    '('  shift, and go to state 17
    '['  shift, and go to state 32

    '('  [reduce using rule 101 (TypeParameters)]

    TypeParameters  go to state 33
    Signature       go to state 34
    Parameters      go to state 35


State 17

  277 Parameters: '(' • ParameterList ')'
  278           | '(' • ')'
  279           | '(' • ParameterList ',' ')'

    id     shift, and go to state 20
    POINT  shift, and go to state 36
    ')'    shift, and go to state 37

    ParameterList   go to state 38
    ParameterDecl   go to state 39
    IdentifierList  go to state 40


State 18

   10 MethodDecl: FUNCTION Receiver • id Signature Block

    id  shift, and go to state 41


State 19

   11 Receiver: Parameters •

    $default  reduce using rule 11 (Receiver)


State 20

  286 IdentifierList: id •
  287               | id • ',' IdentifierList

    ','  shift, and go to state 42

    ','       [reduce using rule 286 (IdentifierList)]
    $default  reduce using rule 286 (IdentifierList)


State 21

  107 VarDecl: VAR '(' • VarSpecList ')'
  108        | VAR '(' • ')'

    id   shift, and go to state 20
    ')'  shift, and go to state 43

    VarSpecList     go to state 44
    VarSpec         go to state 45
    IdentifierList  go to state 23


State 22

  106 VarDecl: VAR VarSpec •

    $default  reduce using rule 106 (VarDecl)


State 23

  111 VarSpec: IdentifierList • Type
  112        | IdentifierList • Type EQ ExpressionList
  113        | IdentifierList • EQ ExpressionList

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    EQ         shift, and go to state 52
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 57
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 24

   82 ConstDecl: CONST '(' • ConstSpecList ')'
   83          | CONST '(' • ')'

    id   shift, and go to state 20
    ')'  shift, and go to state 66

    ConstSpecList   go to state 67
    ConstSpec       go to state 68
    IdentifierList  go to state 26


State 25

   81 ConstDecl: CONST ConstSpec •

    $default  reduce using rule 81 (ConstDecl)


State 26

   86 ConstSpec: IdentifierList • ConstExpr
   87          | IdentifierList •

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    EQ         shift, and go to state 69
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    FUNCTION   [reduce using rule 87 (ConstSpec)]
    id         [reduce using rule 87 (ConstSpec)]
    MAP        [reduce using rule 87 (ConstSpec)]
    INTERFACE  [reduce using rule 87 (ConstSpec)]
    CHAN       [reduce using rule 87 (ConstSpec)]
    STRUCT     [reduce using rule 87 (ConstSpec)]
    POINTER    [reduce using rule 87 (ConstSpec)]
    '('        [reduce using rule 87 (ConstSpec)]
    '['        [reduce using rule 87 (ConstSpec)]
    '*'        [reduce using rule 87 (ConstSpec)]
    $default   reduce using rule 87 (ConstSpec)

    ConstExpr      go to state 70
    Type           go to state 71
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 27

   97 AliasDecl: id • EQ Type
   98 TypeDef: id • TypeParameters Type

    EQ   shift, and go to state 72
    '['  shift, and go to state 32

    '['       [reduce using rule 101 (TypeParameters)]
    $default  reduce using rule 101 (TypeParameters)

    TypeParameters  go to state 73


State 28

   91 TypeDecl: TYPE '(' • TypeSpecList ')'
   92         | TYPE '(' • ')'

    id   shift, and go to state 27
    ')'  shift, and go to state 74

    TypeSpecList  go to state 75
    TypeSpec      go to state 76
    AliasDecl     go to state 30
    TypeDef       go to state 31


State 29

   90 TypeDecl: TYPE TypeSpec •

    $default  reduce using rule 90 (TypeDecl)


State 30

   95 TypeSpec: AliasDecl •

    $default  reduce using rule 95 (TypeSpec)


State 31

   96 TypeSpec: TypeDef •

    $default  reduce using rule 96 (TypeSpec)


State 32

   99 TypeParameters: '[' • TypeParamList ']'
  100               | '[' • TypeParamList ',' ']'

    id  shift, and go to state 20

    TypeParamList   go to state 77
    TypeParamDecl   go to state 78
    IdentifierList  go to state 79


State 33

    6 FunctionDecl: FUNCTION id TypeParameters • Signature Block
    9             | FUNCTION id TypeParameters • Signature

    '('  shift, and go to state 17

    Signature   go to state 80
    Parameters  go to state 35


State 34

    7 FunctionDecl: FUNCTION id Signature • Block
    8             | FUNCTION id Signature •

    '{'  shift, and go to state 81

    $default  reduce using rule 8 (FunctionDecl)

    Block  go to state 82


State 35

  272 Signature: Parameters • '(' ParameterList ')'
  273          | Parameters • '(' ')'
  274          | Parameters • '(' ParameterList ',' ')'
  275          | Parameters • Type
  276          | Parameters •

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 83
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    FUNCTION   [reduce using rule 276 (Signature)]
    id         [reduce using rule 276 (Signature)]
    MAP        [reduce using rule 276 (Signature)]
    INTERFACE  [reduce using rule 276 (Signature)]
    CHAN       [reduce using rule 276 (Signature)]
    STRUCT     [reduce using rule 276 (Signature)]
    POINTER    [reduce using rule 276 (Signature)]
    '('        [reduce using rule 276 (Signature)]
    '['        [reduce using rule 276 (Signature)]
    '*'        [reduce using rule 276 (Signature)]
    $default   reduce using rule 276 (Signature)

    Type           go to state 84
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 36

  285 ParameterDecl: POINT • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 85
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 37

  278 Parameters: '(' ')' •

    $default  reduce using rule 278 (Parameters)


State 38

  277 Parameters: '(' ParameterList • ')'
  279           | '(' ParameterList • ',' ')'

    ')'  shift, and go to state 86
    ','  shift, and go to state 87


State 39

  280 ParameterList: ParameterDecl • ',' ParameterList
  281              | ParameterDecl •

    ','  shift, and go to state 88

    ','       [reduce using rule 281 (ParameterList)]
    $default  reduce using rule 281 (ParameterList)


State 40

  282 ParameterDecl: IdentifierList • POINT Type
  283              | IdentifierList • Type
  284              | IdentifierList •

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINT      shift, and go to state 89
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    $default  reduce using rule 284 (ParameterDecl)

    Type           go to state 90
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 41

   10 MethodDecl: FUNCTION Receiver id • Signature Block

    '('  shift, and go to state 17

    Signature   go to state 91
    Parameters  go to state 35


State 42

  287 IdentifierList: id ',' • IdentifierList

    id  shift, and go to state 20

    IdentifierList  go to state 92


State 43

  108 VarDecl: VAR '(' ')' •

    $default  reduce using rule 108 (VarDecl)


State 44

  107 VarDecl: VAR '(' VarSpecList • ')'

    ')'  shift, and go to state 93


State 45

  109 VarSpecList: VarSpec • VarSpecList
  110            | VarSpec •

    id  shift, and go to state 20

    $default  reduce using rule 110 (VarSpecList)

    VarSpecList     go to state 94
    VarSpec         go to state 45
    IdentifierList  go to state 23


State 46

  271 FunctionType: FUNCTION • Signature

    '('  shift, and go to state 17

    Signature   go to state 95
    Parameters  go to state 35


State 47

  238 Type: id •
  239     | id • '.' id
  240     | id • TypeArgs
  241     | id • '.' id TypeArgs

    '.'  shift, and go to state 96
    '['  shift, and go to state 97

    '.'       [reduce using rule 238 (Type)]
    '['       [reduce using rule 238 (Type)]
    $default  reduce using rule 238 (Type)

    TypeArgs  go to state 98


State 48

  299 MapType: MAP • '[' Type ']' Type

    '['  shift, and go to state 99


State 49

  288 InterfaceType: INTERFACE • '{' InterfaceElemList '}'
  289              | INTERFACE • '{' '}'

    '{'  shift, and go to state 100


State 50

  300 ChannelType: CHAN • Type
  301            | CHAN • POINTER id

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 101
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 102
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 51

  258 StructType: STRUCT • '{' DeclList '}'
  259           | STRUCT • '{' '}'

    '{'  shift, and go to state 103


State 52

  113 VarSpec: IdentifierList EQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 141
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 53

  302 ChannelType: POINTER • CHAN Type

    CHAN  shift, and go to state 147


State 54

  242 Type: '(' • Type ')'

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 148
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 55

  257 ArrayType: '[' • Expression ']' Type
  298 SliceType: '[' • ']' Type

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    ']'                shift, and go to state 149
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 150
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 56

  270 PointerType: '*' • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 151
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 57

  111 VarSpec: IdentifierList Type •
  112        | IdentifierList Type • EQ ExpressionList

    EQ  shift, and go to state 152

    $default  reduce using rule 111 (VarSpec)


State 58

  243 Type: ArrayType •

    $default  reduce using rule 243 (Type)


State 59

  245 Type: StructType •

    $default  reduce using rule 245 (Type)


State 60

  244 Type: PointerType •

    $default  reduce using rule 244 (Type)


State 61

  246 Type: FunctionType •

    $default  reduce using rule 246 (Type)


State 62

  247 Type: InterfaceType •

    $default  reduce using rule 247 (Type)


State 63

  248 Type: SliceType •

    $default  reduce using rule 248 (Type)


State 64

  249 Type: MapType •

    $default  reduce using rule 249 (Type)


State 65

  250 Type: ChannelType •

    $default  reduce using rule 250 (Type)


State 66

   83 ConstDecl: CONST '(' ')' •

    $default  reduce using rule 83 (ConstDecl)


State 67

   82 ConstDecl: CONST '(' ConstSpecList • ')'

    ')'  shift, and go to state 153


State 68

   84 ConstSpecList: ConstSpec • ConstSpecList
   85              | ConstSpec •

    id  shift, and go to state 20

    $default  reduce using rule 85 (ConstSpecList)

    ConstSpecList   go to state 154
    ConstSpec       go to state 68
    IdentifierList  go to state 26


State 69

   89 ConstExpr: EQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 155
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 70

   86 ConstSpec: IdentifierList ConstExpr •

    $default  reduce using rule 86 (ConstSpec)


State 71

   88 ConstExpr: Type • EQ ExpressionList

    EQ  shift, and go to state 156


State 72

   97 AliasDecl: id EQ • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 157
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 73

   98 TypeDef: id TypeParameters • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 158
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 74

   92 TypeDecl: TYPE '(' ')' •

    $default  reduce using rule 92 (TypeDecl)


State 75

   91 TypeDecl: TYPE '(' TypeSpecList • ')'

    ')'  shift, and go to state 159


State 76

   93 TypeSpecList: TypeSpec • TypeSpecList
   94             | TypeSpec •

    id  shift, and go to state 27

    $default  reduce using rule 94 (TypeSpecList)

    TypeSpecList  go to state 160
    TypeSpec      go to state 76
    AliasDecl     go to state 30
    TypeDef       go to state 31


State 77

   99 TypeParameters: '[' TypeParamList • ']'
  100               | '[' TypeParamList • ',' ']'

    ']'  shift, and go to state 161
    ','  shift, and go to state 162


State 78

  102 TypeParamList: TypeParamDecl • ',' TypeParamList
  103              | TypeParamDecl •

    ','  shift, and go to state 163

    ','       [reduce using rule 103 (TypeParamList)]
    $default  reduce using rule 103 (TypeParamList)


State 79

  104 TypeParamDecl: IdentifierList • TypeConstraint

    id   shift, and go to state 164
    '~'  shift, and go to state 165

    TypeConstraint  go to state 166
    TypeElem        go to state 167
    TypeTerm        go to state 168


State 80

    6 FunctionDecl: FUNCTION id TypeParameters Signature • Block
    9             | FUNCTION id TypeParameters Signature •

    '{'  shift, and go to state 81

    $default  reduce using rule 9 (FunctionDecl)

    Block  go to state 169


State 81

  221 Block: '{' • Statements '}'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 171
    SWITCH             shift, and go to state 172
    FALLTHROUGH        shift, and go to state 173
    FOR                shift, and go to state 174
    BREAK              shift, and go to state 175
    SELECT             shift, and go to state 176
    RETURN             shift, and go to state 177
    MAP                shift, and go to state 48
    GO                 shift, and go to state 178
    GOTO               shift, and go to state 179
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONTINUE           shift, and go to state 180
    DEFER              shift, and go to state 181
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 182
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    FUNCTION           [reduce using rule 119 (EmptyStatement)]
    id                 [reduce using rule 119 (EmptyStatement)]
    VAR                [reduce using rule 119 (EmptyStatement)]
    CONST              [reduce using rule 119 (EmptyStatement)]
    IF                 [reduce using rule 119 (EmptyStatement)]
    SWITCH             [reduce using rule 119 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 119 (EmptyStatement)]
    FOR                [reduce using rule 119 (EmptyStatement)]
    BREAK              [reduce using rule 119 (EmptyStatement)]
    SELECT             [reduce using rule 119 (EmptyStatement)]
    RETURN             [reduce using rule 119 (EmptyStatement)]
    MAP                [reduce using rule 119 (EmptyStatement)]
    GO                 [reduce using rule 119 (EmptyStatement)]
    GOTO               [reduce using rule 119 (EmptyStatement)]
    INTERFACE          [reduce using rule 119 (EmptyStatement)]
    CHAN               [reduce using rule 119 (EmptyStatement)]
    CONTINUE           [reduce using rule 119 (EmptyStatement)]
    DEFER              [reduce using rule 119 (EmptyStatement)]
    CONST_INT          [reduce using rule 119 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 119 (EmptyStatement)]
    CONST_STRING       [reduce using rule 119 (EmptyStatement)]
    BOOL               [reduce using rule 119 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 119 (EmptyStatement)]
    CONST_HEX          [reduce using rule 119 (EmptyStatement)]
    CONST_BIN          [reduce using rule 119 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 119 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 119 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 119 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 119 (EmptyStatement)]
    TYPE               [reduce using rule 119 (EmptyStatement)]
    STRUCT             [reduce using rule 119 (EmptyStatement)]
    XOR                [reduce using rule 119 (EmptyStatement)]
    POINTER            [reduce using rule 119 (EmptyStatement)]
    '{'                [reduce using rule 119 (EmptyStatement)]
    '('                [reduce using rule 119 (EmptyStatement)]
    '['                [reduce using rule 119 (EmptyStatement)]
    '*'                [reduce using rule 119 (EmptyStatement)]
    '&'                [reduce using rule 119 (EmptyStatement)]
    '-'                [reduce using rule 119 (EmptyStatement)]
    '+'                [reduce using rule 119 (EmptyStatement)]
    '!'                [reduce using rule 119 (EmptyStatement)]
    $default           reduce using rule 119 (EmptyStatement)

    Statement       go to state 183
    ForStmt         go to state 184
    DeferStmt       go to state 185
    Declaration     go to state 186
    GoStmt          go to state 187
    ReturnStmt      go to state 188
    BreakStmt       go to state 189
    ContinueStmt    go to state 190
    GotoStmt        go to state 191
    SelectStmt      go to state 192
    IfStmt          go to state 193
    SwitchStmt      go to state 194
    ExprSwitchStmt  go to state 195
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 196
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 202
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    Block           go to state 203
    Statements      go to state 204
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 82

    7 FunctionDecl: FUNCTION id Signature Block •

    $default  reduce using rule 7 (FunctionDecl)


State 83

  242 Type: '(' • Type ')'
  272 Signature: Parameters '(' • ParameterList ')'
  273          | Parameters '(' • ')'
  274          | Parameters '(' • ParameterList ',' ')'

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 207
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINT      shift, and go to state 36
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    ')'        shift, and go to state 208
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type            go to state 148
    ArrayType       go to state 58
    StructType      go to state 59
    PointerType     go to state 60
    FunctionType    go to state 61
    ParameterList   go to state 209
    ParameterDecl   go to state 39
    IdentifierList  go to state 40
    InterfaceType   go to state 62
    SliceType       go to state 63
    MapType         go to state 64
    ChannelType     go to state 65


State 84

  275 Signature: Parameters Type •

    $default  reduce using rule 275 (Signature)


State 85

  285 ParameterDecl: POINT Type •

    $default  reduce using rule 285 (ParameterDecl)


State 86

  277 Parameters: '(' ParameterList ')' •

    $default  reduce using rule 277 (Parameters)


State 87

  279 Parameters: '(' ParameterList ',' • ')'

    ')'  shift, and go to state 210


State 88

  280 ParameterList: ParameterDecl ',' • ParameterList

    id     shift, and go to state 20
    POINT  shift, and go to state 36

    ParameterList   go to state 211
    ParameterDecl   go to state 39
    IdentifierList  go to state 40


State 89

  282 ParameterDecl: IdentifierList POINT • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 212
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 90

  283 ParameterDecl: IdentifierList Type •

    $default  reduce using rule 283 (ParameterDecl)


State 91

   10 MethodDecl: FUNCTION Receiver id Signature • Block

    '{'  shift, and go to state 81

    Block  go to state 213


State 92

  287 IdentifierList: id ',' IdentifierList •

    $default  reduce using rule 287 (IdentifierList)


State 93

  107 VarDecl: VAR '(' VarSpecList ')' •

    $default  reduce using rule 107 (VarDecl)


State 94

  109 VarSpecList: VarSpec VarSpecList •

    $default  reduce using rule 109 (VarSpecList)


State 95

  271 FunctionType: FUNCTION Signature •

    $default  reduce using rule 271 (FunctionType)


State 96

  239 Type: id '.' • id
  241     | id '.' • id TypeArgs

    id  shift, and go to state 214


State 97

  251 TypeArgs: '[' • TypeList ']'
  252         | '[' • TypeList ',' ']'

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 215
    TypeList       go to state 216
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 98

  240 Type: id TypeArgs •

    $default  reduce using rule 240 (Type)


State 99

  299 MapType: MAP '[' • Type ']' Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 217
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 100

  288 InterfaceType: INTERFACE '{' • InterfaceElemList '}'
  289              | INTERFACE '{' • '}'

    id   shift, and go to state 218
    '}'  shift, and go to state 219
    '~'  shift, and go to state 165

    InterfaceElemList  go to state 220
    InterfaceElem      go to state 221
    TypeElem           go to state 222
    TypeTerm           go to state 168


State 101

  301 ChannelType: CHAN POINTER • id
  302            | POINTER • CHAN Type

    id    shift, and go to state 223
    CHAN  shift, and go to state 147


State 102

  300 ChannelType: CHAN Type •

    $default  reduce using rule 300 (ChannelType)


State 103

  258 StructType: STRUCT '{' • DeclList '}'
  259           | STRUCT '{' • '}'

    id   shift, and go to state 224
    '}'  shift, and go to state 225
    '*'  shift, and go to state 226

    TypeName        go to state 227
    DeclList        go to state 228
    FieldDecl       go to state 229
    EmbeddedField   go to state 230
    IdentifierList  go to state 231


State 104

  220 FunctionLit: FUNCTION • Signature Block
  271 FunctionType: FUNCTION • Signature

    '('  shift, and go to state 17

    Signature   go to state 232
    Parameters  go to state 35


State 105

  180 Operand: id • '.' id
  181        | id •
  200 LiteralType: id •
  238 Type: id •
  239     | id • '.' id
  240     | id • TypeArgs
  241     | id • '.' id TypeArgs

    '.'  shift, and go to state 233
    '['  shift, and go to state 97

    POINT     reduce using rule 181 (Operand)
    POINT     [reduce using rule 238 (Type)]
    '{'       reduce using rule 181 (Operand)
    '{'       [reduce using rule 200 (LiteralType)]
    '.'       [reduce using rule 181 (Operand)]
    '.'       [reduce using rule 238 (Type)]
    '('       reduce using rule 181 (Operand)
    '('       [reduce using rule 238 (Type)]
    ')'       reduce using rule 181 (Operand)
    ')'       [reduce using rule 238 (Type)]
    '['       [reduce using rule 181 (Operand)]
    ','       reduce using rule 181 (Operand)
    ','       [reduce using rule 238 (Type)]
    $default  reduce using rule 181 (Operand)

    TypeArgs  go to state 98


State 106

  216 int_lit: CONST_INT •

    $default  reduce using rule 216 (int_lit)


State 107

  190 BasicLit: CONST_CHAR •

    $default  reduce using rule 190 (BasicLit)


State 108

  191 BasicLit: CONST_STRING •

    $default  reduce using rule 191 (BasicLit)


State 109

  192 BasicLit: BOOL •

    $default  reduce using rule 192 (BasicLit)


State 110

  215 int_lit: CONST_OCTAL •

    $default  reduce using rule 215 (int_lit)


State 111

  214 int_lit: CONST_HEX •

    $default  reduce using rule 214 (int_lit)


State 112

  213 int_lit: CONST_BIN •

    $default  reduce using rule 213 (int_lit)


State 113

  218 float_lit: DECIMAL_FLOAT_LIT •

    $default  reduce using rule 218 (float_lit)


State 114

  219 float_lit: HEX_FLOAT_LIT •

    $default  reduce using rule 219 (float_lit)


State 115

  189 BasicLit: RUNE_LIT •

    $default  reduce using rule 189 (BasicLit)


State 116

  217 imaginary_lit: IMAGINARY_LIT •

    $default  reduce using rule 217 (imaginary_lit)


State 117

  166 UnaryExpr: XOR • UnaryExpr

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    UnaryExpr      go to state 234
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 118

  169 UnaryExpr: POINTER • UnaryExpr
  302 ChannelType: POINTER • CHAN Type

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 235
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    UnaryExpr      go to state 236
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 119

  201 LiteralValue: '{' • ElementList '}'
  202             | '{' • ElementList ',' '}'
  203             | '{' • '}'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 237
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '}'                shift, and go to state 238
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 239
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 240
    ElementList    go to state 241
    KeyedElement   go to state 242
    Key            go to state 243
    Element        go to state 244
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 120

  185 Operand: '(' • ExpressionList ')'
  242 Type: '(' • Type ')'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 245
    Type            go to state 246
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 121

  197 LiteralType: '[' • POINT ']' Type
  257 ArrayType: '[' • Expression ']' Type
  298 SliceType: '[' • ']' Type

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINT              shift, and go to state 247
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    ']'                shift, and go to state 149
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 150
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 122

  167 UnaryExpr: '*' • UnaryExpr
  270 PointerType: '*' • Type

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    UnaryExpr      go to state 248
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 249
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 123

  168 UnaryExpr: '&' • UnaryExpr

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    UnaryExpr      go to state 250
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 124

  164 UnaryExpr: '-' • UnaryExpr

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    UnaryExpr      go to state 251
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 125

  163 UnaryExpr: '+' • UnaryExpr

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    UnaryExpr      go to state 252
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 126

  165 UnaryExpr: '!' • UnaryExpr

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    UnaryExpr      go to state 253
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 127

  139 Expression: Expression • binary_op Expression
  237 ExpressionList: Expression •

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    XOR       [reduce using rule 237 (ExpressionList)]
    '*'       [reduce using rule 237 (ExpressionList)]
    '&'       [reduce using rule 237 (ExpressionList)]
    '-'       [reduce using rule 237 (ExpressionList)]
    '+'       [reduce using rule 237 (ExpressionList)]
    $default  reduce using rule 237 (ExpressionList)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 128

  138 Expression: UnaryExpr •

    $default  reduce using rule 138 (Expression)


State 129

  162 UnaryExpr: PrimaryExpr •
  171 PrimaryExpr: PrimaryExpr • Arguments
  174            | PrimaryExpr • Selector
  175            | PrimaryExpr • Index
  176            | PrimaryExpr • TypeAssertion

    '.'  shift, and go to state 277
    '('  shift, and go to state 278
    '['  shift, and go to state 279

    '('       [reduce using rule 162 (UnaryExpr)]
    '['       [reduce using rule 162 (UnaryExpr)]
    $default  reduce using rule 162 (UnaryExpr)

    Selector       go to state 280
    Index          go to state 281
    TypeAssertion  go to state 282
    Arguments      go to state 283


State 130

  173 PrimaryExpr: Conversion •

    $default  reduce using rule 173 (PrimaryExpr)


State 131

  172 PrimaryExpr: MethodExpr •

    $default  reduce using rule 172 (PrimaryExpr)


State 132

  170 PrimaryExpr: Operand •

    $default  reduce using rule 170 (PrimaryExpr)


State 133

  182 Operand: BasicLit •

    $default  reduce using rule 182 (Operand)


State 134

  183 Operand: CompositeLit •

    $default  reduce using rule 183 (Operand)


State 135

  193 CompositeLit: LiteralType • LiteralValue

    '{'  shift, and go to state 119

    LiteralValue  go to state 284


State 136

  194 CompositeLit: LiteralValue •

    $default  reduce using rule 194 (CompositeLit)


State 137

  186 BasicLit: int_lit •

    $default  reduce using rule 186 (BasicLit)


State 138

  188 BasicLit: imaginary_lit •

    $default  reduce using rule 188 (BasicLit)


State 139

  187 BasicLit: float_lit •

    $default  reduce using rule 187 (BasicLit)


State 140

  184 Operand: FunctionLit •

    $default  reduce using rule 184 (Operand)


State 141

  113 VarSpec: IdentifierList EQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 113 (VarSpec)


State 142

  177 Conversion: Type • '(' ExpressionList ')'
  178           | Type • '(' ExpressionList ',' ')'
  179 MethodExpr: Type • '.' id

    '.'  shift, and go to state 286
    '('  shift, and go to state 287


State 143

  196 LiteralType: ArrayType •
  243 Type: ArrayType •

    '{'       reduce using rule 196 (LiteralType)
    $default  reduce using rule 243 (Type)


State 144

  195 LiteralType: StructType •
  245 Type: StructType •

    '{'       reduce using rule 195 (LiteralType)
    $default  reduce using rule 245 (Type)


State 145

  198 LiteralType: SliceType •
  248 Type: SliceType •

    '{'       reduce using rule 198 (LiteralType)
    $default  reduce using rule 248 (Type)


State 146

  199 LiteralType: MapType •
  249 Type: MapType •

    '{'       reduce using rule 199 (LiteralType)
    $default  reduce using rule 249 (Type)


State 147

  302 ChannelType: POINTER CHAN • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 288
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 148

  242 Type: '(' Type • ')'

    ')'  shift, and go to state 289


State 149

  298 SliceType: '[' ']' • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 290
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 150

  139 Expression: Expression • binary_op Expression
  257 ArrayType: '[' Expression • ']' Type

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    ']'             shift, and go to state 291
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 151

  270 PointerType: '*' Type •

    $default  reduce using rule 270 (PointerType)


State 152

  112 VarSpec: IdentifierList Type EQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 292
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 153

   82 ConstDecl: CONST '(' ConstSpecList ')' •

    $default  reduce using rule 82 (ConstDecl)


State 154

   84 ConstSpecList: ConstSpec ConstSpecList •

    $default  reduce using rule 84 (ConstSpecList)


State 155

   89 ConstExpr: EQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 89 (ConstExpr)


State 156

   88 ConstExpr: Type EQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 293
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 157

   97 AliasDecl: id EQ Type •

    $default  reduce using rule 97 (AliasDecl)


State 158

   98 TypeDef: id TypeParameters Type •

    $default  reduce using rule 98 (TypeDef)


State 159

   91 TypeDecl: TYPE '(' TypeSpecList ')' •

    $default  reduce using rule 91 (TypeDecl)


State 160

   93 TypeSpecList: TypeSpec TypeSpecList •

    $default  reduce using rule 93 (TypeSpecList)


State 161

   99 TypeParameters: '[' TypeParamList ']' •

    $default  reduce using rule 99 (TypeParameters)


State 162

  100 TypeParameters: '[' TypeParamList ',' • ']'

    ']'  shift, and go to state 294


State 163

  102 TypeParamList: TypeParamDecl ',' • TypeParamList

    id  shift, and go to state 20

    TypeParamList   go to state 295
    TypeParamDecl   go to state 78
    IdentifierList  go to state 79


State 164

  296 TypeTerm: id •

    $default  reduce using rule 296 (TypeTerm)


State 165

  297 TypeTerm: '~' • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 296
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 166

  104 TypeParamDecl: IdentifierList TypeConstraint •

    $default  reduce using rule 104 (TypeParamDecl)


State 167

  105 TypeConstraint: TypeElem •

    $default  reduce using rule 105 (TypeConstraint)


State 168

  294 TypeElem: TypeTerm • '|' TypeElem
  295         | TypeTerm •

    '|'  shift, and go to state 297

    $default  reduce using rule 295 (TypeElem)


State 169

    6 FunctionDecl: FUNCTION id TypeParameters Signature Block •

    $default  reduce using rule 6 (FunctionDecl)


State 170

  180 Operand: id • '.' id
  181        | id •
  200 LiteralType: id •
  238 Type: id •
  239     | id • '.' id
  240     | id • TypeArgs
  241     | id • '.' id TypeArgs
  286 IdentifierList: id •
  287               | id • ',' IdentifierList

    '.'  shift, and go to state 233
    '['  shift, and go to state 97
    ','  shift, and go to state 42

    EQ        reduce using rule 181 (Operand)
    EQ        [reduce using rule 286 (IdentifierList)]
    PEQ       reduce using rule 286 (IdentifierList)
    '{'       reduce using rule 181 (Operand)
    '{'       [reduce using rule 200 (LiteralType)]
    '.'       [reduce using rule 181 (Operand)]
    '.'       [reduce using rule 238 (Type)]
    '('       reduce using rule 181 (Operand)
    '('       [reduce using rule 238 (Type)]
    '['       [reduce using rule 181 (Operand)]
    ','       [reduce using rule 181 (Operand)]
    $default  reduce using rule 181 (Operand)

    TypeArgs  go to state 98


State 171

   65 IfStmt: IF • SimpleStmt SEMICOLON Expression Block ELSE IfStmt
   66       | IF • SimpleStmt SEMICOLON Expression Block ELSE Block
   67       | IF • SimpleStmt SEMICOLON Expression Block
   68       | IF • Expression Block
   69       | IF • Expression Block ELSE IfStmt
   70       | IF • Expression Block ELSE Block

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    $default  reduce using rule 119 (EmptyStatement)

    SimpleStmt      go to state 298
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 299
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 172

   72 ExprSwitchStmt: SWITCH • SimpleStmt SEMICOLON Expression '{' ExprCaseClauseList '}'
   73               | SWITCH • SimpleStmt SEMICOLON '{' ExprCaseClauseList '}'
   74               | SWITCH • Expression '{' ExprCaseClauseList '}'
   75               | SWITCH • '{' ExprCaseClauseList '}'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 300
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    $default  reduce using rule 119 (EmptyStatement)

    SimpleStmt      go to state 301
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 302
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 173

   19 Statement: FALLTHROUGH •

    $default  reduce using rule 19 (Statement)


State 174

   26 ForStmt: FOR • Expression Block
   27        | FOR • ForClause Block
   28        | FOR • RangeClause Block
   29        | FOR • Block

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    RANGE              shift, and go to state 303
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 182
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    SEMICOLON  reduce using rule 32 (InitStmt)
    SEMICOLON  [reduce using rule 119 (EmptyStatement)]
    $default   reduce using rule 32 (InitStmt)

    ForClause       go to state 304
    InitStmt        go to state 305
    RangeClause     go to state 306
    SimpleStmt      go to state 307
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 308
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    Block           go to state 309
    ExpressionList  go to state 310
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 311
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 175

   47 BreakStmt: BREAK • Label
   48          | BREAK •

    id  shift, and go to state 312

    id        [reduce using rule 48 (BreakStmt)]
    $default  reduce using rule 48 (BreakStmt)

    Label  go to state 313


State 176

   54 SelectStmt: SELECT • '{' CommClauseList '}'
   55           | SELECT • '{' '}'

    '{'  shift, and go to state 314


State 177

   45 ReturnStmt: RETURN • ExpressionList
   46           | RETURN •

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    FUNCTION           [reduce using rule 46 (ReturnStmt)]
    id                 [reduce using rule 46 (ReturnStmt)]
    MAP                [reduce using rule 46 (ReturnStmt)]
    INTERFACE          [reduce using rule 46 (ReturnStmt)]
    CHAN               [reduce using rule 46 (ReturnStmt)]
    CONST_INT          [reduce using rule 46 (ReturnStmt)]
    CONST_CHAR         [reduce using rule 46 (ReturnStmt)]
    CONST_STRING       [reduce using rule 46 (ReturnStmt)]
    BOOL               [reduce using rule 46 (ReturnStmt)]
    CONST_OCTAL        [reduce using rule 46 (ReturnStmt)]
    CONST_HEX          [reduce using rule 46 (ReturnStmt)]
    CONST_BIN          [reduce using rule 46 (ReturnStmt)]
    DECIMAL_FLOAT_LIT  [reduce using rule 46 (ReturnStmt)]
    HEX_FLOAT_LIT      [reduce using rule 46 (ReturnStmt)]
    RUNE_LIT           [reduce using rule 46 (ReturnStmt)]
    IMAGINARY_LIT      [reduce using rule 46 (ReturnStmt)]
    STRUCT             [reduce using rule 46 (ReturnStmt)]
    XOR                [reduce using rule 46 (ReturnStmt)]
    POINTER            [reduce using rule 46 (ReturnStmt)]
    '{'                [reduce using rule 46 (ReturnStmt)]
    '('                [reduce using rule 46 (ReturnStmt)]
    '['                [reduce using rule 46 (ReturnStmt)]
    '*'                [reduce using rule 46 (ReturnStmt)]
    '&'                [reduce using rule 46 (ReturnStmt)]
    '-'                [reduce using rule 46 (ReturnStmt)]
    '+'                [reduce using rule 46 (ReturnStmt)]
    '!'                [reduce using rule 46 (ReturnStmt)]
    $default           reduce using rule 46 (ReturnStmt)

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 315
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 178

   44 GoStmt: GO • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 316
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 179

   51 GotoStmt: GOTO • Label
   52         | GOTO •

    id  shift, and go to state 312

    id        [reduce using rule 52 (GotoStmt)]
    $default  reduce using rule 52 (GotoStmt)

    Label  go to state 317


State 180

   49 ContinueStmt: CONTINUE • Label
   50             | CONTINUE •

    id  shift, and go to state 312

    id        [reduce using rule 50 (ContinueStmt)]
    $default  reduce using rule 50 (ContinueStmt)

    Label  go to state 318


State 181

   40 DeferStmt: DEFER • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 319
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 182

  201 LiteralValue: '{' • ElementList '}'
  202             | '{' • ElementList ',' '}'
  203             | '{' • '}'
  221 Block: '{' • Statements '}'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 320
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 171
    SWITCH             shift, and go to state 172
    FALLTHROUGH        shift, and go to state 173
    FOR                shift, and go to state 174
    BREAK              shift, and go to state 175
    SELECT             shift, and go to state 176
    RETURN             shift, and go to state 177
    MAP                shift, and go to state 48
    GO                 shift, and go to state 178
    GOTO               shift, and go to state 179
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONTINUE           shift, and go to state 180
    DEFER              shift, and go to state 181
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 182
    '}'                shift, and go to state 238
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    FUNCTION           [reduce using rule 119 (EmptyStatement)]
    id                 [reduce using rule 119 (EmptyStatement)]
    VAR                [reduce using rule 119 (EmptyStatement)]
    CONST              [reduce using rule 119 (EmptyStatement)]
    IF                 [reduce using rule 119 (EmptyStatement)]
    SWITCH             [reduce using rule 119 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 119 (EmptyStatement)]
    FOR                [reduce using rule 119 (EmptyStatement)]
    BREAK              [reduce using rule 119 (EmptyStatement)]
    SELECT             [reduce using rule 119 (EmptyStatement)]
    RETURN             [reduce using rule 119 (EmptyStatement)]
    MAP                [reduce using rule 119 (EmptyStatement)]
    GO                 [reduce using rule 119 (EmptyStatement)]
    GOTO               [reduce using rule 119 (EmptyStatement)]
    INTERFACE          [reduce using rule 119 (EmptyStatement)]
    CHAN               [reduce using rule 119 (EmptyStatement)]
    CONTINUE           [reduce using rule 119 (EmptyStatement)]
    DEFER              [reduce using rule 119 (EmptyStatement)]
    CONST_INT          [reduce using rule 119 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 119 (EmptyStatement)]
    CONST_STRING       [reduce using rule 119 (EmptyStatement)]
    BOOL               [reduce using rule 119 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 119 (EmptyStatement)]
    CONST_HEX          [reduce using rule 119 (EmptyStatement)]
    CONST_BIN          [reduce using rule 119 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 119 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 119 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 119 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 119 (EmptyStatement)]
    TYPE               [reduce using rule 119 (EmptyStatement)]
    STRUCT             [reduce using rule 119 (EmptyStatement)]
    XOR                [reduce using rule 119 (EmptyStatement)]
    POINTER            [reduce using rule 119 (EmptyStatement)]
    '{'                [reduce using rule 119 (EmptyStatement)]
    '}'                [reduce using rule 119 (EmptyStatement)]
    '('                [reduce using rule 119 (EmptyStatement)]
    '['                [reduce using rule 119 (EmptyStatement)]
    '*'                [reduce using rule 119 (EmptyStatement)]
    '&'                [reduce using rule 119 (EmptyStatement)]
    '-'                [reduce using rule 119 (EmptyStatement)]
    '+'                [reduce using rule 119 (EmptyStatement)]
    '!'                [reduce using rule 119 (EmptyStatement)]

    Statement       go to state 183
    ForStmt         go to state 184
    DeferStmt       go to state 185
    Declaration     go to state 186
    GoStmt          go to state 187
    ReturnStmt      go to state 188
    BreakStmt       go to state 189
    ContinueStmt    go to state 190
    GotoStmt        go to state 191
    SelectStmt      go to state 192
    IfStmt          go to state 193
    SwitchStmt      go to state 194
    ExprSwitchStmt  go to state 195
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 196
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 321
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 240
    ElementList     go to state 241
    KeyedElement    go to state 242
    Key             go to state 243
    Element         go to state 244
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    Block           go to state 203
    Statements      go to state 204
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 183

  223 Statements: Statement •

    $default  reduce using rule 223 (Statements)


State 184

   24 Statement: ForStmt •

    $default  reduce using rule 24 (Statement)


State 185

   25 Statement: DeferStmt •

    $default  reduce using rule 25 (Statement)


State 186

   12 Statement: Declaration •

    $default  reduce using rule 12 (Statement)


State 187

   14 Statement: GoStmt •

    $default  reduce using rule 14 (Statement)


State 188

   15 Statement: ReturnStmt •

    $default  reduce using rule 15 (Statement)


State 189

   16 Statement: BreakStmt •

    $default  reduce using rule 16 (Statement)


State 190

   17 Statement: ContinueStmt •

    $default  reduce using rule 17 (Statement)


State 191

   18 Statement: GotoStmt •

    $default  reduce using rule 18 (Statement)


State 192

   23 Statement: SelectStmt •

    $default  reduce using rule 23 (Statement)


State 193

   21 Statement: IfStmt •

    $default  reduce using rule 21 (Statement)


State 194

   22 Statement: SwitchStmt •

    $default  reduce using rule 22 (Statement)


State 195

   71 SwitchStmt: ExprSwitchStmt •

    $default  reduce using rule 71 (SwitchStmt)


State 196

   13 Statement: SimpleStmt •

    $default  reduce using rule 13 (Statement)


State 197

  118 SimpleStmt: EmptyStatement •

    $default  reduce using rule 118 (SimpleStmt)


State 198

  116 SimpleStmt: SendStmt •

    $default  reduce using rule 116 (SimpleStmt)


State 199

  120 SendStmt: Channel • POINTER Expression

    POINTER  shift, and go to state 322


State 200

  117 SimpleStmt: IncDecStmt •

    $default  reduce using rule 117 (SimpleStmt)


State 201

  114 SimpleStmt: Assignment •

    $default  reduce using rule 114 (SimpleStmt)


State 202

  115 SimpleStmt: Expression •
  121 Channel: Expression •
  122 IncDecStmt: Expression • INC
  123           | Expression • DEC
  139 Expression: Expression • binary_op Expression
  237 ExpressionList: Expression •

    INC             shift, and go to state 323
    DEC             shift, and go to state 324
    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    ADDEQ     reduce using rule 237 (ExpressionList)
    DECEQ     reduce using rule 237 (ExpressionList)
    OREQ      reduce using rule 237 (ExpressionList)
    XOREQ     reduce using rule 237 (ExpressionList)
    MULEQ     reduce using rule 237 (ExpressionList)
    DIVEQ     reduce using rule 237 (ExpressionList)
    MODEQ     reduce using rule 237 (ExpressionList)
    LSHIFTEQ  reduce using rule 237 (ExpressionList)
    RSHIFTEQ  reduce using rule 237 (ExpressionList)
    ANDEQ     reduce using rule 237 (ExpressionList)
    ANDXOREQ  reduce using rule 237 (ExpressionList)
    EQ        reduce using rule 237 (ExpressionList)
    XOR       [reduce using rule 115 (SimpleStmt)]
    POINTER   reduce using rule 115 (SimpleStmt)
    POINTER   [reduce using rule 121 (Channel)]
    ','       reduce using rule 237 (ExpressionList)
    '*'       [reduce using rule 115 (SimpleStmt)]
    '&'       [reduce using rule 115 (SimpleStmt)]
    '-'       [reduce using rule 115 (SimpleStmt)]
    '+'       [reduce using rule 115 (SimpleStmt)]
    $default  reduce using rule 115 (SimpleStmt)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 203

   20 Statement: Block •

    $default  reduce using rule 20 (Statement)


State 204

  221 Block: '{' Statements • '}'
  222 Statements: Statements • Statement

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 171
    SWITCH             shift, and go to state 172
    FALLTHROUGH        shift, and go to state 173
    FOR                shift, and go to state 174
    BREAK              shift, and go to state 175
    SELECT             shift, and go to state 176
    RETURN             shift, and go to state 177
    MAP                shift, and go to state 48
    GO                 shift, and go to state 178
    GOTO               shift, and go to state 179
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONTINUE           shift, and go to state 180
    DEFER              shift, and go to state 181
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 182
    '}'                shift, and go to state 325
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    FUNCTION           [reduce using rule 119 (EmptyStatement)]
    id                 [reduce using rule 119 (EmptyStatement)]
    VAR                [reduce using rule 119 (EmptyStatement)]
    CONST              [reduce using rule 119 (EmptyStatement)]
    IF                 [reduce using rule 119 (EmptyStatement)]
    SWITCH             [reduce using rule 119 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 119 (EmptyStatement)]
    FOR                [reduce using rule 119 (EmptyStatement)]
    BREAK              [reduce using rule 119 (EmptyStatement)]
    SELECT             [reduce using rule 119 (EmptyStatement)]
    RETURN             [reduce using rule 119 (EmptyStatement)]
    MAP                [reduce using rule 119 (EmptyStatement)]
    GO                 [reduce using rule 119 (EmptyStatement)]
    GOTO               [reduce using rule 119 (EmptyStatement)]
    INTERFACE          [reduce using rule 119 (EmptyStatement)]
    CHAN               [reduce using rule 119 (EmptyStatement)]
    CONTINUE           [reduce using rule 119 (EmptyStatement)]
    DEFER              [reduce using rule 119 (EmptyStatement)]
    CONST_INT          [reduce using rule 119 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 119 (EmptyStatement)]
    CONST_STRING       [reduce using rule 119 (EmptyStatement)]
    BOOL               [reduce using rule 119 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 119 (EmptyStatement)]
    CONST_HEX          [reduce using rule 119 (EmptyStatement)]
    CONST_BIN          [reduce using rule 119 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 119 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 119 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 119 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 119 (EmptyStatement)]
    TYPE               [reduce using rule 119 (EmptyStatement)]
    STRUCT             [reduce using rule 119 (EmptyStatement)]
    XOR                [reduce using rule 119 (EmptyStatement)]
    POINTER            [reduce using rule 119 (EmptyStatement)]
    '{'                [reduce using rule 119 (EmptyStatement)]
    '}'                [reduce using rule 119 (EmptyStatement)]
    '('                [reduce using rule 119 (EmptyStatement)]
    '['                [reduce using rule 119 (EmptyStatement)]
    '*'                [reduce using rule 119 (EmptyStatement)]
    '&'                [reduce using rule 119 (EmptyStatement)]
    '-'                [reduce using rule 119 (EmptyStatement)]
    '+'                [reduce using rule 119 (EmptyStatement)]
    '!'                [reduce using rule 119 (EmptyStatement)]

    Statement       go to state 326
    ForStmt         go to state 184
    DeferStmt       go to state 185
    Declaration     go to state 186
    GoStmt          go to state 187
    ReturnStmt      go to state 188
    BreakStmt       go to state 189
    ContinueStmt    go to state 190
    GotoStmt        go to state 191
    SelectStmt      go to state 192
    IfStmt          go to state 193
    SwitchStmt      go to state 194
    ExprSwitchStmt  go to state 195
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 196
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 202
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    Block           go to state 203
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 205

  126 Assignment: ExpressionList • EQ ExpressionList
  127           | ExpressionList • ADDEQ ExpressionList
  128           | ExpressionList • DIVEQ ExpressionList
  129           | ExpressionList • DECEQ ExpressionList
  130           | ExpressionList • MULEQ ExpressionList
  131           | ExpressionList • MODEQ ExpressionList
  132           | ExpressionList • LSHIFTEQ ExpressionList
  133           | ExpressionList • RSHIFTEQ ExpressionList
  134           | ExpressionList • XOREQ ExpressionList
  135           | ExpressionList • ANDXOREQ ExpressionList
  136           | ExpressionList • ANDEQ ExpressionList
  137           | ExpressionList • OREQ ExpressionList
  236 ExpressionList: ExpressionList • ',' Expression

    ADDEQ     shift, and go to state 327
    DECEQ     shift, and go to state 328
    OREQ      shift, and go to state 329
    XOREQ     shift, and go to state 330
    MULEQ     shift, and go to state 331
    DIVEQ     shift, and go to state 332
    MODEQ     shift, and go to state 333
    LSHIFTEQ  shift, and go to state 334
    RSHIFTEQ  shift, and go to state 335
    ANDEQ     shift, and go to state 336
    ANDXOREQ  shift, and go to state 337
    EQ        shift, and go to state 338
    ','       shift, and go to state 285


State 206

  124 Assignment: IdentifierList • PEQ ExpressionList
  125           | IdentifierList • EQ ExpressionList

    EQ   shift, and go to state 339
    PEQ  shift, and go to state 340


State 207

  238 Type: id •
  239     | id • '.' id
  240     | id • TypeArgs
  241     | id • '.' id TypeArgs
  286 IdentifierList: id •
  287               | id • ',' IdentifierList

    '.'  shift, and go to state 96
    '['  shift, and go to state 97
    ','  shift, and go to state 42

    ')'       reduce using rule 238 (Type)
    ')'       [reduce using rule 286 (IdentifierList)]
    '['       [reduce using rule 286 (IdentifierList)]
    ','       [reduce using rule 286 (IdentifierList)]
    $default  reduce using rule 286 (IdentifierList)

    TypeArgs  go to state 98


State 208

  273 Signature: Parameters '(' ')' •

    $default  reduce using rule 273 (Signature)


State 209

  272 Signature: Parameters '(' ParameterList • ')'
  274          | Parameters '(' ParameterList • ',' ')'

    ')'  shift, and go to state 341
    ','  shift, and go to state 342


State 210

  279 Parameters: '(' ParameterList ',' ')' •

    $default  reduce using rule 279 (Parameters)


State 211

  280 ParameterList: ParameterDecl ',' ParameterList •

    $default  reduce using rule 280 (ParameterList)


State 212

  282 ParameterDecl: IdentifierList POINT Type •

    $default  reduce using rule 282 (ParameterDecl)


State 213

   10 MethodDecl: FUNCTION Receiver id Signature Block •

    $default  reduce using rule 10 (MethodDecl)


State 214

  239 Type: id '.' id •
  241     | id '.' id • TypeArgs

    '['  shift, and go to state 97

    '['       [reduce using rule 239 (Type)]
    $default  reduce using rule 239 (Type)

    TypeArgs  go to state 343


State 215

  253 TypeList: Type • ',' TypeList
  254         | Type •

    ','  shift, and go to state 344

    ','       [reduce using rule 254 (TypeList)]
    $default  reduce using rule 254 (TypeList)


State 216

  251 TypeArgs: '[' TypeList • ']'
  252         | '[' TypeList • ',' ']'

    ']'  shift, and go to state 345
    ','  shift, and go to state 346


State 217

  299 MapType: MAP '[' Type • ']' Type

    ']'  shift, and go to state 347


State 218

  292 InterfaceElem: id • Signature
  296 TypeTerm: id •

    '('  shift, and go to state 17

    $default  reduce using rule 296 (TypeTerm)

    Signature   go to state 348
    Parameters  go to state 35


State 219

  289 InterfaceType: INTERFACE '{' '}' •

    $default  reduce using rule 289 (InterfaceType)


State 220

  288 InterfaceType: INTERFACE '{' InterfaceElemList • '}'

    '}'  shift, and go to state 349


State 221

  290 InterfaceElemList: InterfaceElem • InterfaceElemList
  291                  | InterfaceElem •

    id   shift, and go to state 218
    '~'  shift, and go to state 165

    $default  reduce using rule 291 (InterfaceElemList)

    InterfaceElemList  go to state 350
    InterfaceElem      go to state 221
    TypeElem           go to state 222
    TypeTerm           go to state 168


State 222

  293 InterfaceElem: TypeElem •

    $default  reduce using rule 293 (InterfaceElem)


State 223

  301 ChannelType: CHAN POINTER id •

    $default  reduce using rule 301 (ChannelType)


State 224

  255 TypeName: id •
  256         | id • '.' TypeName
  286 IdentifierList: id •
  287               | id • ',' IdentifierList

    '.'  shift, and go to state 351
    ','  shift, and go to state 42

    id            reduce using rule 255 (TypeName)
    id            [reduce using rule 286 (IdentifierList)]
    CONST_STRING  reduce using rule 255 (TypeName)
    '}'           reduce using rule 255 (TypeName)
    '['           reduce using rule 255 (TypeName)
    '['           [reduce using rule 286 (IdentifierList)]
    '*'           reduce using rule 255 (TypeName)
    '*'           [reduce using rule 286 (IdentifierList)]
    $default      reduce using rule 286 (IdentifierList)


State 225

  259 StructType: STRUCT '{' '}' •

    $default  reduce using rule 259 (StructType)


State 226

  266 EmbeddedField: '*' • TypeName TypeArgs
  268              | '*' • TypeName

    id  shift, and go to state 352

    TypeName  go to state 353


State 227

  267 EmbeddedField: TypeName • TypeArgs
  269              | TypeName •

    '['  shift, and go to state 97

    $default  reduce using rule 269 (EmbeddedField)

    TypeArgs  go to state 354


State 228

  258 StructType: STRUCT '{' DeclList • '}'

    '}'  shift, and go to state 355


State 229

  260 DeclList: FieldDecl • DeclList
  261         | FieldDecl •

    id   shift, and go to state 224
    '*'  shift, and go to state 226

    $default  reduce using rule 261 (DeclList)

    TypeName        go to state 227
    DeclList        go to state 356
    FieldDecl       go to state 229
    EmbeddedField   go to state 230
    IdentifierList  go to state 231


State 230

  264 FieldDecl: EmbeddedField • CONST_STRING
  265          | EmbeddedField •

    CONST_STRING  shift, and go to state 357

    $default  reduce using rule 265 (FieldDecl)


State 231

  262 FieldDecl: IdentifierList • Type CONST_STRING
  263          | IdentifierList • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 358
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 232

  220 FunctionLit: FUNCTION Signature • Block
  271 FunctionType: FUNCTION Signature •

    '{'  shift, and go to state 81

    $default  reduce using rule 271 (FunctionType)

    Block  go to state 359


State 233

  180 Operand: id '.' • id
  239 Type: id '.' • id
  241     | id '.' • id TypeArgs

    id  shift, and go to state 360


State 234

  166 UnaryExpr: XOR UnaryExpr •

    $default  reduce using rule 166 (UnaryExpr)


State 235

  300 ChannelType: CHAN • Type
  301            | CHAN • POINTER id
  302            | POINTER CHAN • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 101
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 361
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 236

  169 UnaryExpr: POINTER UnaryExpr •

    $default  reduce using rule 169 (UnaryExpr)


State 237

  180 Operand: id • '.' id
  181        | id •
  200 LiteralType: id •
  208 Key: id •
  238 Type: id •
  239     | id • '.' id
  240     | id • TypeArgs
  241     | id • '.' id TypeArgs

    '.'  shift, and go to state 233
    '['  shift, and go to state 97

    '{'       reduce using rule 200 (LiteralType)
    ':'       reduce using rule 181 (Operand)
    ':'       [reduce using rule 208 (Key)]
    '.'       [reduce using rule 181 (Operand)]
    '.'       [reduce using rule 238 (Type)]
    '('       reduce using rule 181 (Operand)
    '('       [reduce using rule 238 (Type)]
    '['       [reduce using rule 181 (Operand)]
    $default  reduce using rule 181 (Operand)

    TypeArgs  go to state 98


State 238

  203 LiteralValue: '{' '}' •

    $default  reduce using rule 203 (LiteralValue)


State 239

  139 Expression: Expression • binary_op Expression
  209 Key: Expression •
  211 Element: Expression •

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    ':'       reduce using rule 209 (Key)
    $default  reduce using rule 211 (Element)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 240

  194 CompositeLit: LiteralValue •
  210 Key: LiteralValue •
  212 Element: LiteralValue •

    '}'       reduce using rule 194 (CompositeLit)
    '}'       [reduce using rule 212 (Element)]
    ':'       reduce using rule 194 (CompositeLit)
    ':'       [reduce using rule 210 (Key)]
    ','       reduce using rule 194 (CompositeLit)
    ','       [reduce using rule 212 (Element)]
    $default  reduce using rule 194 (CompositeLit)


State 241

  201 LiteralValue: '{' ElementList • '}'
  202             | '{' ElementList • ',' '}'
  204 ElementList: ElementList • ',' KeyedElement

    '}'  shift, and go to state 362
    ','  shift, and go to state 363


State 242

  205 ElementList: KeyedElement •

    $default  reduce using rule 205 (ElementList)


State 243

  206 KeyedElement: Key • ':' Element

    ':'  shift, and go to state 364


State 244

  207 KeyedElement: Element •

    $default  reduce using rule 207 (KeyedElement)


State 245

  185 Operand: '(' ExpressionList • ')'
  236 ExpressionList: ExpressionList • ',' Expression

    ')'  shift, and go to state 365
    ','  shift, and go to state 285


State 246

  177 Conversion: Type • '(' ExpressionList ')'
  178           | Type • '(' ExpressionList ',' ')'
  179 MethodExpr: Type • '.' id
  242 Type: '(' Type • ')'

    '.'  shift, and go to state 286
    '('  shift, and go to state 287
    ')'  shift, and go to state 289


State 247

  197 LiteralType: '[' POINT • ']' Type

    ']'  shift, and go to state 366


State 248

  167 UnaryExpr: '*' UnaryExpr •

    $default  reduce using rule 167 (UnaryExpr)


State 249

  177 Conversion: Type • '(' ExpressionList ')'
  178           | Type • '(' ExpressionList ',' ')'
  179 MethodExpr: Type • '.' id
  270 PointerType: '*' Type •

    '.'  shift, and go to state 286
    '('  shift, and go to state 287

    '.'       [reduce using rule 270 (PointerType)]
    '('       [reduce using rule 270 (PointerType)]
    $default  reduce using rule 270 (PointerType)


State 250

  168 UnaryExpr: '&' UnaryExpr •

    $default  reduce using rule 168 (UnaryExpr)


State 251

  164 UnaryExpr: '-' UnaryExpr •

    $default  reduce using rule 164 (UnaryExpr)


State 252

  163 UnaryExpr: '+' UnaryExpr •

    $default  reduce using rule 163 (UnaryExpr)


State 253

  165 UnaryExpr: '!' UnaryExpr •

    $default  reduce using rule 165 (UnaryExpr)


State 254

  156 rel_op: EQUAL •

    $default  reduce using rule 156 (rel_op)


State 255

  157 rel_op: NOTEQUAL •

    $default  reduce using rule 157 (rel_op)


State 256

  161 rel_op: GREATEROREQUAL •

    $default  reduce using rule 161 (rel_op)


State 257

  160 rel_op: LESSOREQUAL •

    $default  reduce using rule 160 (rel_op)


State 258

  141 binary_op: AND •

    $default  reduce using rule 141 (binary_op)


State 259

  140 binary_op: OR •

    $default  reduce using rule 140 (binary_op)


State 260

  148 mul_op: LSHIFT •

    $default  reduce using rule 148 (mul_op)


State 261

  149 mul_op: RSHIFT •

    $default  reduce using rule 149 (mul_op)


State 262

  153 add_op: XOR •

    $default  reduce using rule 153 (add_op)


State 263

  151 mul_op: AMP_EXP •

    $default  reduce using rule 151 (mul_op)


State 264

  145 mul_op: '*' •

    $default  reduce using rule 145 (mul_op)


State 265

  146 mul_op: '/' •

    $default  reduce using rule 146 (mul_op)


State 266

  147 mul_op: '%' •

    $default  reduce using rule 147 (mul_op)


State 267

  150 mul_op: '&' •

    $default  reduce using rule 150 (mul_op)


State 268

  152 add_op: '-' •

    $default  reduce using rule 152 (add_op)


State 269

  154 add_op: '|' •

    $default  reduce using rule 154 (add_op)


State 270

  155 add_op: '+' •

    $default  reduce using rule 155 (add_op)


State 271

  158 rel_op: '<' •

    $default  reduce using rule 158 (rel_op)


State 272

  159 rel_op: '>' •

    $default  reduce using rule 159 (rel_op)


State 273

  139 Expression: Expression binary_op • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 367
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 274

  144 binary_op: mul_op •

    $default  reduce using rule 144 (binary_op)


State 275

  143 binary_op: add_op •

    $default  reduce using rule 143 (binary_op)


State 276

  142 binary_op: rel_op •

    $default  reduce using rule 142 (binary_op)


State 277

  224 Selector: '.' • id
  227 TypeAssertion: '.' • '(' Type ')'

    id   shift, and go to state 368
    '('  shift, and go to state 369


State 278

  228 Arguments: '(' • ExpressionList ')'
  229          | '(' • ExpressionList ',' ')'
  230          | '(' • ExpressionList POINT ')'
  231          | '(' • Type ',' ')'
  232          | '(' • Type POINT ')'
  233          | '(' • Type ')'
  234          | '(' • Type ',' ExpressionList ')'
  235          | '(' • ')'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    ')'                shift, and go to state 370
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 371
    Type            go to state 372
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 279

  225 Index: '[' • Expression ']'
  226      | '[' • Expression ',' ']'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 373
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 280

  174 PrimaryExpr: PrimaryExpr Selector •

    $default  reduce using rule 174 (PrimaryExpr)


State 281

  175 PrimaryExpr: PrimaryExpr Index •

    $default  reduce using rule 175 (PrimaryExpr)


State 282

  176 PrimaryExpr: PrimaryExpr TypeAssertion •

    $default  reduce using rule 176 (PrimaryExpr)


State 283

  171 PrimaryExpr: PrimaryExpr Arguments •

    $default  reduce using rule 171 (PrimaryExpr)


State 284

  193 CompositeLit: LiteralType LiteralValue •

    $default  reduce using rule 193 (CompositeLit)


State 285

  236 ExpressionList: ExpressionList ',' • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 374
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 286

  179 MethodExpr: Type '.' • id

    id  shift, and go to state 375


State 287

  177 Conversion: Type '(' • ExpressionList ')'
  178           | Type '(' • ExpressionList ',' ')'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 376
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 288

  302 ChannelType: POINTER CHAN Type •

    $default  reduce using rule 302 (ChannelType)


State 289

  242 Type: '(' Type ')' •

    $default  reduce using rule 242 (Type)


State 290

  298 SliceType: '[' ']' Type •

    $default  reduce using rule 298 (SliceType)


State 291

  257 ArrayType: '[' Expression ']' • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 377
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 292

  112 VarSpec: IdentifierList Type EQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 112 (VarSpec)


State 293

   88 ConstExpr: Type EQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 88 (ConstExpr)


State 294

  100 TypeParameters: '[' TypeParamList ',' ']' •

    $default  reduce using rule 100 (TypeParameters)


State 295

  102 TypeParamList: TypeParamDecl ',' TypeParamList •

    $default  reduce using rule 102 (TypeParamList)


State 296

  297 TypeTerm: '~' Type •

    $default  reduce using rule 297 (TypeTerm)


State 297

  294 TypeElem: TypeTerm '|' • TypeElem

    id   shift, and go to state 164
    '~'  shift, and go to state 165

    TypeElem  go to state 378
    TypeTerm  go to state 168


State 298

   65 IfStmt: IF SimpleStmt • SEMICOLON Expression Block ELSE IfStmt
   66       | IF SimpleStmt • SEMICOLON Expression Block ELSE Block
   67       | IF SimpleStmt • SEMICOLON Expression Block

    SEMICOLON  shift, and go to state 379


State 299

   68 IfStmt: IF Expression • Block
   69       | IF Expression • Block ELSE IfStmt
   70       | IF Expression • Block ELSE Block
  115 SimpleStmt: Expression •
  121 Channel: Expression •
  122 IncDecStmt: Expression • INC
  123           | Expression • DEC
  139 Expression: Expression • binary_op Expression
  237 ExpressionList: Expression •

    INC             shift, and go to state 323
    DEC             shift, and go to state 324
    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '{'             shift, and go to state 81
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    SEMICOLON  reduce using rule 115 (SimpleStmt)
    POINTER    reduce using rule 121 (Channel)
    $default   reduce using rule 237 (ExpressionList)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276
    Block      go to state 380


State 300

   75 ExprSwitchStmt: SWITCH '{' • ExprCaseClauseList '}'
  201 LiteralValue: '{' • ElementList '}'
  202             | '{' • ElementList ',' '}'
  203             | '{' • '}'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 237
    CASE               shift, and go to state 381
    DEFAULT            shift, and go to state 382
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '}'                shift, and go to state 238
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    ExprCaseClauseList  go to state 383
    ExprCaseClause      go to state 384
    ExprSwitchCase      go to state 385
    Expression          go to state 239
    UnaryExpr           go to state 128
    PrimaryExpr         go to state 129
    Conversion          go to state 130
    MethodExpr          go to state 131
    Operand             go to state 132
    BasicLit            go to state 133
    CompositeLit        go to state 134
    LiteralType         go to state 135
    LiteralValue        go to state 240
    ElementList         go to state 241
    KeyedElement        go to state 242
    Key                 go to state 243
    Element             go to state 244
    int_lit             go to state 137
    imaginary_lit       go to state 138
    float_lit           go to state 139
    FunctionLit         go to state 140
    Type                go to state 142
    ArrayType           go to state 143
    StructType          go to state 144
    PointerType         go to state 60
    FunctionType        go to state 61
    InterfaceType       go to state 62
    SliceType           go to state 145
    MapType             go to state 146
    ChannelType         go to state 65


State 301

   72 ExprSwitchStmt: SWITCH SimpleStmt • SEMICOLON Expression '{' ExprCaseClauseList '}'
   73               | SWITCH SimpleStmt • SEMICOLON '{' ExprCaseClauseList '}'

    SEMICOLON  shift, and go to state 386


State 302

   74 ExprSwitchStmt: SWITCH Expression • '{' ExprCaseClauseList '}'
  115 SimpleStmt: Expression •
  121 Channel: Expression •
  122 IncDecStmt: Expression • INC
  123           | Expression • DEC
  139 Expression: Expression • binary_op Expression
  237 ExpressionList: Expression •

    INC             shift, and go to state 323
    DEC             shift, and go to state 324
    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '{'             shift, and go to state 387
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    SEMICOLON  reduce using rule 115 (SimpleStmt)
    POINTER    reduce using rule 121 (Channel)
    $default   reduce using rule 237 (ExpressionList)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 303

   39 RangeClause: RANGE • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 388
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 304

   27 ForStmt: FOR ForClause • Block

    '{'  shift, and go to state 81

    Block  go to state 389


State 305

   30 ForClause: InitStmt • SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 390


State 306

   28 ForStmt: FOR RangeClause • Block

    '{'  shift, and go to state 81

    Block  go to state 391


State 307

   31 InitStmt: SimpleStmt •

    $default  reduce using rule 31 (InitStmt)


State 308

   26 ForStmt: FOR Expression • Block
  115 SimpleStmt: Expression •
  121 Channel: Expression •
  122 IncDecStmt: Expression • INC
  123           | Expression • DEC
  139 Expression: Expression • binary_op Expression
  237 ExpressionList: Expression •

    INC             shift, and go to state 323
    DEC             shift, and go to state 324
    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '{'             shift, and go to state 81
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    SEMICOLON  reduce using rule 115 (SimpleStmt)
    POINTER    reduce using rule 121 (Channel)
    $default   reduce using rule 237 (ExpressionList)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276
    Block      go to state 392


State 309

   29 ForStmt: FOR Block •

    $default  reduce using rule 29 (ForStmt)


State 310

   37 RangeClause: ExpressionList • EQ RANGE Expression
  126 Assignment: ExpressionList • EQ ExpressionList
  127           | ExpressionList • ADDEQ ExpressionList
  128           | ExpressionList • DIVEQ ExpressionList
  129           | ExpressionList • DECEQ ExpressionList
  130           | ExpressionList • MULEQ ExpressionList
  131           | ExpressionList • MODEQ ExpressionList
  132           | ExpressionList • LSHIFTEQ ExpressionList
  133           | ExpressionList • RSHIFTEQ ExpressionList
  134           | ExpressionList • XOREQ ExpressionList
  135           | ExpressionList • ANDXOREQ ExpressionList
  136           | ExpressionList • ANDEQ ExpressionList
  137           | ExpressionList • OREQ ExpressionList
  236 ExpressionList: ExpressionList • ',' Expression

    ADDEQ     shift, and go to state 327
    DECEQ     shift, and go to state 328
    OREQ      shift, and go to state 329
    XOREQ     shift, and go to state 330
    MULEQ     shift, and go to state 331
    DIVEQ     shift, and go to state 332
    MODEQ     shift, and go to state 333
    LSHIFTEQ  shift, and go to state 334
    RSHIFTEQ  shift, and go to state 335
    ANDEQ     shift, and go to state 336
    ANDXOREQ  shift, and go to state 337
    EQ        shift, and go to state 393
    ','       shift, and go to state 285


State 311

   38 RangeClause: IdentifierList • PEQ RANGE Expression
  124 Assignment: IdentifierList • PEQ ExpressionList
  125           | IdentifierList • EQ ExpressionList

    EQ   shift, and go to state 339
    PEQ  shift, and go to state 394


State 312

   53 Label: id •

    $default  reduce using rule 53 (Label)


State 313

   47 BreakStmt: BREAK Label •

    $default  reduce using rule 47 (BreakStmt)


State 314

   54 SelectStmt: SELECT '{' • CommClauseList '}'
   55           | SELECT '{' • '}'

    CASE     shift, and go to state 395
    DEFAULT  shift, and go to state 396
    '}'      shift, and go to state 397

    CommClauseList  go to state 398
    CommClause      go to state 399
    CommCase        go to state 400


State 315

   45 ReturnStmt: RETURN ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 45 (ReturnStmt)


State 316

   44 GoStmt: GO Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    XOR       [reduce using rule 44 (GoStmt)]
    '*'       [reduce using rule 44 (GoStmt)]
    '&'       [reduce using rule 44 (GoStmt)]
    '-'       [reduce using rule 44 (GoStmt)]
    '+'       [reduce using rule 44 (GoStmt)]
    $default  reduce using rule 44 (GoStmt)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 317

   51 GotoStmt: GOTO Label •

    $default  reduce using rule 51 (GotoStmt)


State 318

   49 ContinueStmt: CONTINUE Label •

    $default  reduce using rule 49 (ContinueStmt)


State 319

   40 DeferStmt: DEFER Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    XOR       [reduce using rule 40 (DeferStmt)]
    '*'       [reduce using rule 40 (DeferStmt)]
    '&'       [reduce using rule 40 (DeferStmt)]
    '-'       [reduce using rule 40 (DeferStmt)]
    '+'       [reduce using rule 40 (DeferStmt)]
    $default  reduce using rule 40 (DeferStmt)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 320

  180 Operand: id • '.' id
  181        | id •
  200 LiteralType: id •
  208 Key: id •
  238 Type: id •
  239     | id • '.' id
  240     | id • TypeArgs
  241     | id • '.' id TypeArgs
  286 IdentifierList: id •
  287               | id • ',' IdentifierList

    '.'  shift, and go to state 233
    '['  shift, and go to state 97
    ','  shift, and go to state 42

    EQ        reduce using rule 181 (Operand)
    EQ        [reduce using rule 286 (IdentifierList)]
    PEQ       reduce using rule 286 (IdentifierList)
    '{'       reduce using rule 181 (Operand)
    '{'       [reduce using rule 200 (LiteralType)]
    ':'       reduce using rule 181 (Operand)
    ':'       [reduce using rule 208 (Key)]
    '.'       [reduce using rule 181 (Operand)]
    '.'       [reduce using rule 238 (Type)]
    '('       reduce using rule 181 (Operand)
    '('       [reduce using rule 238 (Type)]
    '['       [reduce using rule 181 (Operand)]
    ','       [reduce using rule 181 (Operand)]
    $default  reduce using rule 181 (Operand)

    TypeArgs  go to state 98


State 321

  115 SimpleStmt: Expression •
  121 Channel: Expression •
  122 IncDecStmt: Expression • INC
  123           | Expression • DEC
  139 Expression: Expression • binary_op Expression
  209 Key: Expression •
  211 Element: Expression •
  237 ExpressionList: Expression •

    INC             shift, and go to state 323
    DEC             shift, and go to state 324
    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    ADDEQ     reduce using rule 237 (ExpressionList)
    DECEQ     reduce using rule 237 (ExpressionList)
    OREQ      reduce using rule 237 (ExpressionList)
    XOREQ     reduce using rule 237 (ExpressionList)
    MULEQ     reduce using rule 237 (ExpressionList)
    DIVEQ     reduce using rule 237 (ExpressionList)
    MODEQ     reduce using rule 237 (ExpressionList)
    LSHIFTEQ  reduce using rule 237 (ExpressionList)
    RSHIFTEQ  reduce using rule 237 (ExpressionList)
    ANDEQ     reduce using rule 237 (ExpressionList)
    ANDXOREQ  reduce using rule 237 (ExpressionList)
    EQ        reduce using rule 237 (ExpressionList)
    XOR       [reduce using rule 115 (SimpleStmt)]
    POINTER   reduce using rule 115 (SimpleStmt)
    POINTER   [reduce using rule 121 (Channel)]
    '}'       reduce using rule 115 (SimpleStmt)
    '}'       [reduce using rule 211 (Element)]
    ':'       reduce using rule 209 (Key)
    ','       reduce using rule 211 (Element)
    ','       [reduce using rule 237 (ExpressionList)]
    '*'       [reduce using rule 115 (SimpleStmt)]
    '&'       [reduce using rule 115 (SimpleStmt)]
    '-'       [reduce using rule 115 (SimpleStmt)]
    '+'       [reduce using rule 115 (SimpleStmt)]
    $default  reduce using rule 115 (SimpleStmt)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 322

  120 SendStmt: Channel POINTER • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 401
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 323

  122 IncDecStmt: Expression INC •

    $default  reduce using rule 122 (IncDecStmt)


State 324

  123 IncDecStmt: Expression DEC •

    $default  reduce using rule 123 (IncDecStmt)


State 325

  221 Block: '{' Statements '}' •

    $default  reduce using rule 221 (Block)


State 326

  222 Statements: Statements Statement •

    $default  reduce using rule 222 (Statements)


State 327

  127 Assignment: ExpressionList ADDEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 402
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 328

  129 Assignment: ExpressionList DECEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 403
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 329

  137 Assignment: ExpressionList OREQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 404
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 330

  134 Assignment: ExpressionList XOREQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 405
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 331

  130 Assignment: ExpressionList MULEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 406
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 332

  128 Assignment: ExpressionList DIVEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 407
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 333

  131 Assignment: ExpressionList MODEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 408
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 334

  132 Assignment: ExpressionList LSHIFTEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 409
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 335

  133 Assignment: ExpressionList RSHIFTEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 410
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 336

  136 Assignment: ExpressionList ANDEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 411
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 337

  135 Assignment: ExpressionList ANDXOREQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 412
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 338

  126 Assignment: ExpressionList EQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 413
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 339

  125 Assignment: IdentifierList EQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 414
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 340

  124 Assignment: IdentifierList PEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 415
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 341

  272 Signature: Parameters '(' ParameterList ')' •

    $default  reduce using rule 272 (Signature)


State 342

  274 Signature: Parameters '(' ParameterList ',' • ')'

    ')'  shift, and go to state 416


State 343

  241 Type: id '.' id TypeArgs •

    $default  reduce using rule 241 (Type)


State 344

  253 TypeList: Type ',' • TypeList

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 215
    TypeList       go to state 417
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 345

  251 TypeArgs: '[' TypeList ']' •

    $default  reduce using rule 251 (TypeArgs)


State 346

  252 TypeArgs: '[' TypeList ',' • ']'

    ']'  shift, and go to state 418


State 347

  299 MapType: MAP '[' Type ']' • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 419
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 348

  292 InterfaceElem: id Signature •

    $default  reduce using rule 292 (InterfaceElem)


State 349

  288 InterfaceType: INTERFACE '{' InterfaceElemList '}' •

    $default  reduce using rule 288 (InterfaceType)


State 350

  290 InterfaceElemList: InterfaceElem InterfaceElemList •

    $default  reduce using rule 290 (InterfaceElemList)


State 351

  256 TypeName: id '.' • TypeName

    id  shift, and go to state 352

    TypeName  go to state 420


State 352

  255 TypeName: id •
  256         | id • '.' TypeName

    '.'  shift, and go to state 351

    $default  reduce using rule 255 (TypeName)


State 353

  266 EmbeddedField: '*' TypeName • TypeArgs
  268              | '*' TypeName •

    '['  shift, and go to state 97

    $default  reduce using rule 268 (EmbeddedField)

    TypeArgs  go to state 421


State 354

  267 EmbeddedField: TypeName TypeArgs •

    $default  reduce using rule 267 (EmbeddedField)


State 355

  258 StructType: STRUCT '{' DeclList '}' •

    $default  reduce using rule 258 (StructType)


State 356

  260 DeclList: FieldDecl DeclList •

    $default  reduce using rule 260 (DeclList)


State 357

  264 FieldDecl: EmbeddedField CONST_STRING •

    $default  reduce using rule 264 (FieldDecl)


State 358

  262 FieldDecl: IdentifierList Type • CONST_STRING
  263          | IdentifierList Type •

    CONST_STRING  shift, and go to state 422

    $default  reduce using rule 263 (FieldDecl)


State 359

  220 FunctionLit: FUNCTION Signature Block •

    $default  reduce using rule 220 (FunctionLit)


State 360

  180 Operand: id '.' id •
  239 Type: id '.' id •
  241     | id '.' id • TypeArgs

    '['  shift, and go to state 97

    POINT     reduce using rule 180 (Operand)
    POINT     [reduce using rule 239 (Type)]
    '.'       reduce using rule 180 (Operand)
    '.'       [reduce using rule 239 (Type)]
    '('       reduce using rule 180 (Operand)
    '('       [reduce using rule 239 (Type)]
    ')'       reduce using rule 180 (Operand)
    ')'       [reduce using rule 239 (Type)]
    '['       [reduce using rule 180 (Operand)]
    ','       reduce using rule 180 (Operand)
    ','       [reduce using rule 239 (Type)]
    $default  reduce using rule 180 (Operand)

    TypeArgs  go to state 343


State 361

  300 ChannelType: CHAN Type •
  302            | POINTER CHAN Type •

    '.'       reduce using rule 300 (ChannelType)
    '.'       [reduce using rule 302 (ChannelType)]
    '('       reduce using rule 300 (ChannelType)
    '('       [reduce using rule 302 (ChannelType)]
    $default  reduce using rule 302 (ChannelType)


State 362

  201 LiteralValue: '{' ElementList '}' •

    $default  reduce using rule 201 (LiteralValue)


State 363

  202 LiteralValue: '{' ElementList ',' • '}'
  204 ElementList: ElementList ',' • KeyedElement

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 237
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '}'                shift, and go to state 423
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 239
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 240
    KeyedElement   go to state 424
    Key            go to state 243
    Element        go to state 244
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 364

  206 KeyedElement: Key ':' • Element

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 425
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 426
    Element        go to state 427
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 365

  185 Operand: '(' ExpressionList ')' •

    $default  reduce using rule 185 (Operand)


State 366

  197 LiteralType: '[' POINT ']' • Type

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 428
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 367

  139 Expression: Expression • binary_op Expression
  139           | Expression binary_op Expression •

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    EQUAL           [reduce using rule 139 (Expression)]
    NOTEQUAL        [reduce using rule 139 (Expression)]
    GREATEROREQUAL  [reduce using rule 139 (Expression)]
    LESSOREQUAL     [reduce using rule 139 (Expression)]
    AND             [reduce using rule 139 (Expression)]
    OR              [reduce using rule 139 (Expression)]
    LSHIFT          [reduce using rule 139 (Expression)]
    RSHIFT          [reduce using rule 139 (Expression)]
    XOR             [reduce using rule 139 (Expression)]
    AMP_EXP         [reduce using rule 139 (Expression)]
    '*'             [reduce using rule 139 (Expression)]
    '/'             [reduce using rule 139 (Expression)]
    '%'             [reduce using rule 139 (Expression)]
    '&'             [reduce using rule 139 (Expression)]
    '-'             [reduce using rule 139 (Expression)]
    '|'             [reduce using rule 139 (Expression)]
    '+'             [reduce using rule 139 (Expression)]
    '<'             [reduce using rule 139 (Expression)]
    '>'             [reduce using rule 139 (Expression)]
    $default        reduce using rule 139 (Expression)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 368

  224 Selector: '.' id •

    $default  reduce using rule 224 (Selector)


State 369

  227 TypeAssertion: '.' '(' • Type ')'

    FUNCTION   shift, and go to state 46
    id         shift, and go to state 47
    MAP        shift, and go to state 48
    INTERFACE  shift, and go to state 49
    CHAN       shift, and go to state 50
    STRUCT     shift, and go to state 51
    POINTER    shift, and go to state 53
    '('        shift, and go to state 54
    '['        shift, and go to state 55
    '*'        shift, and go to state 56

    Type           go to state 429
    ArrayType      go to state 58
    StructType     go to state 59
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 63
    MapType        go to state 64
    ChannelType    go to state 65


State 370

  235 Arguments: '(' ')' •

    $default  reduce using rule 235 (Arguments)


State 371

  228 Arguments: '(' ExpressionList • ')'
  229          | '(' ExpressionList • ',' ')'
  230          | '(' ExpressionList • POINT ')'
  236 ExpressionList: ExpressionList • ',' Expression

    POINT  shift, and go to state 430
    ')'    shift, and go to state 431
    ','    shift, and go to state 432


State 372

  177 Conversion: Type • '(' ExpressionList ')'
  178           | Type • '(' ExpressionList ',' ')'
  179 MethodExpr: Type • '.' id
  231 Arguments: '(' Type • ',' ')'
  232          | '(' Type • POINT ')'
  233          | '(' Type • ')'
  234          | '(' Type • ',' ExpressionList ')'

    POINT  shift, and go to state 433
    '.'    shift, and go to state 286
    '('    shift, and go to state 287
    ')'    shift, and go to state 434
    ','    shift, and go to state 435


State 373

  139 Expression: Expression • binary_op Expression
  225 Index: '[' Expression • ']'
  226      | '[' Expression • ',' ']'

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    ']'             shift, and go to state 436
    ','             shift, and go to state 437
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 374

  139 Expression: Expression • binary_op Expression
  236 ExpressionList: ExpressionList ',' Expression •

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    XOR       [reduce using rule 236 (ExpressionList)]
    '*'       [reduce using rule 236 (ExpressionList)]
    '&'       [reduce using rule 236 (ExpressionList)]
    '-'       [reduce using rule 236 (ExpressionList)]
    '+'       [reduce using rule 236 (ExpressionList)]
    $default  reduce using rule 236 (ExpressionList)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 375

  179 MethodExpr: Type '.' id •

    $default  reduce using rule 179 (MethodExpr)


State 376

  177 Conversion: Type '(' ExpressionList • ')'
  178           | Type '(' ExpressionList • ',' ')'
  236 ExpressionList: ExpressionList • ',' Expression

    ')'  shift, and go to state 438
    ','  shift, and go to state 439


State 377

  257 ArrayType: '[' Expression ']' Type •

    $default  reduce using rule 257 (ArrayType)


State 378

  294 TypeElem: TypeTerm '|' TypeElem •

    $default  reduce using rule 294 (TypeElem)


State 379

   65 IfStmt: IF SimpleStmt SEMICOLON • Expression Block ELSE IfStmt
   66       | IF SimpleStmt SEMICOLON • Expression Block ELSE Block
   67       | IF SimpleStmt SEMICOLON • Expression Block

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 440
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 380

   68 IfStmt: IF Expression Block •
   69       | IF Expression Block • ELSE IfStmt
   70       | IF Expression Block • ELSE Block

    ELSE  shift, and go to state 441

    $default  reduce using rule 68 (IfStmt)


State 381

   79 ExprSwitchCase: CASE • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 442
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 382

   80 ExprSwitchCase: DEFAULT •

    $default  reduce using rule 80 (ExprSwitchCase)


State 383

   75 ExprSwitchStmt: SWITCH '{' ExprCaseClauseList • '}'

    '}'  shift, and go to state 443


State 384

   76 ExprCaseClauseList: ExprCaseClause • ExprCaseClauseList
   77                   | ExprCaseClause •

    CASE     shift, and go to state 381
    DEFAULT  shift, and go to state 382

    $default  reduce using rule 77 (ExprCaseClauseList)

    ExprCaseClauseList  go to state 444
    ExprCaseClause      go to state 384
    ExprSwitchCase      go to state 385


State 385

   78 ExprCaseClause: ExprSwitchCase • ':' Statements

    ':'  shift, and go to state 445


State 386

   72 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON • Expression '{' ExprCaseClauseList '}'
   73               | SWITCH SimpleStmt SEMICOLON • '{' ExprCaseClauseList '}'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 446
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 447
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 387

   74 ExprSwitchStmt: SWITCH Expression '{' • ExprCaseClauseList '}'

    CASE     shift, and go to state 381
    DEFAULT  shift, and go to state 382

    ExprCaseClauseList  go to state 448
    ExprCaseClause      go to state 384
    ExprSwitchCase      go to state 385


State 388

   39 RangeClause: RANGE Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    $default  reduce using rule 39 (RangeClause)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 389

   27 ForStmt: FOR ForClause Block •

    $default  reduce using rule 27 (ForStmt)


State 390

   30 ForClause: InitStmt SEMICOLON • Condition SEMICOLON PostStmt

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    $default  reduce using rule 34 (Condition)

    Condition      go to state 449
    Expression     go to state 450
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 391

   28 ForStmt: FOR RangeClause Block •

    $default  reduce using rule 28 (ForStmt)


State 392

   26 ForStmt: FOR Expression Block •

    $default  reduce using rule 26 (ForStmt)


State 393

   37 RangeClause: ExpressionList EQ • RANGE Expression
  126 Assignment: ExpressionList EQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    RANGE              shift, and go to state 451
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 413
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 394

   38 RangeClause: IdentifierList PEQ • RANGE Expression
  124 Assignment: IdentifierList PEQ • ExpressionList

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    RANGE              shift, and go to state 452
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 415
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 395

   59 CommCase: CASE • SendStmt
   60         | CASE • RecvStmt

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    RecvStmt        go to state 453
    SendStmt        go to state 454
    Channel         go to state 199
    Expression      go to state 455
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 456
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 457
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 396

   61 CommCase: DEFAULT •

    $default  reduce using rule 61 (CommCase)


State 397

   55 SelectStmt: SELECT '{' '}' •

    $default  reduce using rule 55 (SelectStmt)


State 398

   54 SelectStmt: SELECT '{' CommClauseList • '}'
   56 CommClauseList: CommClauseList • CommClause

    CASE     shift, and go to state 395
    DEFAULT  shift, and go to state 396
    '}'      shift, and go to state 458

    CommClause  go to state 459
    CommCase    go to state 400


State 399

   57 CommClauseList: CommClause •

    $default  reduce using rule 57 (CommClauseList)


State 400

   58 CommClause: CommCase • ':' Statements

    ':'  shift, and go to state 460


State 401

  120 SendStmt: Channel POINTER Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    XOR       [reduce using rule 120 (SendStmt)]
    '*'       [reduce using rule 120 (SendStmt)]
    '&'       [reduce using rule 120 (SendStmt)]
    '-'       [reduce using rule 120 (SendStmt)]
    '+'       [reduce using rule 120 (SendStmt)]
    $default  reduce using rule 120 (SendStmt)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 402

  127 Assignment: ExpressionList ADDEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 127 (Assignment)


State 403

  129 Assignment: ExpressionList DECEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 129 (Assignment)


State 404

  137 Assignment: ExpressionList OREQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 137 (Assignment)


State 405

  134 Assignment: ExpressionList XOREQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 134 (Assignment)


State 406

  130 Assignment: ExpressionList MULEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 130 (Assignment)


State 407

  128 Assignment: ExpressionList DIVEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 128 (Assignment)


State 408

  131 Assignment: ExpressionList MODEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 131 (Assignment)


State 409

  132 Assignment: ExpressionList LSHIFTEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 132 (Assignment)


State 410

  133 Assignment: ExpressionList RSHIFTEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 133 (Assignment)


State 411

  136 Assignment: ExpressionList ANDEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 136 (Assignment)


State 412

  135 Assignment: ExpressionList ANDXOREQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 135 (Assignment)


State 413

  126 Assignment: ExpressionList EQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 126 (Assignment)


State 414

  125 Assignment: IdentifierList EQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 125 (Assignment)


State 415

  124 Assignment: IdentifierList PEQ ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 124 (Assignment)


State 416

  274 Signature: Parameters '(' ParameterList ',' ')' •

    $default  reduce using rule 274 (Signature)


State 417

  253 TypeList: Type ',' TypeList •

    $default  reduce using rule 253 (TypeList)


State 418

  252 TypeArgs: '[' TypeList ',' ']' •

    $default  reduce using rule 252 (TypeArgs)


State 419

  299 MapType: MAP '[' Type ']' Type •

    $default  reduce using rule 299 (MapType)


State 420

  256 TypeName: id '.' TypeName •

    $default  reduce using rule 256 (TypeName)


State 421

  266 EmbeddedField: '*' TypeName TypeArgs •

    $default  reduce using rule 266 (EmbeddedField)


State 422

  262 FieldDecl: IdentifierList Type CONST_STRING •

    $default  reduce using rule 262 (FieldDecl)


State 423

  202 LiteralValue: '{' ElementList ',' '}' •

    $default  reduce using rule 202 (LiteralValue)


State 424

  204 ElementList: ElementList ',' KeyedElement •

    $default  reduce using rule 204 (ElementList)


State 425

  139 Expression: Expression • binary_op Expression
  211 Element: Expression •

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    $default  reduce using rule 211 (Element)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 426

  194 CompositeLit: LiteralValue •
  212 Element: LiteralValue •

    '}'       reduce using rule 194 (CompositeLit)
    '}'       [reduce using rule 212 (Element)]
    ','       reduce using rule 194 (CompositeLit)
    ','       [reduce using rule 212 (Element)]
    $default  reduce using rule 194 (CompositeLit)


State 427

  206 KeyedElement: Key ':' Element •

    $default  reduce using rule 206 (KeyedElement)


State 428

  197 LiteralType: '[' POINT ']' Type •

    $default  reduce using rule 197 (LiteralType)


State 429

  227 TypeAssertion: '.' '(' Type • ')'

    ')'  shift, and go to state 461


State 430

  230 Arguments: '(' ExpressionList POINT • ')'

    ')'  shift, and go to state 462


State 431

  228 Arguments: '(' ExpressionList ')' •

    $default  reduce using rule 228 (Arguments)


State 432

  229 Arguments: '(' ExpressionList ',' • ')'
  236 ExpressionList: ExpressionList ',' • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    ')'                shift, and go to state 463
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 374
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 433

  232 Arguments: '(' Type POINT • ')'

    ')'  shift, and go to state 464


State 434

  233 Arguments: '(' Type ')' •

    $default  reduce using rule 233 (Arguments)


State 435

  231 Arguments: '(' Type ',' • ')'
  234          | '(' Type ',' • ExpressionList ')'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    ')'                shift, and go to state 465
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression      go to state 127
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 466
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 436

  225 Index: '[' Expression ']' •

    $default  reduce using rule 225 (Index)


State 437

  226 Index: '[' Expression ',' • ']'

    ']'  shift, and go to state 467


State 438

  177 Conversion: Type '(' ExpressionList ')' •

    $default  reduce using rule 177 (Conversion)


State 439

  178 Conversion: Type '(' ExpressionList ',' • ')'
  236 ExpressionList: ExpressionList ',' • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    ')'                shift, and go to state 468
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 374
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 440

   65 IfStmt: IF SimpleStmt SEMICOLON Expression • Block ELSE IfStmt
   66       | IF SimpleStmt SEMICOLON Expression • Block ELSE Block
   67       | IF SimpleStmt SEMICOLON Expression • Block
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '{'             shift, and go to state 81
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276
    Block      go to state 469


State 441

   69 IfStmt: IF Expression Block ELSE • IfStmt
   70       | IF Expression Block ELSE • Block

    IF   shift, and go to state 171
    '{'  shift, and go to state 81

    IfStmt  go to state 470
    Block   go to state 471


State 442

   79 ExprSwitchCase: CASE ExpressionList •
  236 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 79 (ExprSwitchCase)


State 443

   75 ExprSwitchStmt: SWITCH '{' ExprCaseClauseList '}' •

    $default  reduce using rule 75 (ExprSwitchStmt)


State 444

   76 ExprCaseClauseList: ExprCaseClause ExprCaseClauseList •

    $default  reduce using rule 76 (ExprCaseClauseList)


State 445

   78 ExprCaseClause: ExprSwitchCase ':' • Statements

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 171
    SWITCH             shift, and go to state 172
    FALLTHROUGH        shift, and go to state 173
    FOR                shift, and go to state 174
    BREAK              shift, and go to state 175
    SELECT             shift, and go to state 176
    RETURN             shift, and go to state 177
    MAP                shift, and go to state 48
    GO                 shift, and go to state 178
    GOTO               shift, and go to state 179
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONTINUE           shift, and go to state 180
    DEFER              shift, and go to state 181
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 182
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    FUNCTION           [reduce using rule 119 (EmptyStatement)]
    id                 [reduce using rule 119 (EmptyStatement)]
    VAR                [reduce using rule 119 (EmptyStatement)]
    CONST              [reduce using rule 119 (EmptyStatement)]
    IF                 [reduce using rule 119 (EmptyStatement)]
    SWITCH             [reduce using rule 119 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 119 (EmptyStatement)]
    FOR                [reduce using rule 119 (EmptyStatement)]
    BREAK              [reduce using rule 119 (EmptyStatement)]
    SELECT             [reduce using rule 119 (EmptyStatement)]
    RETURN             [reduce using rule 119 (EmptyStatement)]
    MAP                [reduce using rule 119 (EmptyStatement)]
    GO                 [reduce using rule 119 (EmptyStatement)]
    GOTO               [reduce using rule 119 (EmptyStatement)]
    INTERFACE          [reduce using rule 119 (EmptyStatement)]
    CHAN               [reduce using rule 119 (EmptyStatement)]
    CONTINUE           [reduce using rule 119 (EmptyStatement)]
    DEFER              [reduce using rule 119 (EmptyStatement)]
    CONST_INT          [reduce using rule 119 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 119 (EmptyStatement)]
    CONST_STRING       [reduce using rule 119 (EmptyStatement)]
    BOOL               [reduce using rule 119 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 119 (EmptyStatement)]
    CONST_HEX          [reduce using rule 119 (EmptyStatement)]
    CONST_BIN          [reduce using rule 119 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 119 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 119 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 119 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 119 (EmptyStatement)]
    TYPE               [reduce using rule 119 (EmptyStatement)]
    STRUCT             [reduce using rule 119 (EmptyStatement)]
    XOR                [reduce using rule 119 (EmptyStatement)]
    POINTER            [reduce using rule 119 (EmptyStatement)]
    '{'                [reduce using rule 119 (EmptyStatement)]
    '('                [reduce using rule 119 (EmptyStatement)]
    '['                [reduce using rule 119 (EmptyStatement)]
    '*'                [reduce using rule 119 (EmptyStatement)]
    '&'                [reduce using rule 119 (EmptyStatement)]
    '-'                [reduce using rule 119 (EmptyStatement)]
    '+'                [reduce using rule 119 (EmptyStatement)]
    '!'                [reduce using rule 119 (EmptyStatement)]
    $default           reduce using rule 119 (EmptyStatement)

    Statement       go to state 183
    ForStmt         go to state 184
    DeferStmt       go to state 185
    Declaration     go to state 186
    GoStmt          go to state 187
    ReturnStmt      go to state 188
    BreakStmt       go to state 189
    ContinueStmt    go to state 190
    GotoStmt        go to state 191
    SelectStmt      go to state 192
    IfStmt          go to state 193
    SwitchStmt      go to state 194
    ExprSwitchStmt  go to state 195
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 196
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 202
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    Block           go to state 203
    Statements      go to state 472
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 446

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON '{' • ExprCaseClauseList '}'
  201 LiteralValue: '{' • ElementList '}'
  202             | '{' • ElementList ',' '}'
  203             | '{' • '}'

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 237
    CASE               shift, and go to state 381
    DEFAULT            shift, and go to state 382
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '}'                shift, and go to state 238
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    ExprCaseClauseList  go to state 473
    ExprCaseClause      go to state 384
    ExprSwitchCase      go to state 385
    Expression          go to state 239
    UnaryExpr           go to state 128
    PrimaryExpr         go to state 129
    Conversion          go to state 130
    MethodExpr          go to state 131
    Operand             go to state 132
    BasicLit            go to state 133
    CompositeLit        go to state 134
    LiteralType         go to state 135
    LiteralValue        go to state 240
    ElementList         go to state 241
    KeyedElement        go to state 242
    Key                 go to state 243
    Element             go to state 244
    int_lit             go to state 137
    imaginary_lit       go to state 138
    float_lit           go to state 139
    FunctionLit         go to state 140
    Type                go to state 142
    ArrayType           go to state 143
    StructType          go to state 144
    PointerType         go to state 60
    FunctionType        go to state 61
    InterfaceType       go to state 62
    SliceType           go to state 145
    MapType             go to state 146
    ChannelType         go to state 65


State 447

   72 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression • '{' ExprCaseClauseList '}'
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '{'             shift, and go to state 474
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 448

   74 ExprSwitchStmt: SWITCH Expression '{' ExprCaseClauseList • '}'

    '}'  shift, and go to state 475


State 449

   30 ForClause: InitStmt SEMICOLON Condition • SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 476


State 450

   33 Condition: Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    $default  reduce using rule 33 (Condition)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 451

   37 RangeClause: ExpressionList EQ RANGE • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 477
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 452

   38 RangeClause: IdentifierList PEQ RANGE • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 478
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 453

   60 CommCase: CASE RecvStmt •

    $default  reduce using rule 60 (CommCase)


State 454

   59 CommCase: CASE SendStmt •

    $default  reduce using rule 59 (CommCase)


State 455

   64 RecvStmt: Expression •
  121 Channel: Expression •
  139 Expression: Expression • binary_op Expression
  237 ExpressionList: Expression •

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    POINTER   reduce using rule 121 (Channel)
    ':'       reduce using rule 64 (RecvStmt)
    $default  reduce using rule 237 (ExpressionList)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 456

   62 RecvStmt: ExpressionList • EQ Expression
  236 ExpressionList: ExpressionList • ',' Expression

    EQ   shift, and go to state 479
    ','  shift, and go to state 285


State 457

   63 RecvStmt: IdentifierList • PEQ Expression

    PEQ  shift, and go to state 480


State 458

   54 SelectStmt: SELECT '{' CommClauseList '}' •

    $default  reduce using rule 54 (SelectStmt)


State 459

   56 CommClauseList: CommClauseList CommClause •

    $default  reduce using rule 56 (CommClauseList)


State 460

   58 CommClause: CommCase ':' • Statements

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 171
    SWITCH             shift, and go to state 172
    FALLTHROUGH        shift, and go to state 173
    FOR                shift, and go to state 174
    BREAK              shift, and go to state 175
    SELECT             shift, and go to state 176
    RETURN             shift, and go to state 177
    MAP                shift, and go to state 48
    GO                 shift, and go to state 178
    GOTO               shift, and go to state 179
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONTINUE           shift, and go to state 180
    DEFER              shift, and go to state 181
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 182
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    FUNCTION           [reduce using rule 119 (EmptyStatement)]
    id                 [reduce using rule 119 (EmptyStatement)]
    VAR                [reduce using rule 119 (EmptyStatement)]
    CONST              [reduce using rule 119 (EmptyStatement)]
    IF                 [reduce using rule 119 (EmptyStatement)]
    SWITCH             [reduce using rule 119 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 119 (EmptyStatement)]
    FOR                [reduce using rule 119 (EmptyStatement)]
    BREAK              [reduce using rule 119 (EmptyStatement)]
    SELECT             [reduce using rule 119 (EmptyStatement)]
    RETURN             [reduce using rule 119 (EmptyStatement)]
    MAP                [reduce using rule 119 (EmptyStatement)]
    GO                 [reduce using rule 119 (EmptyStatement)]
    GOTO               [reduce using rule 119 (EmptyStatement)]
    INTERFACE          [reduce using rule 119 (EmptyStatement)]
    CHAN               [reduce using rule 119 (EmptyStatement)]
    CONTINUE           [reduce using rule 119 (EmptyStatement)]
    DEFER              [reduce using rule 119 (EmptyStatement)]
    CONST_INT          [reduce using rule 119 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 119 (EmptyStatement)]
    CONST_STRING       [reduce using rule 119 (EmptyStatement)]
    BOOL               [reduce using rule 119 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 119 (EmptyStatement)]
    CONST_HEX          [reduce using rule 119 (EmptyStatement)]
    CONST_BIN          [reduce using rule 119 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 119 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 119 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 119 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 119 (EmptyStatement)]
    TYPE               [reduce using rule 119 (EmptyStatement)]
    STRUCT             [reduce using rule 119 (EmptyStatement)]
    XOR                [reduce using rule 119 (EmptyStatement)]
    POINTER            [reduce using rule 119 (EmptyStatement)]
    '{'                [reduce using rule 119 (EmptyStatement)]
    '('                [reduce using rule 119 (EmptyStatement)]
    '['                [reduce using rule 119 (EmptyStatement)]
    '*'                [reduce using rule 119 (EmptyStatement)]
    '&'                [reduce using rule 119 (EmptyStatement)]
    '-'                [reduce using rule 119 (EmptyStatement)]
    '+'                [reduce using rule 119 (EmptyStatement)]
    '!'                [reduce using rule 119 (EmptyStatement)]
    $default           reduce using rule 119 (EmptyStatement)

    Statement       go to state 183
    ForStmt         go to state 184
    DeferStmt       go to state 185
    Declaration     go to state 186
    GoStmt          go to state 187
    ReturnStmt      go to state 188
    BreakStmt       go to state 189
    ContinueStmt    go to state 190
    GotoStmt        go to state 191
    SelectStmt      go to state 192
    IfStmt          go to state 193
    SwitchStmt      go to state 194
    ExprSwitchStmt  go to state 195
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 196
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 202
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    Block           go to state 203
    Statements      go to state 481
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 461

  227 TypeAssertion: '.' '(' Type ')' •

    $default  reduce using rule 227 (TypeAssertion)


State 462

  230 Arguments: '(' ExpressionList POINT ')' •

    $default  reduce using rule 230 (Arguments)


State 463

  229 Arguments: '(' ExpressionList ',' ')' •

    $default  reduce using rule 229 (Arguments)


State 464

  232 Arguments: '(' Type POINT ')' •

    $default  reduce using rule 232 (Arguments)


State 465

  231 Arguments: '(' Type ',' ')' •

    $default  reduce using rule 231 (Arguments)


State 466

  234 Arguments: '(' Type ',' ExpressionList • ')'
  236 ExpressionList: ExpressionList • ',' Expression

    ')'  shift, and go to state 482
    ','  shift, and go to state 285


State 467

  226 Index: '[' Expression ',' ']' •

    $default  reduce using rule 226 (Index)


State 468

  178 Conversion: Type '(' ExpressionList ',' ')' •

    $default  reduce using rule 178 (Conversion)


State 469

   65 IfStmt: IF SimpleStmt SEMICOLON Expression Block • ELSE IfStmt
   66       | IF SimpleStmt SEMICOLON Expression Block • ELSE Block
   67       | IF SimpleStmt SEMICOLON Expression Block •

    ELSE  shift, and go to state 483

    $default  reduce using rule 67 (IfStmt)


State 470

   69 IfStmt: IF Expression Block ELSE IfStmt •

    $default  reduce using rule 69 (IfStmt)


State 471

   70 IfStmt: IF Expression Block ELSE Block •

    $default  reduce using rule 70 (IfStmt)


State 472

   78 ExprCaseClause: ExprSwitchCase ':' Statements •
  222 Statements: Statements • Statement

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 171
    SWITCH             shift, and go to state 172
    FALLTHROUGH        shift, and go to state 173
    FOR                shift, and go to state 174
    BREAK              shift, and go to state 175
    SELECT             shift, and go to state 176
    RETURN             shift, and go to state 177
    MAP                shift, and go to state 48
    GO                 shift, and go to state 178
    GOTO               shift, and go to state 179
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONTINUE           shift, and go to state 180
    DEFER              shift, and go to state 181
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 182
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    FUNCTION           [reduce using rule 119 (EmptyStatement)]
    id                 [reduce using rule 119 (EmptyStatement)]
    VAR                [reduce using rule 119 (EmptyStatement)]
    CONST              [reduce using rule 119 (EmptyStatement)]
    IF                 [reduce using rule 119 (EmptyStatement)]
    SWITCH             [reduce using rule 119 (EmptyStatement)]
    CASE               reduce using rule 78 (ExprCaseClause)
    CASE               [reduce using rule 119 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 119 (EmptyStatement)]
    DEFAULT            reduce using rule 78 (ExprCaseClause)
    DEFAULT            [reduce using rule 119 (EmptyStatement)]
    FOR                [reduce using rule 119 (EmptyStatement)]
    BREAK              [reduce using rule 119 (EmptyStatement)]
    SELECT             [reduce using rule 119 (EmptyStatement)]
    RETURN             [reduce using rule 119 (EmptyStatement)]
    MAP                [reduce using rule 119 (EmptyStatement)]
    GO                 [reduce using rule 119 (EmptyStatement)]
    GOTO               [reduce using rule 119 (EmptyStatement)]
    INTERFACE          [reduce using rule 119 (EmptyStatement)]
    CHAN               [reduce using rule 119 (EmptyStatement)]
    CONTINUE           [reduce using rule 119 (EmptyStatement)]
    DEFER              [reduce using rule 119 (EmptyStatement)]
    CONST_INT          [reduce using rule 119 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 119 (EmptyStatement)]
    CONST_STRING       [reduce using rule 119 (EmptyStatement)]
    BOOL               [reduce using rule 119 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 119 (EmptyStatement)]
    CONST_HEX          [reduce using rule 119 (EmptyStatement)]
    CONST_BIN          [reduce using rule 119 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 119 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 119 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 119 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 119 (EmptyStatement)]
    TYPE               [reduce using rule 119 (EmptyStatement)]
    STRUCT             [reduce using rule 119 (EmptyStatement)]
    XOR                [reduce using rule 119 (EmptyStatement)]
    POINTER            [reduce using rule 119 (EmptyStatement)]
    '{'                [reduce using rule 119 (EmptyStatement)]
    '}'                reduce using rule 78 (ExprCaseClause)
    '}'                [reduce using rule 119 (EmptyStatement)]
    '('                [reduce using rule 119 (EmptyStatement)]
    '['                [reduce using rule 119 (EmptyStatement)]
    '*'                [reduce using rule 119 (EmptyStatement)]
    '&'                [reduce using rule 119 (EmptyStatement)]
    '-'                [reduce using rule 119 (EmptyStatement)]
    '+'                [reduce using rule 119 (EmptyStatement)]
    '!'                [reduce using rule 119 (EmptyStatement)]
    $default           reduce using rule 78 (ExprCaseClause)

    Statement       go to state 326
    ForStmt         go to state 184
    DeferStmt       go to state 185
    Declaration     go to state 186
    GoStmt          go to state 187
    ReturnStmt      go to state 188
    BreakStmt       go to state 189
    ContinueStmt    go to state 190
    GotoStmt        go to state 191
    SelectStmt      go to state 192
    IfStmt          go to state 193
    SwitchStmt      go to state 194
    ExprSwitchStmt  go to state 195
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 196
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 202
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    Block           go to state 203
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 473

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON '{' ExprCaseClauseList • '}'

    '}'  shift, and go to state 484


State 474

   72 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression '{' • ExprCaseClauseList '}'

    CASE     shift, and go to state 381
    DEFAULT  shift, and go to state 382

    ExprCaseClauseList  go to state 485
    ExprCaseClause      go to state 384
    ExprSwitchCase      go to state 385


State 475

   74 ExprSwitchStmt: SWITCH Expression '{' ExprCaseClauseList '}' •

    $default  reduce using rule 74 (ExprSwitchStmt)


State 476

   30 ForClause: InitStmt SEMICOLON Condition SEMICOLON • PostStmt

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    '{'  [reduce using rule 36 (PostStmt)]
    '{'  [reduce using rule 119 (EmptyStatement)]

    PostStmt        go to state 486
    SimpleStmt      go to state 487
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 202
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 477

   37 RangeClause: ExpressionList EQ RANGE Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    $default  reduce using rule 37 (RangeClause)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 478

   38 RangeClause: IdentifierList PEQ RANGE Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    $default  reduce using rule 38 (RangeClause)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 479

   62 RecvStmt: ExpressionList EQ • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 488
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 480

   63 RecvStmt: IdentifierList PEQ • Expression

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 105
    MAP                shift, and go to state 48
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 119
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    Expression     go to state 489
    UnaryExpr      go to state 128
    PrimaryExpr    go to state 129
    Conversion     go to state 130
    MethodExpr     go to state 131
    Operand        go to state 132
    BasicLit       go to state 133
    CompositeLit   go to state 134
    LiteralType    go to state 135
    LiteralValue   go to state 136
    int_lit        go to state 137
    imaginary_lit  go to state 138
    float_lit      go to state 139
    FunctionLit    go to state 140
    Type           go to state 142
    ArrayType      go to state 143
    StructType     go to state 144
    PointerType    go to state 60
    FunctionType   go to state 61
    InterfaceType  go to state 62
    SliceType      go to state 145
    MapType        go to state 146
    ChannelType    go to state 65


State 481

   58 CommClause: CommCase ':' Statements •
  222 Statements: Statements • Statement

    FUNCTION           shift, and go to state 104
    id                 shift, and go to state 170
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 171
    SWITCH             shift, and go to state 172
    FALLTHROUGH        shift, and go to state 173
    FOR                shift, and go to state 174
    BREAK              shift, and go to state 175
    SELECT             shift, and go to state 176
    RETURN             shift, and go to state 177
    MAP                shift, and go to state 48
    GO                 shift, and go to state 178
    GOTO               shift, and go to state 179
    INTERFACE          shift, and go to state 49
    CHAN               shift, and go to state 50
    CONTINUE           shift, and go to state 180
    DEFER              shift, and go to state 181
    CONST_INT          shift, and go to state 106
    CONST_CHAR         shift, and go to state 107
    CONST_STRING       shift, and go to state 108
    BOOL               shift, and go to state 109
    CONST_OCTAL        shift, and go to state 110
    CONST_HEX          shift, and go to state 111
    CONST_BIN          shift, and go to state 112
    DECIMAL_FLOAT_LIT  shift, and go to state 113
    HEX_FLOAT_LIT      shift, and go to state 114
    RUNE_LIT           shift, and go to state 115
    IMAGINARY_LIT      shift, and go to state 116
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 51
    XOR                shift, and go to state 117
    POINTER            shift, and go to state 118
    '{'                shift, and go to state 182
    '('                shift, and go to state 120
    '['                shift, and go to state 121
    '*'                shift, and go to state 122
    '&'                shift, and go to state 123
    '-'                shift, and go to state 124
    '+'                shift, and go to state 125
    '!'                shift, and go to state 126

    FUNCTION           [reduce using rule 119 (EmptyStatement)]
    id                 [reduce using rule 119 (EmptyStatement)]
    VAR                [reduce using rule 119 (EmptyStatement)]
    CONST              [reduce using rule 119 (EmptyStatement)]
    IF                 [reduce using rule 119 (EmptyStatement)]
    SWITCH             [reduce using rule 119 (EmptyStatement)]
    CASE               reduce using rule 58 (CommClause)
    CASE               [reduce using rule 119 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 119 (EmptyStatement)]
    DEFAULT            reduce using rule 58 (CommClause)
    DEFAULT            [reduce using rule 119 (EmptyStatement)]
    FOR                [reduce using rule 119 (EmptyStatement)]
    BREAK              [reduce using rule 119 (EmptyStatement)]
    SELECT             [reduce using rule 119 (EmptyStatement)]
    RETURN             [reduce using rule 119 (EmptyStatement)]
    MAP                [reduce using rule 119 (EmptyStatement)]
    GO                 [reduce using rule 119 (EmptyStatement)]
    GOTO               [reduce using rule 119 (EmptyStatement)]
    INTERFACE          [reduce using rule 119 (EmptyStatement)]
    CHAN               [reduce using rule 119 (EmptyStatement)]
    CONTINUE           [reduce using rule 119 (EmptyStatement)]
    DEFER              [reduce using rule 119 (EmptyStatement)]
    CONST_INT          [reduce using rule 119 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 119 (EmptyStatement)]
    CONST_STRING       [reduce using rule 119 (EmptyStatement)]
    BOOL               [reduce using rule 119 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 119 (EmptyStatement)]
    CONST_HEX          [reduce using rule 119 (EmptyStatement)]
    CONST_BIN          [reduce using rule 119 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 119 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 119 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 119 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 119 (EmptyStatement)]
    TYPE               [reduce using rule 119 (EmptyStatement)]
    STRUCT             [reduce using rule 119 (EmptyStatement)]
    XOR                [reduce using rule 119 (EmptyStatement)]
    POINTER            [reduce using rule 119 (EmptyStatement)]
    '{'                [reduce using rule 119 (EmptyStatement)]
    '}'                reduce using rule 58 (CommClause)
    '}'                [reduce using rule 119 (EmptyStatement)]
    '('                [reduce using rule 119 (EmptyStatement)]
    '['                [reduce using rule 119 (EmptyStatement)]
    '*'                [reduce using rule 119 (EmptyStatement)]
    '&'                [reduce using rule 119 (EmptyStatement)]
    '-'                [reduce using rule 119 (EmptyStatement)]
    '+'                [reduce using rule 119 (EmptyStatement)]
    '!'                [reduce using rule 119 (EmptyStatement)]
    $default           reduce using rule 58 (CommClause)

    Statement       go to state 326
    ForStmt         go to state 184
    DeferStmt       go to state 185
    Declaration     go to state 186
    GoStmt          go to state 187
    ReturnStmt      go to state 188
    BreakStmt       go to state 189
    ContinueStmt    go to state 190
    GotoStmt        go to state 191
    SelectStmt      go to state 192
    IfStmt          go to state 193
    SwitchStmt      go to state 194
    ExprSwitchStmt  go to state 195
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 196
    EmptyStatement  go to state 197
    SendStmt        go to state 198
    Channel         go to state 199
    IncDecStmt      go to state 200
    Assignment      go to state 201
    Expression      go to state 202
    UnaryExpr       go to state 128
    PrimaryExpr     go to state 129
    Conversion      go to state 130
    MethodExpr      go to state 131
    Operand         go to state 132
    BasicLit        go to state 133
    CompositeLit    go to state 134
    LiteralType     go to state 135
    LiteralValue    go to state 136
    int_lit         go to state 137
    imaginary_lit   go to state 138
    float_lit       go to state 139
    FunctionLit     go to state 140
    Block           go to state 203
    ExpressionList  go to state 205
    Type            go to state 142
    ArrayType       go to state 143
    StructType      go to state 144
    PointerType     go to state 60
    FunctionType    go to state 61
    IdentifierList  go to state 206
    InterfaceType   go to state 62
    SliceType       go to state 145
    MapType         go to state 146
    ChannelType     go to state 65


State 482

  234 Arguments: '(' Type ',' ExpressionList ')' •

    $default  reduce using rule 234 (Arguments)


State 483

   65 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE • IfStmt
   66       | IF SimpleStmt SEMICOLON Expression Block ELSE • Block

    IF   shift, and go to state 171
    '{'  shift, and go to state 81

    IfStmt  go to state 490
    Block   go to state 491


State 484

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON '{' ExprCaseClauseList '}' •

    $default  reduce using rule 73 (ExprSwitchStmt)


State 485

   72 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression '{' ExprCaseClauseList • '}'

    '}'  shift, and go to state 492


State 486

   30 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt •

    $default  reduce using rule 30 (ForClause)


State 487

   35 PostStmt: SimpleStmt •

    $default  reduce using rule 35 (PostStmt)


State 488

   62 RecvStmt: ExpressionList EQ Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    $default  reduce using rule 62 (RecvStmt)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 489

   63 RecvStmt: IdentifierList PEQ Expression •
  139 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 254
    NOTEQUAL        shift, and go to state 255
    GREATEROREQUAL  shift, and go to state 256
    LESSOREQUAL     shift, and go to state 257
    AND             shift, and go to state 258
    OR              shift, and go to state 259
    LSHIFT          shift, and go to state 260
    RSHIFT          shift, and go to state 261
    XOR             shift, and go to state 262
    AMP_EXP         shift, and go to state 263
    '*'             shift, and go to state 264
    '/'             shift, and go to state 265
    '%'             shift, and go to state 266
    '&'             shift, and go to state 267
    '-'             shift, and go to state 268
    '|'             shift, and go to state 269
    '+'             shift, and go to state 270
    '<'             shift, and go to state 271
    '>'             shift, and go to state 272

    $default  reduce using rule 63 (RecvStmt)

    binary_op  go to state 273
    mul_op     go to state 274
    add_op     go to state 275
    rel_op     go to state 276


State 490

   65 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt •

    $default  reduce using rule 65 (IfStmt)


State 491

   66 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE Block •

    $default  reduce using rule 66 (IfStmt)


State 492

   72 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression '{' ExprCaseClauseList '}' •

    $default  reduce using rule 72 (ExprSwitchStmt)
