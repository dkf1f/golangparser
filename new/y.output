Nonterminals useless in grammar

    TypeSwitchStmt
    TypeSwitchGuard
    TypeCaseClauseList
    TypeCaseClause
    TypeSwitchCase


Terminals unused in grammar

    EOL
    METHOD
    NEW
    IOTA
    FLOAT_HEX
    CONST_INT_ERR
    CONST_BIN_ERR
    INT
    STRING
    COMPLEXTYPE
    BYTE
    FLOAT
    RUNE
    UINT
    BOOL_TYPE
    UINTPTR
    ERRORTYPE
    ANYTYPE
    COMPARABLE


Rules useless in grammar

  309 TypeSwitchStmt: SWITCH TypeSwitchGuard '{' TypeCaseClauseList '}'
  310               | SWITCH SimpleStmt SEMICOLON TypeSwitchGuard '{' TypeCaseClauseList '}'

  311 TypeSwitchGuard: id PEQ PrimaryExpr '.' '(' TYPE ')'
  312                | PrimaryExpr '.' '(' TYPE ')'

  313 TypeCaseClauseList: TypeCaseClause TypeCaseClauseList
  314                   | TypeCaseClause

  315 TypeCaseClause: TypeSwitchCase ':' Statements

  316 TypeSwitchCase: CASE TypeList
  317               | DEFAULT


Rules useless in parser due to conflicts

   31 ForClause: SimpleStmt SEMICOLON SEMICOLON
   32          | SimpleStmt SEMICOLON Expression SEMICOLON
   34          | SEMICOLON Expression SEMICOLON

  212 Key: LiteralValue

  214 Element: LiteralValue


State 16 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 26 conflicts: 10 shift/reduce
State 27 conflicts: 1 shift/reduce
State 35 conflicts: 10 shift/reduce
State 39 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 83 conflicts: 41 shift/reduce
State 106 conflicts: 1 shift/reduce, 7 reduce/reduce
State 128 conflicts: 5 shift/reduce
State 130 conflicts: 2 shift/reduce
State 174 conflicts: 2 shift/reduce, 5 reduce/reduce
State 178 conflicts: 1 shift/reduce
State 179 conflicts: 1 shift/reduce
State 181 conflicts: 27 shift/reduce
State 183 conflicts: 1 shift/reduce
State 184 conflicts: 1 shift/reduce
State 186 conflicts: 42 shift/reduce
State 206 conflicts: 5 shift/reduce, 1 reduce/reduce
State 208 conflicts: 42 shift/reduce
State 211 conflicts: 1 shift/reduce, 4 reduce/reduce
State 236 conflicts: 1 shift/reduce, 4 reduce/reduce
State 239 conflicts: 3 reduce/reduce
State 248 conflicts: 2 shift/reduce
State 293 conflicts: 1 shift/reduce
State 318 conflicts: 5 shift/reduce
State 321 conflicts: 5 shift/reduce
State 322 conflicts: 2 shift/reduce, 6 reduce/reduce
State 323 conflicts: 5 shift/reduce, 3 reduce/reduce
State 354 conflicts: 1 shift/reduce, 6 reduce/reduce
State 356 conflicts: 2 reduce/reduce
State 362 conflicts: 19 shift/reduce
State 370 conflicts: 5 shift/reduce
State 388 conflicts: 1 shift/reduce
State 402 conflicts: 5 shift/reduce
State 423 conflicts: 2 reduce/reduce
State 447 conflicts: 41 shift/reduce
State 452 conflicts: 1 shift/reduce, 1 reduce/reduce
State 453 conflicts: 1 shift/reduce, 1 reduce/reduce
State 465 conflicts: 41 shift/reduce
State 481 conflicts: 41 shift/reduce, 3 reduce/reduce
State 487 conflicts: 1 shift/reduce, 1 reduce/reduce
State 492 conflicts: 41 shift/reduce, 3 reduce/reduce


Grammar

    0 $accept: prog $end

    1 prog: PACKAGE IMPORTS
    2     | prog TopLevelDecl

    3 TopLevelDecl: Declaration
    4             | FunctionDecl
    5             | MethodDecl

    6 FunctionDecl: FUNCTION id TypeParameters Signature Block
    7             | FUNCTION id Signature Block
    8             | FUNCTION id Signature
    9             | FUNCTION id TypeParameters Signature

   10 MethodDecl: FUNCTION Receiver MethodName Signature Block

   11 Receiver: Parameters

   12 Statement: Declaration
   13          | SimpleStmt
   14          | GoStmt
   15          | ReturnStmt
   16          | BreakStmt
   17          | ContinueStmt
   18          | GotoStmt
   19          | FALLTHROUGH
   20          | Block
   21          | IfStmt
   22          | SwitchStmt
   23          | SelectStmt
   24          | ForStmt
   25          | DeferStmt

   26 ForStmt: FOR Expression Block
   27        | FOR ForClause Block
   28        | FOR RangeClause Block
   29        | FOR Block

   30 ForClause: SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt
   31          | SimpleStmt SEMICOLON SEMICOLON
   32          | SimpleStmt SEMICOLON Expression SEMICOLON
   33          | SimpleStmt SEMICOLON SEMICOLON SimpleStmt
   34          | SEMICOLON Expression SEMICOLON
   35          | SEMICOLON Expression SEMICOLON SimpleStmt
   36          | SEMICOLON SEMICOLON SimpleStmt

   37 RangeClause: ExpressionList EQ RANGE Expression
   38            | IdentifierList PEQ RANGE Expression
   39            | RANGE Expression

   40 DeferStmt: DEFER Expression

   41 Declaration: ConstDecl
   42            | TypeDecl
   43            | VarDecl

   44 GoStmt: GO Expression

   45 ReturnStmt: RETURN ExpressionList
   46           | RETURN

   47 BreakStmt: BREAK Label
   48          | BREAK

   49 ContinueStmt: CONTINUE Label
   50             | CONTINUE

   51 GotoStmt: GOTO Label
   52         | GOTO

   53 Label: id

   54 SelectStmt: SELECT '{' CommClauseList '}'
   55           | SELECT '{' '}'

   56 CommClauseList: CommClauseList CommClause
   57               | CommClause

   58 CommClause: CommCase ':' Statements

   59 CommCase: CASE SendStmt
   60         | CASE RecvStmt
   61         | DEFAULT

   62 RecvStmt: ExpressionList EQ RecvExpr
   63         | IdentifierList PEQ RecvExpr
   64         | RecvExpr

   65 RecvExpr: Expression

   66 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt
   67       | IF SimpleStmt SEMICOLON Expression Block ELSE Block
   68       | IF SimpleStmt SEMICOLON Expression Block
   69       | IF Expression Block
   70       | IF Expression Block ELSE IfStmt
   71       | IF Expression Block ELSE Block

   72 SwitchStmt: ExprSwitchStmt

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression '{' ExprCaseClauseList '}'
   74               | SWITCH SimpleStmt SEMICOLON '{' ExprCaseClauseList '}'
   75               | SWITCH Expression '{' ExprCaseClauseList '}'
   76               | SWITCH '{' ExprCaseClauseList '}'

   77 ExprCaseClauseList: ExprCaseClause ExprCaseClauseList
   78                   | ExprCaseClause

   79 ExprCaseClause: ExprSwitchCase ':' Statements

   80 ExprSwitchCase: CASE ExpressionList
   81               | DEFAULT

   82 ConstDecl: CONST ConstSpec
   83          | CONST '(' ConstSpecList ')'
   84          | CONST '(' ')'

   85 ConstSpecList: ConstSpec ConstSpecList
   86              | ConstSpec

   87 ConstSpec: IdentifierList ConstExpr
   88          | IdentifierList

   89 ConstExpr: Type EQ ExpressionList
   90          | EQ ExpressionList

   91 TypeDecl: TYPE TypeSpec
   92         | TYPE '(' TypeSpecList ')'
   93         | TYPE '(' ')'

   94 TypeSpecList: TypeSpec TypeSpecList
   95             | TypeSpec

   96 TypeSpec: AliasDecl
   97         | TypeDef

   98 AliasDecl: id EQ Type

   99 TypeDef: id TypeParameters Type

  100 TypeParameters: '[' TypeParamList ']'
  101               | '[' TypeParamList ',' ']'
  102               | ε

  103 TypeParamList: TypeParamDecl ',' TypeParamList
  104              | TypeParamDecl

  105 TypeParamDecl: IdentifierList TypeConstraint

  106 TypeConstraint: TypeElem

  107 VarDecl: VAR VarSpec
  108        | VAR '(' VarSpecList ')'
  109        | VAR '(' ')'

  110 VarSpecList: VarSpec VarSpecList
  111            | VarSpec

  112 VarSpec: IdentifierList Type
  113        | IdentifierList Type EQ ExpressionList
  114        | IdentifierList EQ ExpressionList

  115 SimpleStmt: Assignment
  116           | Expression
  117           | SendStmt
  118           | IncDecStmt
  119           | EmptyStatement

  120 EmptyStatement: ε

  121 SendStmt: Channel POINTER Expression

  122 Channel: Expression

  123 IncDecStmt: Expression INC
  124           | Expression DEC

  125 Assignment: IdentifierList PEQ ExpressionList
  126           | IdentifierList EQ ExpressionList
  127           | ExpressionList EQ ExpressionList
  128           | ExpressionList ADDEQ ExpressionList
  129           | ExpressionList DIVEQ ExpressionList
  130           | ExpressionList DECEQ ExpressionList
  131           | ExpressionList MULEQ ExpressionList
  132           | ExpressionList MODEQ ExpressionList
  133           | ExpressionList LSHIFTEQ ExpressionList
  134           | ExpressionList RSHIFTEQ ExpressionList
  135           | ExpressionList XOREQ ExpressionList
  136           | ExpressionList ANDXOREQ ExpressionList
  137           | ExpressionList ANDEQ ExpressionList
  138           | ExpressionList OREQ ExpressionList

  139 Expression: UnaryExpr
  140           | Expression binary_op Expression

  141 binary_op: OR
  142          | AND
  143          | rel_op
  144          | add_op
  145          | mul_op

  146 mul_op: '*'
  147       | '/'
  148       | '%'
  149       | LSHIFT
  150       | RSHIFT
  151       | '&'
  152       | AMP_EXP

  153 add_op: '-'
  154       | XOR
  155       | '|'
  156       | '+'

  157 rel_op: EQUAL
  158       | NOTEQUAL
  159       | '<'
  160       | '>'
  161       | LESSOREQUAL
  162       | GREATEROREQUAL

  163 UnaryExpr: PrimaryExpr
  164          | '+' UnaryExpr
  165          | '-' UnaryExpr
  166          | '!' UnaryExpr
  167          | XOR UnaryExpr
  168          | '*' UnaryExpr
  169          | '&' UnaryExpr
  170          | POINTER UnaryExpr

  171 PrimaryExpr: Operand
  172            | PrimaryExpr Arguments
  173            | MethodExpr
  174            | Conversion
  175            | PrimaryExpr Selector
  176            | PrimaryExpr Index
  177            | PrimaryExpr Slice
  178            | PrimaryExpr TypeAssertion

  179 Conversion: Type '(' ExpressionList ')'
  180           | Type '(' ExpressionList ',' ')'

  181 MethodExpr: Type '.' MethodName

  182 MethodName: id

  183 Operand: OperandName
  184        | BasicLit
  185        | CompositeLit
  186        | FunctionLit
  187        | '(' ExpressionList ')'

  188 BasicLit: int_lit
  189         | float_lit
  190         | imaginary_lit
  191         | RUNE_LIT
  192         | CONST_CHAR
  193         | CONST_STRING
  194         | BOOL

  195 CompositeLit: LiteralType LiteralValue
  196             | LiteralValue

  197 LiteralType: StructType
  198            | ArrayType
  199            | '[' POINT ']' Type
  200            | SliceType
  201            | MapType
  202            | id

  203 LiteralValue: '{' ElementList '}'
  204             | '{' ElementList ',' '}'
  205             | '{' '}'

  206 ElementList: ElementList ',' KeyedElement
  207            | KeyedElement

  208 KeyedElement: Key ':' Element
  209             | Element

  210 Key: id
  211    | Expression
  212    | LiteralValue

  213 Element: Expression
  214        | LiteralValue

  215 OperandName: id
  216            | id '.' OperandName

  217 int_lit: CONST_BIN
  218        | CONST_HEX
  219        | CONST_OCTAL
  220        | CONST_INT

  221 imaginary_lit: IMAGINARY_LIT

  222 float_lit: DECIMAL_FLOAT_LIT
  223          | HEX_FLOAT_LIT

  224 FunctionLit: FUNCTION Signature Block

  225 Block: '{' Statements '}'

  226 Statements: Statements Statement
  227           | Statement

  228 Selector: '.' id

  229 Index: '[' Expression ']'
  230      | '[' Expression ',' ']'

  231 Slice: '[' Expression ':' Expression ']'
  232      | '[' ':' Expression ']'
  233      | '[' Expression ':' ']'
  234      | '[' ':' ']'
  235      | '[' Expression ':' Expression ':' Expression ']'
  236      | '[' ':' Expression ':' Expression ']'

  237 TypeAssertion: '.' '(' Type ')'

  238 Arguments: '(' ExpressionList ')'
  239          | '(' ExpressionList ',' ')'
  240          | '(' ExpressionList POINT ')'
  241          | '(' Type ',' ')'
  242          | '(' Type POINT ')'
  243          | '(' Type ')'
  244          | '(' Type ',' ExpressionList ')'
  245          | '(' ')'

  246 ExpressionList: ExpressionList ',' Expression
  247               | Expression

  248 Type: TypeName
  249     | TypeName TypeArgs
  250     | '(' Type ')'
  251     | ArrayType
  252     | PointerType
  253     | StructType
  254     | FunctionType
  255     | InterfaceType
  256     | SliceType
  257     | MapType
  258     | ChannelType

  259 TypeArgs: '[' TypeList ']'
  260         | '[' TypeList ',' ']'

  261 TypeList: Type ',' TypeList
  262         | Type

  263 TypeName: id
  264         | id '.' TypeName

  265 ArrayType: '[' Expression ']' Type

  266 StructType: STRUCT '{' DeclList '}'
  267           | STRUCT '{' '}'

  268 DeclList: FieldDecl DeclList
  269         | FieldDecl

  270 FieldDecl: IdentifierList Type CONST_STRING
  271          | IdentifierList Type
  272          | EmbeddedField CONST_STRING
  273          | EmbeddedField

  274 EmbeddedField: '*' TypeName TypeArgs
  275              | TypeName TypeArgs
  276              | '*' TypeName
  277              | TypeName

  278 PointerType: '*' Type

  279 FunctionType: FUNCTION Signature

  280 Signature: Parameters Parameters
  281          | Parameters
  282          | Parameters Type

  283 Parameters: '(' ParameterList ')'
  284           | '(' ')'
  285           | '(' ParameterList ',' ')'

  286 ParameterList: ParameterDecl ',' ParameterList
  287              | ParameterDecl

  288 ParameterDecl: IdentifierList POINT Type
  289              | IdentifierList Type
  290              | IdentifierList
  291              | POINT Type

  292 IdentifierList: id
  293               | id ',' IdentifierList

  294 InterfaceType: INTERFACE '{' InterfaceElemList '}'
  295              | INTERFACE '{' '}'

  296 InterfaceElemList: InterfaceElem InterfaceElemList
  297                  | InterfaceElem

  298 InterfaceElem: id Signature
  299              | TypeElem

  300 TypeElem: TypeTerm '|' TypeElem
  301         | TypeTerm

  302 TypeTerm: id
  303         | '~' Type

  304 SliceType: '[' ']' Type

  305 MapType: MAP '[' Type ']' Type

  306 ChannelType: CHAN Type
  307            | CHAN POINTER id
  308            | POINTER CHAN Type


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 166
    '%' (37) 148
    '&' (38) 151 169
    '(' (40) 83 84 92 93 108 109 179 180 187 237 238 239 240 241 242 243 244 245 250 283 284 285
    ')' (41) 83 84 92 93 108 109 179 180 187 237 238 239 240 241 242 243 244 245 250 283 284 285
    '*' (42) 146 168 274 276 278
    '+' (43) 156 164
    ',' (44) 101 103 180 204 206 230 239 241 244 246 260 261 285 286 293
    '-' (45) 153 165
    '.' (46) 181 216 228 237 264
    '/' (47) 147
    ':' (58) 58 79 208 231 232 233 234 235 236
    '<' (60) 159
    '>' (62) 160
    '[' (91) 100 101 199 229 230 231 232 233 234 235 236 259 260 265 304 305
    ']' (93) 100 101 199 229 230 231 232 233 234 235 236 259 260 265 304 305
    '{' (123) 54 55 73 74 75 76 203 204 205 225 266 267 294 295
    '|' (124) 155 300
    '}' (125) 54 55 73 74 75 76 203 204 205 225 266 267 294 295
    '~' (126) 303
    error (256)
    PACKAGE (258) 1
    IMPORTS (259) 1
    FUNCTION (260) 6 7 8 9 10 224 279
    id (261) 6 7 8 9 53 98 99 182 202 210 215 216 228 263 264 292 293 298 302 307
    VAR (262) 107 108 109
    EOL (263)
    CONST (264) 82 83 84
    METHOD (265)
    IF (266) 66 67 68 69 70 71
    ELSE (267) 66 67 70 71
    SWITCH (268) 73 74 75 76
    CASE (269) 59 60 80
    FALLTHROUGH (270) 19
    DEFAULT (271) 61 81
    FOR (272) 26 27 28 29
    BREAK (273) 47 48
    RANGE (274) 37 38 39
    NEW (275)
    SELECT (276) 54 55
    RETURN (277) 45 46
    MAP (278) 305
    GO (279) 44
    GOTO (280) 51 52
    INTERFACE (281) 294 295
    CHAN (282) 306 307 308
    CONTINUE (283) 49 50
    DEFER (284) 40
    CONST_INT (285) 220
    CONST_CHAR (286) 192
    CONST_STRING (287) 193 270 272
    BOOL (288) 194
    IOTA (289)
    CONST_OCTAL (290) 219
    CONST_HEX (291) 218
    CONST_BIN (292) 217
    FLOAT_HEX (293)
    DECIMAL_FLOAT_LIT (294) 222
    HEX_FLOAT_LIT (295) 223
    RUNE_LIT (296) 191
    IMAGINARY_LIT (297) 221
    CONST_INT_ERR (298)
    CONST_BIN_ERR (299)
    INT (300)
    STRING (301)
    COMPLEXTYPE (302)
    BYTE (303)
    FLOAT (304)
    RUNE (305)
    UINT (306)
    BOOL_TYPE (307)
    TYPE (308) 91 92 93
    STRUCT (309) 266 267
    UINTPTR (310)
    ERRORTYPE (311)
    ANYTYPE (312)
    COMPARABLE (313)
    ADDEQ (314) 128
    DECEQ (315) 130
    OREQ (316) 138
    XOREQ (317) 135
    MULEQ (318) 131
    DIVEQ (319) 129
    MODEQ (320) 132
    LSHIFTEQ (321) 133
    RSHIFTEQ (322) 134
    ANDEQ (323) 137
    ANDXOREQ (324) 136
    EQ (325) 37 62 89 90 98 113 114 126 127
    INC (326) 123
    DEC (327) 124
    EQUAL (328) 157
    NOTEQUAL (329) 158
    GREATEROREQUAL (330) 162
    LESSOREQUAL (331) 161
    AND (332) 142
    OR (333) 141
    LSHIFT (334) 149
    RSHIFT (335) 150
    PEQ (336) 38 63 125
    XOR (337) 154 167
    SEMICOLON (338) 30 31 32 33 34 35 36 66 67 68 73 74
    AMP_EXP (339) 152
    POINT (340) 199 240 242 288 291
    POINTER (341) 121 170 307 308


Nonterminals, with rules where they appear

    $accept (107)
        on left: 0
    prog (108)
        on left: 1 2
        on right: 0 2
    TopLevelDecl (109)
        on left: 3 4 5
        on right: 2
    FunctionDecl (110)
        on left: 6 7 8 9
        on right: 4
    MethodDecl (111)
        on left: 10
        on right: 5
    Receiver (112)
        on left: 11
        on right: 10
    Statement (113)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25
        on right: 226 227
    ForStmt (114)
        on left: 26 27 28 29
        on right: 24
    ForClause (115)
        on left: 30 31 32 33 34 35 36
        on right: 27
    RangeClause (116)
        on left: 37 38 39
        on right: 28
    DeferStmt (117)
        on left: 40
        on right: 25
    Declaration (118)
        on left: 41 42 43
        on right: 3 12
    GoStmt (119)
        on left: 44
        on right: 14
    ReturnStmt (120)
        on left: 45 46
        on right: 15
    BreakStmt (121)
        on left: 47 48
        on right: 16
    ContinueStmt (122)
        on left: 49 50
        on right: 17
    GotoStmt (123)
        on left: 51 52
        on right: 18
    Label (124)
        on left: 53
        on right: 47 49 51
    SelectStmt (125)
        on left: 54 55
        on right: 23
    CommClauseList (126)
        on left: 56 57
        on right: 54 56
    CommClause (127)
        on left: 58
        on right: 56 57
    CommCase (128)
        on left: 59 60 61
        on right: 58
    RecvStmt (129)
        on left: 62 63 64
        on right: 60
    RecvExpr (130)
        on left: 65
        on right: 62 63 64
    IfStmt (131)
        on left: 66 67 68 69 70 71
        on right: 21 66 70
    SwitchStmt (132)
        on left: 72
        on right: 22
    ExprSwitchStmt (133)
        on left: 73 74 75 76
        on right: 72
    ExprCaseClauseList (134)
        on left: 77 78
        on right: 73 74 75 76 77
    ExprCaseClause (135)
        on left: 79
        on right: 77 78
    ExprSwitchCase (136)
        on left: 80 81
        on right: 79
    ConstDecl (137)
        on left: 82 83 84
        on right: 41
    ConstSpecList (138)
        on left: 85 86
        on right: 83 85
    ConstSpec (139)
        on left: 87 88
        on right: 82 85 86
    ConstExpr (140)
        on left: 89 90
        on right: 87
    TypeDecl (141)
        on left: 91 92 93
        on right: 42
    TypeSpecList (142)
        on left: 94 95
        on right: 92 94
    TypeSpec (143)
        on left: 96 97
        on right: 91 94 95
    AliasDecl (144)
        on left: 98
        on right: 96
    TypeDef (145)
        on left: 99
        on right: 97
    TypeParameters (146)
        on left: 100 101 102
        on right: 6 9 99
    TypeParamList (147)
        on left: 103 104
        on right: 100 101 103
    TypeParamDecl (148)
        on left: 105
        on right: 103 104
    TypeConstraint (149)
        on left: 106
        on right: 105
    VarDecl (150)
        on left: 107 108 109
        on right: 43
    VarSpecList (151)
        on left: 110 111
        on right: 108 110
    VarSpec (152)
        on left: 112 113 114
        on right: 107 110 111
    SimpleStmt (153)
        on left: 115 116 117 118 119
        on right: 13 30 31 32 33 35 36 66 67 68 73 74
    EmptyStatement (154)
        on left: 120
        on right: 119
    SendStmt (155)
        on left: 121
        on right: 59 117
    Channel (156)
        on left: 122
        on right: 121
    IncDecStmt (157)
        on left: 123 124
        on right: 118
    Assignment (158)
        on left: 125 126 127 128 129 130 131 132 133 134 135 136 137 138
        on right: 115
    Expression (159)
        on left: 139 140
        on right: 26 30 32 34 35 37 38 39 40 44 65 66 67 68 69 70 71 73 75 116 121 122 123 124 140 211 213 229 230 231 232 233 235 236 246 247 265
    binary_op (160)
        on left: 141 142 143 144 145
        on right: 140
    mul_op (161)
        on left: 146 147 148 149 150 151 152
        on right: 145
    add_op (162)
        on left: 153 154 155 156
        on right: 144
    rel_op (163)
        on left: 157 158 159 160 161 162
        on right: 143
    UnaryExpr (164)
        on left: 163 164 165 166 167 168 169 170
        on right: 139 164 165 166 167 168 169 170
    PrimaryExpr (165)
        on left: 171 172 173 174 175 176 177 178
        on right: 163 172 175 176 177 178
    Conversion (166)
        on left: 179 180
        on right: 174
    MethodExpr (167)
        on left: 181
        on right: 173
    MethodName (168)
        on left: 182
        on right: 10 181
    Operand (169)
        on left: 183 184 185 186 187
        on right: 171
    BasicLit (170)
        on left: 188 189 190 191 192 193 194
        on right: 184
    CompositeLit (171)
        on left: 195 196
        on right: 185
    LiteralType (172)
        on left: 197 198 199 200 201 202
        on right: 195
    LiteralValue (173)
        on left: 203 204 205
        on right: 195 196 212 214
    ElementList (174)
        on left: 206 207
        on right: 203 204 206
    KeyedElement (175)
        on left: 208 209
        on right: 206 207
    Key (176)
        on left: 210 211 212
        on right: 208
    Element (177)
        on left: 213 214
        on right: 208 209
    OperandName (178)
        on left: 215 216
        on right: 183 216
    int_lit (179)
        on left: 217 218 219 220
        on right: 188
    imaginary_lit (180)
        on left: 221
        on right: 190
    float_lit (181)
        on left: 222 223
        on right: 189
    FunctionLit (182)
        on left: 224
        on right: 186
    Block (183)
        on left: 225
        on right: 6 7 10 20 26 27 28 29 66 67 68 69 70 71 224
    Statements (184)
        on left: 226 227
        on right: 58 79 225 226
    Selector (185)
        on left: 228
        on right: 175
    Index (186)
        on left: 229 230
        on right: 176
    Slice (187)
        on left: 231 232 233 234 235 236
        on right: 177
    TypeAssertion (188)
        on left: 237
        on right: 178
    Arguments (189)
        on left: 238 239 240 241 242 243 244 245
        on right: 172
    ExpressionList (190)
        on left: 246 247
        on right: 37 45 62 80 89 90 113 114 125 126 127 128 129 130 131 132 133 134 135 136 137 138 179 180 187 238 239 240 244 246
    Type (191)
        on left: 248 249 250 251 252 253 254 255 256 257 258
        on right: 89 98 99 112 113 179 180 181 199 237 241 242 243 244 250 261 262 265 270 271 278 282 288 289 291 303 304 305 306 308
    TypeArgs (192)
        on left: 259 260
        on right: 249 274 275
    TypeList (193)
        on left: 261 262
        on right: 259 260 261
    TypeName (194)
        on left: 263 264
        on right: 248 249 264 274 275 276 277
    ArrayType (195)
        on left: 265
        on right: 198 251
    StructType (196)
        on left: 266 267
        on right: 197 253
    DeclList (197)
        on left: 268 269
        on right: 266 268
    FieldDecl (198)
        on left: 270 271 272 273
        on right: 268 269
    EmbeddedField (199)
        on left: 274 275 276 277
        on right: 272 273
    PointerType (200)
        on left: 278
        on right: 252
    FunctionType (201)
        on left: 279
        on right: 254
    Signature (202)
        on left: 280 281 282
        on right: 6 7 8 9 10 224 279 298
    Parameters (203)
        on left: 283 284 285
        on right: 11 280 281 282
    ParameterList (204)
        on left: 286 287
        on right: 283 285 286
    ParameterDecl (205)
        on left: 288 289 290 291
        on right: 286 287
    IdentifierList (206)
        on left: 292 293
        on right: 38 63 87 88 105 112 113 114 125 126 270 271 288 289 290 293
    InterfaceType (207)
        on left: 294 295
        on right: 255
    InterfaceElemList (208)
        on left: 296 297
        on right: 294 296
    InterfaceElem (209)
        on left: 298 299
        on right: 296 297
    TypeElem (210)
        on left: 300 301
        on right: 106 299 300
    TypeTerm (211)
        on left: 302 303
        on right: 300 301
    SliceType (212)
        on left: 304
        on right: 200 256
    MapType (213)
        on left: 305
        on right: 201 257
    ChannelType (214)
        on left: 306 307 308
        on right: 258


State 0

    0 $accept: • prog $end

    PACKAGE  shift, and go to state 1

    prog  go to state 2


State 1

    1 prog: PACKAGE • IMPORTS

    IMPORTS  shift, and go to state 3


State 2

    0 $accept: prog • $end
    2 prog: prog • TopLevelDecl

    $end      shift, and go to state 4
    FUNCTION  shift, and go to state 5
    VAR       shift, and go to state 6
    CONST     shift, and go to state 7
    TYPE      shift, and go to state 8

    TopLevelDecl  go to state 9
    FunctionDecl  go to state 10
    MethodDecl    go to state 11
    Declaration   go to state 12
    ConstDecl     go to state 13
    TypeDecl      go to state 14
    VarDecl       go to state 15


State 3

    1 prog: PACKAGE IMPORTS •

    $default  reduce using rule 1 (prog)


State 4

    0 $accept: prog $end •

    $default  accept


State 5

    6 FunctionDecl: FUNCTION • id TypeParameters Signature Block
    7             | FUNCTION • id Signature Block
    8             | FUNCTION • id Signature
    9             | FUNCTION • id TypeParameters Signature
   10 MethodDecl: FUNCTION • Receiver MethodName Signature Block

    id   shift, and go to state 16
    '('  shift, and go to state 17

    Receiver    go to state 18
    Parameters  go to state 19


State 6

  107 VarDecl: VAR • VarSpec
  108        | VAR • '(' VarSpecList ')'
  109        | VAR • '(' ')'

    id   shift, and go to state 20
    '('  shift, and go to state 21

    VarSpec         go to state 22
    IdentifierList  go to state 23


State 7

   82 ConstDecl: CONST • ConstSpec
   83          | CONST • '(' ConstSpecList ')'
   84          | CONST • '(' ')'

    id   shift, and go to state 20
    '('  shift, and go to state 24

    ConstSpec       go to state 25
    IdentifierList  go to state 26


State 8

   91 TypeDecl: TYPE • TypeSpec
   92         | TYPE • '(' TypeSpecList ')'
   93         | TYPE • '(' ')'

    id   shift, and go to state 27
    '('  shift, and go to state 28

    TypeSpec   go to state 29
    AliasDecl  go to state 30
    TypeDef    go to state 31


State 9

    2 prog: prog TopLevelDecl •

    $default  reduce using rule 2 (prog)


State 10

    4 TopLevelDecl: FunctionDecl •

    $default  reduce using rule 4 (TopLevelDecl)


State 11

    5 TopLevelDecl: MethodDecl •

    $default  reduce using rule 5 (TopLevelDecl)


State 12

    3 TopLevelDecl: Declaration •

    $default  reduce using rule 3 (TopLevelDecl)


State 13

   41 Declaration: ConstDecl •

    $default  reduce using rule 41 (Declaration)


State 14

   42 Declaration: TypeDecl •

    $default  reduce using rule 42 (Declaration)


State 15

   43 Declaration: VarDecl •

    $default  reduce using rule 43 (Declaration)


State 16

    6 FunctionDecl: FUNCTION id • TypeParameters Signature Block
    7             | FUNCTION id • Signature Block
    8             | FUNCTION id • Signature
    9             | FUNCTION id • TypeParameters Signature

    '('  shift, and go to state 17
    '['  shift, and go to state 32

    '('  [reduce using rule 102 (TypeParameters)]

    TypeParameters  go to state 33
    Signature       go to state 34
    Parameters      go to state 35


State 17

  283 Parameters: '(' • ParameterList ')'
  284           | '(' • ')'
  285           | '(' • ParameterList ',' ')'

    id     shift, and go to state 20
    POINT  shift, and go to state 36
    ')'    shift, and go to state 37

    ParameterList   go to state 38
    ParameterDecl   go to state 39
    IdentifierList  go to state 40


State 18

   10 MethodDecl: FUNCTION Receiver • MethodName Signature Block

    id  shift, and go to state 41

    MethodName  go to state 42


State 19

   11 Receiver: Parameters •

    $default  reduce using rule 11 (Receiver)


State 20

  292 IdentifierList: id •
  293               | id • ',' IdentifierList

    ','  shift, and go to state 43

    ','       [reduce using rule 292 (IdentifierList)]
    $default  reduce using rule 292 (IdentifierList)


State 21

  108 VarDecl: VAR '(' • VarSpecList ')'
  109        | VAR '(' • ')'

    id   shift, and go to state 20
    ')'  shift, and go to state 44

    VarSpecList     go to state 45
    VarSpec         go to state 46
    IdentifierList  go to state 23


State 22

  107 VarDecl: VAR VarSpec •

    $default  reduce using rule 107 (VarDecl)


State 23

  112 VarSpec: IdentifierList • Type
  113        | IdentifierList • Type EQ ExpressionList
  114        | IdentifierList • EQ ExpressionList

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    EQ         shift, and go to state 53
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 58
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 24

   83 ConstDecl: CONST '(' • ConstSpecList ')'
   84          | CONST '(' • ')'

    id   shift, and go to state 20
    ')'  shift, and go to state 68

    ConstSpecList   go to state 69
    ConstSpec       go to state 70
    IdentifierList  go to state 26


State 25

   82 ConstDecl: CONST ConstSpec •

    $default  reduce using rule 82 (ConstDecl)


State 26

   87 ConstSpec: IdentifierList • ConstExpr
   88          | IdentifierList •

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    EQ         shift, and go to state 71
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    FUNCTION   [reduce using rule 88 (ConstSpec)]
    id         [reduce using rule 88 (ConstSpec)]
    MAP        [reduce using rule 88 (ConstSpec)]
    INTERFACE  [reduce using rule 88 (ConstSpec)]
    CHAN       [reduce using rule 88 (ConstSpec)]
    STRUCT     [reduce using rule 88 (ConstSpec)]
    POINTER    [reduce using rule 88 (ConstSpec)]
    '('        [reduce using rule 88 (ConstSpec)]
    '['        [reduce using rule 88 (ConstSpec)]
    '*'        [reduce using rule 88 (ConstSpec)]
    $default   reduce using rule 88 (ConstSpec)

    ConstExpr      go to state 72
    Type           go to state 73
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 27

   98 AliasDecl: id • EQ Type
   99 TypeDef: id • TypeParameters Type

    EQ   shift, and go to state 74
    '['  shift, and go to state 32

    '['       [reduce using rule 102 (TypeParameters)]
    $default  reduce using rule 102 (TypeParameters)

    TypeParameters  go to state 75


State 28

   92 TypeDecl: TYPE '(' • TypeSpecList ')'
   93         | TYPE '(' • ')'

    id   shift, and go to state 27
    ')'  shift, and go to state 76

    TypeSpecList  go to state 77
    TypeSpec      go to state 78
    AliasDecl     go to state 30
    TypeDef       go to state 31


State 29

   91 TypeDecl: TYPE TypeSpec •

    $default  reduce using rule 91 (TypeDecl)


State 30

   96 TypeSpec: AliasDecl •

    $default  reduce using rule 96 (TypeSpec)


State 31

   97 TypeSpec: TypeDef •

    $default  reduce using rule 97 (TypeSpec)


State 32

  100 TypeParameters: '[' • TypeParamList ']'
  101               | '[' • TypeParamList ',' ']'

    id  shift, and go to state 20

    TypeParamList   go to state 79
    TypeParamDecl   go to state 80
    IdentifierList  go to state 81


State 33

    6 FunctionDecl: FUNCTION id TypeParameters • Signature Block
    9             | FUNCTION id TypeParameters • Signature

    '('  shift, and go to state 17

    Signature   go to state 82
    Parameters  go to state 35


State 34

    7 FunctionDecl: FUNCTION id Signature • Block
    8             | FUNCTION id Signature •

    '{'  shift, and go to state 83

    $default  reduce using rule 8 (FunctionDecl)

    Block  go to state 84


State 35

  280 Signature: Parameters • Parameters
  281          | Parameters •
  282          | Parameters • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 85
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    FUNCTION   [reduce using rule 281 (Signature)]
    id         [reduce using rule 281 (Signature)]
    MAP        [reduce using rule 281 (Signature)]
    INTERFACE  [reduce using rule 281 (Signature)]
    CHAN       [reduce using rule 281 (Signature)]
    STRUCT     [reduce using rule 281 (Signature)]
    POINTER    [reduce using rule 281 (Signature)]
    '('        [reduce using rule 281 (Signature)]
    '['        [reduce using rule 281 (Signature)]
    '*'        [reduce using rule 281 (Signature)]
    $default   reduce using rule 281 (Signature)

    Type           go to state 86
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    Parameters     go to state 87
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 36

  291 ParameterDecl: POINT • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 88
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 37

  284 Parameters: '(' ')' •

    $default  reduce using rule 284 (Parameters)


State 38

  283 Parameters: '(' ParameterList • ')'
  285           | '(' ParameterList • ',' ')'

    ')'  shift, and go to state 89
    ','  shift, and go to state 90


State 39

  286 ParameterList: ParameterDecl • ',' ParameterList
  287              | ParameterDecl •

    ','  shift, and go to state 91

    ','       [reduce using rule 287 (ParameterList)]
    $default  reduce using rule 287 (ParameterList)


State 40

  288 ParameterDecl: IdentifierList • POINT Type
  289              | IdentifierList • Type
  290              | IdentifierList •

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINT      shift, and go to state 92
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    $default  reduce using rule 290 (ParameterDecl)

    Type           go to state 93
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 41

  182 MethodName: id •

    $default  reduce using rule 182 (MethodName)


State 42

   10 MethodDecl: FUNCTION Receiver MethodName • Signature Block

    '('  shift, and go to state 17

    Signature   go to state 94
    Parameters  go to state 35


State 43

  293 IdentifierList: id ',' • IdentifierList

    id  shift, and go to state 20

    IdentifierList  go to state 95


State 44

  109 VarDecl: VAR '(' ')' •

    $default  reduce using rule 109 (VarDecl)


State 45

  108 VarDecl: VAR '(' VarSpecList • ')'

    ')'  shift, and go to state 96


State 46

  110 VarSpecList: VarSpec • VarSpecList
  111            | VarSpec •

    id  shift, and go to state 20

    $default  reduce using rule 111 (VarSpecList)

    VarSpecList     go to state 97
    VarSpec         go to state 46
    IdentifierList  go to state 23


State 47

  279 FunctionType: FUNCTION • Signature

    '('  shift, and go to state 17

    Signature   go to state 98
    Parameters  go to state 35


State 48

  263 TypeName: id •
  264         | id • '.' TypeName

    '.'  shift, and go to state 99

    '.'       [reduce using rule 263 (TypeName)]
    $default  reduce using rule 263 (TypeName)


State 49

  305 MapType: MAP • '[' Type ']' Type

    '['  shift, and go to state 100


State 50

  294 InterfaceType: INTERFACE • '{' InterfaceElemList '}'
  295              | INTERFACE • '{' '}'

    '{'  shift, and go to state 101


State 51

  306 ChannelType: CHAN • Type
  307            | CHAN • POINTER id

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 102
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 103
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 52

  266 StructType: STRUCT • '{' DeclList '}'
  267           | STRUCT • '{' '}'

    '{'  shift, and go to state 104


State 53

  114 VarSpec: IdentifierList EQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 143
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 54

  308 ChannelType: POINTER • CHAN Type

    CHAN  shift, and go to state 149


State 55

  250 Type: '(' • Type ')'

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 150
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 56

  265 ArrayType: '[' • Expression ']' Type
  304 SliceType: '[' • ']' Type

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    ']'                shift, and go to state 151
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 152
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 57

  278 PointerType: '*' • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 153
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 58

  112 VarSpec: IdentifierList Type •
  113        | IdentifierList Type • EQ ExpressionList

    EQ  shift, and go to state 154

    $default  reduce using rule 112 (VarSpec)


State 59

  248 Type: TypeName •
  249     | TypeName • TypeArgs

    '['  shift, and go to state 155

    '['       [reduce using rule 248 (Type)]
    $default  reduce using rule 248 (Type)

    TypeArgs  go to state 156


State 60

  251 Type: ArrayType •

    $default  reduce using rule 251 (Type)


State 61

  253 Type: StructType •

    $default  reduce using rule 253 (Type)


State 62

  252 Type: PointerType •

    $default  reduce using rule 252 (Type)


State 63

  254 Type: FunctionType •

    $default  reduce using rule 254 (Type)


State 64

  255 Type: InterfaceType •

    $default  reduce using rule 255 (Type)


State 65

  256 Type: SliceType •

    $default  reduce using rule 256 (Type)


State 66

  257 Type: MapType •

    $default  reduce using rule 257 (Type)


State 67

  258 Type: ChannelType •

    $default  reduce using rule 258 (Type)


State 68

   84 ConstDecl: CONST '(' ')' •

    $default  reduce using rule 84 (ConstDecl)


State 69

   83 ConstDecl: CONST '(' ConstSpecList • ')'

    ')'  shift, and go to state 157


State 70

   85 ConstSpecList: ConstSpec • ConstSpecList
   86              | ConstSpec •

    id  shift, and go to state 20

    $default  reduce using rule 86 (ConstSpecList)

    ConstSpecList   go to state 158
    ConstSpec       go to state 70
    IdentifierList  go to state 26


State 71

   90 ConstExpr: EQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 159
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 72

   87 ConstSpec: IdentifierList ConstExpr •

    $default  reduce using rule 87 (ConstSpec)


State 73

   89 ConstExpr: Type • EQ ExpressionList

    EQ  shift, and go to state 160


State 74

   98 AliasDecl: id EQ • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 161
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 75

   99 TypeDef: id TypeParameters • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 162
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 76

   93 TypeDecl: TYPE '(' ')' •

    $default  reduce using rule 93 (TypeDecl)


State 77

   92 TypeDecl: TYPE '(' TypeSpecList • ')'

    ')'  shift, and go to state 163


State 78

   94 TypeSpecList: TypeSpec • TypeSpecList
   95             | TypeSpec •

    id  shift, and go to state 27

    $default  reduce using rule 95 (TypeSpecList)

    TypeSpecList  go to state 164
    TypeSpec      go to state 78
    AliasDecl     go to state 30
    TypeDef       go to state 31


State 79

  100 TypeParameters: '[' TypeParamList • ']'
  101               | '[' TypeParamList • ',' ']'

    ']'  shift, and go to state 165
    ','  shift, and go to state 166


State 80

  103 TypeParamList: TypeParamDecl • ',' TypeParamList
  104              | TypeParamDecl •

    ','  shift, and go to state 167

    ','       [reduce using rule 104 (TypeParamList)]
    $default  reduce using rule 104 (TypeParamList)


State 81

  105 TypeParamDecl: IdentifierList • TypeConstraint

    id   shift, and go to state 168
    '~'  shift, and go to state 169

    TypeConstraint  go to state 170
    TypeElem        go to state 171
    TypeTerm        go to state 172


State 82

    6 FunctionDecl: FUNCTION id TypeParameters Signature • Block
    9             | FUNCTION id TypeParameters Signature •

    '{'  shift, and go to state 83

    $default  reduce using rule 9 (FunctionDecl)

    Block  go to state 173


State 83

  225 Block: '{' • Statements '}'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 175
    SWITCH             shift, and go to state 176
    FALLTHROUGH        shift, and go to state 177
    FOR                shift, and go to state 178
    BREAK              shift, and go to state 179
    SELECT             shift, and go to state 180
    RETURN             shift, and go to state 181
    MAP                shift, and go to state 49
    GO                 shift, and go to state 182
    GOTO               shift, and go to state 183
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONTINUE           shift, and go to state 184
    DEFER              shift, and go to state 185
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 186
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    FUNCTION           [reduce using rule 120 (EmptyStatement)]
    id                 [reduce using rule 120 (EmptyStatement)]
    VAR                [reduce using rule 120 (EmptyStatement)]
    CONST              [reduce using rule 120 (EmptyStatement)]
    IF                 [reduce using rule 120 (EmptyStatement)]
    SWITCH             [reduce using rule 120 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 120 (EmptyStatement)]
    FOR                [reduce using rule 120 (EmptyStatement)]
    BREAK              [reduce using rule 120 (EmptyStatement)]
    SELECT             [reduce using rule 120 (EmptyStatement)]
    RETURN             [reduce using rule 120 (EmptyStatement)]
    MAP                [reduce using rule 120 (EmptyStatement)]
    GO                 [reduce using rule 120 (EmptyStatement)]
    GOTO               [reduce using rule 120 (EmptyStatement)]
    INTERFACE          [reduce using rule 120 (EmptyStatement)]
    CHAN               [reduce using rule 120 (EmptyStatement)]
    CONTINUE           [reduce using rule 120 (EmptyStatement)]
    DEFER              [reduce using rule 120 (EmptyStatement)]
    CONST_INT          [reduce using rule 120 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 120 (EmptyStatement)]
    CONST_STRING       [reduce using rule 120 (EmptyStatement)]
    BOOL               [reduce using rule 120 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 120 (EmptyStatement)]
    CONST_HEX          [reduce using rule 120 (EmptyStatement)]
    CONST_BIN          [reduce using rule 120 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 120 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 120 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 120 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 120 (EmptyStatement)]
    TYPE               [reduce using rule 120 (EmptyStatement)]
    STRUCT             [reduce using rule 120 (EmptyStatement)]
    XOR                [reduce using rule 120 (EmptyStatement)]
    POINTER            [reduce using rule 120 (EmptyStatement)]
    '{'                [reduce using rule 120 (EmptyStatement)]
    '('                [reduce using rule 120 (EmptyStatement)]
    '['                [reduce using rule 120 (EmptyStatement)]
    '*'                [reduce using rule 120 (EmptyStatement)]
    '&'                [reduce using rule 120 (EmptyStatement)]
    '-'                [reduce using rule 120 (EmptyStatement)]
    '+'                [reduce using rule 120 (EmptyStatement)]
    '!'                [reduce using rule 120 (EmptyStatement)]
    $default           reduce using rule 120 (EmptyStatement)

    Statement       go to state 187
    ForStmt         go to state 188
    DeferStmt       go to state 189
    Declaration     go to state 190
    GoStmt          go to state 191
    ReturnStmt      go to state 192
    BreakStmt       go to state 193
    ContinueStmt    go to state 194
    GotoStmt        go to state 195
    SelectStmt      go to state 196
    IfStmt          go to state 197
    SwitchStmt      go to state 198
    ExprSwitchStmt  go to state 199
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 200
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    Block           go to state 207
    Statements      go to state 208
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 84

    7 FunctionDecl: FUNCTION id Signature Block •

    $default  reduce using rule 7 (FunctionDecl)


State 85

  250 Type: '(' • Type ')'
  283 Parameters: '(' • ParameterList ')'
  284           | '(' • ')'
  285           | '(' • ParameterList ',' ')'

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 211
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINT      shift, and go to state 36
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    ')'        shift, and go to state 37
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type            go to state 150
    TypeName        go to state 59
    ArrayType       go to state 60
    StructType      go to state 61
    PointerType     go to state 62
    FunctionType    go to state 63
    ParameterList   go to state 38
    ParameterDecl   go to state 39
    IdentifierList  go to state 40
    InterfaceType   go to state 64
    SliceType       go to state 65
    MapType         go to state 66
    ChannelType     go to state 67


State 86

  282 Signature: Parameters Type •

    $default  reduce using rule 282 (Signature)


State 87

  280 Signature: Parameters Parameters •

    $default  reduce using rule 280 (Signature)


State 88

  291 ParameterDecl: POINT Type •

    $default  reduce using rule 291 (ParameterDecl)


State 89

  283 Parameters: '(' ParameterList ')' •

    $default  reduce using rule 283 (Parameters)


State 90

  285 Parameters: '(' ParameterList ',' • ')'

    ')'  shift, and go to state 212


State 91

  286 ParameterList: ParameterDecl ',' • ParameterList

    id     shift, and go to state 20
    POINT  shift, and go to state 36

    ParameterList   go to state 213
    ParameterDecl   go to state 39
    IdentifierList  go to state 40


State 92

  288 ParameterDecl: IdentifierList POINT • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 214
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 93

  289 ParameterDecl: IdentifierList Type •

    $default  reduce using rule 289 (ParameterDecl)


State 94

   10 MethodDecl: FUNCTION Receiver MethodName Signature • Block

    '{'  shift, and go to state 83

    Block  go to state 215


State 95

  293 IdentifierList: id ',' IdentifierList •

    $default  reduce using rule 293 (IdentifierList)


State 96

  108 VarDecl: VAR '(' VarSpecList ')' •

    $default  reduce using rule 108 (VarDecl)


State 97

  110 VarSpecList: VarSpec VarSpecList •

    $default  reduce using rule 110 (VarSpecList)


State 98

  279 FunctionType: FUNCTION Signature •

    $default  reduce using rule 279 (FunctionType)


State 99

  264 TypeName: id '.' • TypeName

    id  shift, and go to state 48

    TypeName  go to state 216


State 100

  305 MapType: MAP '[' • Type ']' Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 217
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 101

  294 InterfaceType: INTERFACE '{' • InterfaceElemList '}'
  295              | INTERFACE '{' • '}'

    id   shift, and go to state 218
    '}'  shift, and go to state 219
    '~'  shift, and go to state 169

    InterfaceElemList  go to state 220
    InterfaceElem      go to state 221
    TypeElem           go to state 222
    TypeTerm           go to state 172


State 102

  307 ChannelType: CHAN POINTER • id
  308            | POINTER • CHAN Type

    id    shift, and go to state 223
    CHAN  shift, and go to state 149


State 103

  306 ChannelType: CHAN Type •

    $default  reduce using rule 306 (ChannelType)


State 104

  266 StructType: STRUCT '{' • DeclList '}'
  267           | STRUCT '{' • '}'

    id   shift, and go to state 211
    '}'  shift, and go to state 224
    '*'  shift, and go to state 225

    TypeName        go to state 226
    DeclList        go to state 227
    FieldDecl       go to state 228
    EmbeddedField   go to state 229
    IdentifierList  go to state 230


State 105

  224 FunctionLit: FUNCTION • Signature Block
  279 FunctionType: FUNCTION • Signature

    '('  shift, and go to state 17

    Signature   go to state 231
    Parameters  go to state 35


State 106

  202 LiteralType: id •
  215 OperandName: id •
  216            | id • '.' OperandName
  263 TypeName: id •
  264         | id • '.' TypeName

    '.'  shift, and go to state 232

    POINT     reduce using rule 215 (OperandName)
    POINT     [reduce using rule 263 (TypeName)]
    '{'       reduce using rule 202 (LiteralType)
    '{'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 263 (TypeName)]
    '('       reduce using rule 215 (OperandName)
    '('       [reduce using rule 263 (TypeName)]
    ')'       reduce using rule 215 (OperandName)
    ')'       [reduce using rule 263 (TypeName)]
    '['       reduce using rule 215 (OperandName)
    '['       [reduce using rule 263 (TypeName)]
    ','       reduce using rule 215 (OperandName)
    ','       [reduce using rule 263 (TypeName)]
    $default  reduce using rule 215 (OperandName)


State 107

  220 int_lit: CONST_INT •

    $default  reduce using rule 220 (int_lit)


State 108

  192 BasicLit: CONST_CHAR •

    $default  reduce using rule 192 (BasicLit)


State 109

  193 BasicLit: CONST_STRING •

    $default  reduce using rule 193 (BasicLit)


State 110

  194 BasicLit: BOOL •

    $default  reduce using rule 194 (BasicLit)


State 111

  219 int_lit: CONST_OCTAL •

    $default  reduce using rule 219 (int_lit)


State 112

  218 int_lit: CONST_HEX •

    $default  reduce using rule 218 (int_lit)


State 113

  217 int_lit: CONST_BIN •

    $default  reduce using rule 217 (int_lit)


State 114

  222 float_lit: DECIMAL_FLOAT_LIT •

    $default  reduce using rule 222 (float_lit)


State 115

  223 float_lit: HEX_FLOAT_LIT •

    $default  reduce using rule 223 (float_lit)


State 116

  191 BasicLit: RUNE_LIT •

    $default  reduce using rule 191 (BasicLit)


State 117

  221 imaginary_lit: IMAGINARY_LIT •

    $default  reduce using rule 221 (imaginary_lit)


State 118

  167 UnaryExpr: XOR • UnaryExpr

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    UnaryExpr      go to state 233
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 119

  170 UnaryExpr: POINTER • UnaryExpr
  308 ChannelType: POINTER • CHAN Type

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 234
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    UnaryExpr      go to state 235
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 120

  203 LiteralValue: '{' • ElementList '}'
  204             | '{' • ElementList ',' '}'
  205             | '{' • '}'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 236
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '}'                shift, and go to state 237
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 238
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 239
    ElementList    go to state 240
    KeyedElement   go to state 241
    Key            go to state 242
    Element        go to state 243
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 121

  187 Operand: '(' • ExpressionList ')'
  250 Type: '(' • Type ')'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 244
    Type            go to state 245
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 122

  199 LiteralType: '[' • POINT ']' Type
  265 ArrayType: '[' • Expression ']' Type
  304 SliceType: '[' • ']' Type

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINT              shift, and go to state 246
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    ']'                shift, and go to state 151
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 152
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 123

  168 UnaryExpr: '*' • UnaryExpr
  278 PointerType: '*' • Type

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    UnaryExpr      go to state 247
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 248
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 124

  169 UnaryExpr: '&' • UnaryExpr

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    UnaryExpr      go to state 249
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 125

  165 UnaryExpr: '-' • UnaryExpr

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    UnaryExpr      go to state 250
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 126

  164 UnaryExpr: '+' • UnaryExpr

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    UnaryExpr      go to state 251
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 127

  166 UnaryExpr: '!' • UnaryExpr

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    UnaryExpr      go to state 252
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 128

  140 Expression: Expression • binary_op Expression
  247 ExpressionList: Expression •

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    XOR       [reduce using rule 247 (ExpressionList)]
    '*'       [reduce using rule 247 (ExpressionList)]
    '&'       [reduce using rule 247 (ExpressionList)]
    '-'       [reduce using rule 247 (ExpressionList)]
    '+'       [reduce using rule 247 (ExpressionList)]
    $default  reduce using rule 247 (ExpressionList)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 129

  139 Expression: UnaryExpr •

    $default  reduce using rule 139 (Expression)


State 130

  163 UnaryExpr: PrimaryExpr •
  172 PrimaryExpr: PrimaryExpr • Arguments
  175            | PrimaryExpr • Selector
  176            | PrimaryExpr • Index
  177            | PrimaryExpr • Slice
  178            | PrimaryExpr • TypeAssertion

    '.'  shift, and go to state 276
    '('  shift, and go to state 277
    '['  shift, and go to state 278

    '('       [reduce using rule 163 (UnaryExpr)]
    '['       [reduce using rule 163 (UnaryExpr)]
    $default  reduce using rule 163 (UnaryExpr)

    Selector       go to state 279
    Index          go to state 280
    Slice          go to state 281
    TypeAssertion  go to state 282
    Arguments      go to state 283


State 131

  174 PrimaryExpr: Conversion •

    $default  reduce using rule 174 (PrimaryExpr)


State 132

  173 PrimaryExpr: MethodExpr •

    $default  reduce using rule 173 (PrimaryExpr)


State 133

  171 PrimaryExpr: Operand •

    $default  reduce using rule 171 (PrimaryExpr)


State 134

  184 Operand: BasicLit •

    $default  reduce using rule 184 (Operand)


State 135

  185 Operand: CompositeLit •

    $default  reduce using rule 185 (Operand)


State 136

  195 CompositeLit: LiteralType • LiteralValue

    '{'  shift, and go to state 120

    LiteralValue  go to state 284


State 137

  196 CompositeLit: LiteralValue •

    $default  reduce using rule 196 (CompositeLit)


State 138

  183 Operand: OperandName •

    $default  reduce using rule 183 (Operand)


State 139

  188 BasicLit: int_lit •

    $default  reduce using rule 188 (BasicLit)


State 140

  190 BasicLit: imaginary_lit •

    $default  reduce using rule 190 (BasicLit)


State 141

  189 BasicLit: float_lit •

    $default  reduce using rule 189 (BasicLit)


State 142

  186 Operand: FunctionLit •

    $default  reduce using rule 186 (Operand)


State 143

  114 VarSpec: IdentifierList EQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 114 (VarSpec)


State 144

  179 Conversion: Type • '(' ExpressionList ')'
  180           | Type • '(' ExpressionList ',' ')'
  181 MethodExpr: Type • '.' MethodName

    '.'  shift, and go to state 286
    '('  shift, and go to state 287


State 145

  198 LiteralType: ArrayType •
  251 Type: ArrayType •

    '{'       reduce using rule 198 (LiteralType)
    $default  reduce using rule 251 (Type)


State 146

  197 LiteralType: StructType •
  253 Type: StructType •

    '{'       reduce using rule 197 (LiteralType)
    $default  reduce using rule 253 (Type)


State 147

  200 LiteralType: SliceType •
  256 Type: SliceType •

    '{'       reduce using rule 200 (LiteralType)
    $default  reduce using rule 256 (Type)


State 148

  201 LiteralType: MapType •
  257 Type: MapType •

    '{'       reduce using rule 201 (LiteralType)
    $default  reduce using rule 257 (Type)


State 149

  308 ChannelType: POINTER CHAN • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 288
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 150

  250 Type: '(' Type • ')'

    ')'  shift, and go to state 289


State 151

  304 SliceType: '[' ']' • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 290
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 152

  140 Expression: Expression • binary_op Expression
  265 ArrayType: '[' Expression • ']' Type

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    ']'             shift, and go to state 291
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 153

  278 PointerType: '*' Type •

    $default  reduce using rule 278 (PointerType)


State 154

  113 VarSpec: IdentifierList Type EQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 292
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 155

  259 TypeArgs: '[' • TypeList ']'
  260         | '[' • TypeList ',' ']'

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 293
    TypeList       go to state 294
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 156

  249 Type: TypeName TypeArgs •

    $default  reduce using rule 249 (Type)


State 157

   83 ConstDecl: CONST '(' ConstSpecList ')' •

    $default  reduce using rule 83 (ConstDecl)


State 158

   85 ConstSpecList: ConstSpec ConstSpecList •

    $default  reduce using rule 85 (ConstSpecList)


State 159

   90 ConstExpr: EQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 90 (ConstExpr)


State 160

   89 ConstExpr: Type EQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 295
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 161

   98 AliasDecl: id EQ Type •

    $default  reduce using rule 98 (AliasDecl)


State 162

   99 TypeDef: id TypeParameters Type •

    $default  reduce using rule 99 (TypeDef)


State 163

   92 TypeDecl: TYPE '(' TypeSpecList ')' •

    $default  reduce using rule 92 (TypeDecl)


State 164

   94 TypeSpecList: TypeSpec TypeSpecList •

    $default  reduce using rule 94 (TypeSpecList)


State 165

  100 TypeParameters: '[' TypeParamList ']' •

    $default  reduce using rule 100 (TypeParameters)


State 166

  101 TypeParameters: '[' TypeParamList ',' • ']'

    ']'  shift, and go to state 296


State 167

  103 TypeParamList: TypeParamDecl ',' • TypeParamList

    id  shift, and go to state 20

    TypeParamList   go to state 297
    TypeParamDecl   go to state 80
    IdentifierList  go to state 81


State 168

  302 TypeTerm: id •

    $default  reduce using rule 302 (TypeTerm)


State 169

  303 TypeTerm: '~' • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 298
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 170

  105 TypeParamDecl: IdentifierList TypeConstraint •

    $default  reduce using rule 105 (TypeParamDecl)


State 171

  106 TypeConstraint: TypeElem •

    $default  reduce using rule 106 (TypeConstraint)


State 172

  300 TypeElem: TypeTerm • '|' TypeElem
  301         | TypeTerm •

    '|'  shift, and go to state 299

    $default  reduce using rule 301 (TypeElem)


State 173

    6 FunctionDecl: FUNCTION id TypeParameters Signature Block •

    $default  reduce using rule 6 (FunctionDecl)


State 174

  202 LiteralType: id •
  215 OperandName: id •
  216            | id • '.' OperandName
  263 TypeName: id •
  264         | id • '.' TypeName
  292 IdentifierList: id •
  293               | id • ',' IdentifierList

    '.'  shift, and go to state 232
    ','  shift, and go to state 43

    EQ        reduce using rule 215 (OperandName)
    EQ        [reduce using rule 292 (IdentifierList)]
    PEQ       reduce using rule 292 (IdentifierList)
    '{'       reduce using rule 202 (LiteralType)
    '{'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 263 (TypeName)]
    '('       reduce using rule 215 (OperandName)
    '('       [reduce using rule 263 (TypeName)]
    '['       reduce using rule 215 (OperandName)
    '['       [reduce using rule 263 (TypeName)]
    ','       [reduce using rule 215 (OperandName)]
    $default  reduce using rule 215 (OperandName)


State 175

   66 IfStmt: IF • SimpleStmt SEMICOLON Expression Block ELSE IfStmt
   67       | IF • SimpleStmt SEMICOLON Expression Block ELSE Block
   68       | IF • SimpleStmt SEMICOLON Expression Block
   69       | IF • Expression Block
   70       | IF • Expression Block ELSE IfStmt
   71       | IF • Expression Block ELSE Block

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    $default  reduce using rule 120 (EmptyStatement)

    SimpleStmt      go to state 300
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 301
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 176

   73 ExprSwitchStmt: SWITCH • SimpleStmt SEMICOLON Expression '{' ExprCaseClauseList '}'
   74               | SWITCH • SimpleStmt SEMICOLON '{' ExprCaseClauseList '}'
   75               | SWITCH • Expression '{' ExprCaseClauseList '}'
   76               | SWITCH • '{' ExprCaseClauseList '}'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 302
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    $default  reduce using rule 120 (EmptyStatement)

    SimpleStmt      go to state 303
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 304
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 177

   19 Statement: FALLTHROUGH •

    $default  reduce using rule 19 (Statement)


State 178

   26 ForStmt: FOR • Expression Block
   27        | FOR • ForClause Block
   28        | FOR • RangeClause Block
   29        | FOR • Block

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    RANGE              shift, and go to state 305
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    SEMICOLON          shift, and go to state 306
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 186
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    SEMICOLON  [reduce using rule 120 (EmptyStatement)]

    ForClause       go to state 307
    RangeClause     go to state 308
    SimpleStmt      go to state 309
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 310
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    Block           go to state 311
    ExpressionList  go to state 312
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 313
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 179

   47 BreakStmt: BREAK • Label
   48          | BREAK •

    id  shift, and go to state 314

    id        [reduce using rule 48 (BreakStmt)]
    $default  reduce using rule 48 (BreakStmt)

    Label  go to state 315


State 180

   54 SelectStmt: SELECT • '{' CommClauseList '}'
   55           | SELECT • '{' '}'

    '{'  shift, and go to state 316


State 181

   45 ReturnStmt: RETURN • ExpressionList
   46           | RETURN •

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    FUNCTION           [reduce using rule 46 (ReturnStmt)]
    id                 [reduce using rule 46 (ReturnStmt)]
    MAP                [reduce using rule 46 (ReturnStmt)]
    INTERFACE          [reduce using rule 46 (ReturnStmt)]
    CHAN               [reduce using rule 46 (ReturnStmt)]
    CONST_INT          [reduce using rule 46 (ReturnStmt)]
    CONST_CHAR         [reduce using rule 46 (ReturnStmt)]
    CONST_STRING       [reduce using rule 46 (ReturnStmt)]
    BOOL               [reduce using rule 46 (ReturnStmt)]
    CONST_OCTAL        [reduce using rule 46 (ReturnStmt)]
    CONST_HEX          [reduce using rule 46 (ReturnStmt)]
    CONST_BIN          [reduce using rule 46 (ReturnStmt)]
    DECIMAL_FLOAT_LIT  [reduce using rule 46 (ReturnStmt)]
    HEX_FLOAT_LIT      [reduce using rule 46 (ReturnStmt)]
    RUNE_LIT           [reduce using rule 46 (ReturnStmt)]
    IMAGINARY_LIT      [reduce using rule 46 (ReturnStmt)]
    STRUCT             [reduce using rule 46 (ReturnStmt)]
    XOR                [reduce using rule 46 (ReturnStmt)]
    POINTER            [reduce using rule 46 (ReturnStmt)]
    '{'                [reduce using rule 46 (ReturnStmt)]
    '('                [reduce using rule 46 (ReturnStmt)]
    '['                [reduce using rule 46 (ReturnStmt)]
    '*'                [reduce using rule 46 (ReturnStmt)]
    '&'                [reduce using rule 46 (ReturnStmt)]
    '-'                [reduce using rule 46 (ReturnStmt)]
    '+'                [reduce using rule 46 (ReturnStmt)]
    '!'                [reduce using rule 46 (ReturnStmt)]
    $default           reduce using rule 46 (ReturnStmt)

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 317
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 182

   44 GoStmt: GO • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 318
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 183

   51 GotoStmt: GOTO • Label
   52         | GOTO •

    id  shift, and go to state 314

    id        [reduce using rule 52 (GotoStmt)]
    $default  reduce using rule 52 (GotoStmt)

    Label  go to state 319


State 184

   49 ContinueStmt: CONTINUE • Label
   50             | CONTINUE •

    id  shift, and go to state 314

    id        [reduce using rule 50 (ContinueStmt)]
    $default  reduce using rule 50 (ContinueStmt)

    Label  go to state 320


State 185

   40 DeferStmt: DEFER • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 321
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 186

  203 LiteralValue: '{' • ElementList '}'
  204             | '{' • ElementList ',' '}'
  205             | '{' • '}'
  225 Block: '{' • Statements '}'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 322
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 175
    SWITCH             shift, and go to state 176
    FALLTHROUGH        shift, and go to state 177
    FOR                shift, and go to state 178
    BREAK              shift, and go to state 179
    SELECT             shift, and go to state 180
    RETURN             shift, and go to state 181
    MAP                shift, and go to state 49
    GO                 shift, and go to state 182
    GOTO               shift, and go to state 183
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONTINUE           shift, and go to state 184
    DEFER              shift, and go to state 185
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 186
    '}'                shift, and go to state 237
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    FUNCTION           [reduce using rule 120 (EmptyStatement)]
    id                 [reduce using rule 120 (EmptyStatement)]
    VAR                [reduce using rule 120 (EmptyStatement)]
    CONST              [reduce using rule 120 (EmptyStatement)]
    IF                 [reduce using rule 120 (EmptyStatement)]
    SWITCH             [reduce using rule 120 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 120 (EmptyStatement)]
    FOR                [reduce using rule 120 (EmptyStatement)]
    BREAK              [reduce using rule 120 (EmptyStatement)]
    SELECT             [reduce using rule 120 (EmptyStatement)]
    RETURN             [reduce using rule 120 (EmptyStatement)]
    MAP                [reduce using rule 120 (EmptyStatement)]
    GO                 [reduce using rule 120 (EmptyStatement)]
    GOTO               [reduce using rule 120 (EmptyStatement)]
    INTERFACE          [reduce using rule 120 (EmptyStatement)]
    CHAN               [reduce using rule 120 (EmptyStatement)]
    CONTINUE           [reduce using rule 120 (EmptyStatement)]
    DEFER              [reduce using rule 120 (EmptyStatement)]
    CONST_INT          [reduce using rule 120 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 120 (EmptyStatement)]
    CONST_STRING       [reduce using rule 120 (EmptyStatement)]
    BOOL               [reduce using rule 120 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 120 (EmptyStatement)]
    CONST_HEX          [reduce using rule 120 (EmptyStatement)]
    CONST_BIN          [reduce using rule 120 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 120 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 120 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 120 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 120 (EmptyStatement)]
    TYPE               [reduce using rule 120 (EmptyStatement)]
    STRUCT             [reduce using rule 120 (EmptyStatement)]
    XOR                [reduce using rule 120 (EmptyStatement)]
    POINTER            [reduce using rule 120 (EmptyStatement)]
    '{'                [reduce using rule 120 (EmptyStatement)]
    '}'                [reduce using rule 120 (EmptyStatement)]
    '('                [reduce using rule 120 (EmptyStatement)]
    '['                [reduce using rule 120 (EmptyStatement)]
    '*'                [reduce using rule 120 (EmptyStatement)]
    '&'                [reduce using rule 120 (EmptyStatement)]
    '-'                [reduce using rule 120 (EmptyStatement)]
    '+'                [reduce using rule 120 (EmptyStatement)]
    '!'                [reduce using rule 120 (EmptyStatement)]

    Statement       go to state 187
    ForStmt         go to state 188
    DeferStmt       go to state 189
    Declaration     go to state 190
    GoStmt          go to state 191
    ReturnStmt      go to state 192
    BreakStmt       go to state 193
    ContinueStmt    go to state 194
    GotoStmt        go to state 195
    SelectStmt      go to state 196
    IfStmt          go to state 197
    SwitchStmt      go to state 198
    ExprSwitchStmt  go to state 199
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 200
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 323
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 239
    ElementList     go to state 240
    KeyedElement    go to state 241
    Key             go to state 242
    Element         go to state 243
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    Block           go to state 207
    Statements      go to state 208
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 187

  227 Statements: Statement •

    $default  reduce using rule 227 (Statements)


State 188

   24 Statement: ForStmt •

    $default  reduce using rule 24 (Statement)


State 189

   25 Statement: DeferStmt •

    $default  reduce using rule 25 (Statement)


State 190

   12 Statement: Declaration •

    $default  reduce using rule 12 (Statement)


State 191

   14 Statement: GoStmt •

    $default  reduce using rule 14 (Statement)


State 192

   15 Statement: ReturnStmt •

    $default  reduce using rule 15 (Statement)


State 193

   16 Statement: BreakStmt •

    $default  reduce using rule 16 (Statement)


State 194

   17 Statement: ContinueStmt •

    $default  reduce using rule 17 (Statement)


State 195

   18 Statement: GotoStmt •

    $default  reduce using rule 18 (Statement)


State 196

   23 Statement: SelectStmt •

    $default  reduce using rule 23 (Statement)


State 197

   21 Statement: IfStmt •

    $default  reduce using rule 21 (Statement)


State 198

   22 Statement: SwitchStmt •

    $default  reduce using rule 22 (Statement)


State 199

   72 SwitchStmt: ExprSwitchStmt •

    $default  reduce using rule 72 (SwitchStmt)


State 200

   13 Statement: SimpleStmt •

    $default  reduce using rule 13 (Statement)


State 201

  119 SimpleStmt: EmptyStatement •

    $default  reduce using rule 119 (SimpleStmt)


State 202

  117 SimpleStmt: SendStmt •

    $default  reduce using rule 117 (SimpleStmt)


State 203

  121 SendStmt: Channel • POINTER Expression

    POINTER  shift, and go to state 324


State 204

  118 SimpleStmt: IncDecStmt •

    $default  reduce using rule 118 (SimpleStmt)


State 205

  115 SimpleStmt: Assignment •

    $default  reduce using rule 115 (SimpleStmt)


State 206

  116 SimpleStmt: Expression •
  122 Channel: Expression •
  123 IncDecStmt: Expression • INC
  124           | Expression • DEC
  140 Expression: Expression • binary_op Expression
  247 ExpressionList: Expression •

    INC             shift, and go to state 325
    DEC             shift, and go to state 326
    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    ADDEQ     reduce using rule 247 (ExpressionList)
    DECEQ     reduce using rule 247 (ExpressionList)
    OREQ      reduce using rule 247 (ExpressionList)
    XOREQ     reduce using rule 247 (ExpressionList)
    MULEQ     reduce using rule 247 (ExpressionList)
    DIVEQ     reduce using rule 247 (ExpressionList)
    MODEQ     reduce using rule 247 (ExpressionList)
    LSHIFTEQ  reduce using rule 247 (ExpressionList)
    RSHIFTEQ  reduce using rule 247 (ExpressionList)
    ANDEQ     reduce using rule 247 (ExpressionList)
    ANDXOREQ  reduce using rule 247 (ExpressionList)
    EQ        reduce using rule 247 (ExpressionList)
    XOR       [reduce using rule 116 (SimpleStmt)]
    POINTER   reduce using rule 116 (SimpleStmt)
    POINTER   [reduce using rule 122 (Channel)]
    ','       reduce using rule 247 (ExpressionList)
    '*'       [reduce using rule 116 (SimpleStmt)]
    '&'       [reduce using rule 116 (SimpleStmt)]
    '-'       [reduce using rule 116 (SimpleStmt)]
    '+'       [reduce using rule 116 (SimpleStmt)]
    $default  reduce using rule 116 (SimpleStmt)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 207

   20 Statement: Block •

    $default  reduce using rule 20 (Statement)


State 208

  225 Block: '{' Statements • '}'
  226 Statements: Statements • Statement

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 175
    SWITCH             shift, and go to state 176
    FALLTHROUGH        shift, and go to state 177
    FOR                shift, and go to state 178
    BREAK              shift, and go to state 179
    SELECT             shift, and go to state 180
    RETURN             shift, and go to state 181
    MAP                shift, and go to state 49
    GO                 shift, and go to state 182
    GOTO               shift, and go to state 183
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONTINUE           shift, and go to state 184
    DEFER              shift, and go to state 185
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 186
    '}'                shift, and go to state 327
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    FUNCTION           [reduce using rule 120 (EmptyStatement)]
    id                 [reduce using rule 120 (EmptyStatement)]
    VAR                [reduce using rule 120 (EmptyStatement)]
    CONST              [reduce using rule 120 (EmptyStatement)]
    IF                 [reduce using rule 120 (EmptyStatement)]
    SWITCH             [reduce using rule 120 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 120 (EmptyStatement)]
    FOR                [reduce using rule 120 (EmptyStatement)]
    BREAK              [reduce using rule 120 (EmptyStatement)]
    SELECT             [reduce using rule 120 (EmptyStatement)]
    RETURN             [reduce using rule 120 (EmptyStatement)]
    MAP                [reduce using rule 120 (EmptyStatement)]
    GO                 [reduce using rule 120 (EmptyStatement)]
    GOTO               [reduce using rule 120 (EmptyStatement)]
    INTERFACE          [reduce using rule 120 (EmptyStatement)]
    CHAN               [reduce using rule 120 (EmptyStatement)]
    CONTINUE           [reduce using rule 120 (EmptyStatement)]
    DEFER              [reduce using rule 120 (EmptyStatement)]
    CONST_INT          [reduce using rule 120 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 120 (EmptyStatement)]
    CONST_STRING       [reduce using rule 120 (EmptyStatement)]
    BOOL               [reduce using rule 120 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 120 (EmptyStatement)]
    CONST_HEX          [reduce using rule 120 (EmptyStatement)]
    CONST_BIN          [reduce using rule 120 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 120 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 120 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 120 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 120 (EmptyStatement)]
    TYPE               [reduce using rule 120 (EmptyStatement)]
    STRUCT             [reduce using rule 120 (EmptyStatement)]
    XOR                [reduce using rule 120 (EmptyStatement)]
    POINTER            [reduce using rule 120 (EmptyStatement)]
    '{'                [reduce using rule 120 (EmptyStatement)]
    '}'                [reduce using rule 120 (EmptyStatement)]
    '('                [reduce using rule 120 (EmptyStatement)]
    '['                [reduce using rule 120 (EmptyStatement)]
    '*'                [reduce using rule 120 (EmptyStatement)]
    '&'                [reduce using rule 120 (EmptyStatement)]
    '-'                [reduce using rule 120 (EmptyStatement)]
    '+'                [reduce using rule 120 (EmptyStatement)]
    '!'                [reduce using rule 120 (EmptyStatement)]

    Statement       go to state 328
    ForStmt         go to state 188
    DeferStmt       go to state 189
    Declaration     go to state 190
    GoStmt          go to state 191
    ReturnStmt      go to state 192
    BreakStmt       go to state 193
    ContinueStmt    go to state 194
    GotoStmt        go to state 195
    SelectStmt      go to state 196
    IfStmt          go to state 197
    SwitchStmt      go to state 198
    ExprSwitchStmt  go to state 199
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 200
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    Block           go to state 207
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 209

  127 Assignment: ExpressionList • EQ ExpressionList
  128           | ExpressionList • ADDEQ ExpressionList
  129           | ExpressionList • DIVEQ ExpressionList
  130           | ExpressionList • DECEQ ExpressionList
  131           | ExpressionList • MULEQ ExpressionList
  132           | ExpressionList • MODEQ ExpressionList
  133           | ExpressionList • LSHIFTEQ ExpressionList
  134           | ExpressionList • RSHIFTEQ ExpressionList
  135           | ExpressionList • XOREQ ExpressionList
  136           | ExpressionList • ANDXOREQ ExpressionList
  137           | ExpressionList • ANDEQ ExpressionList
  138           | ExpressionList • OREQ ExpressionList
  246 ExpressionList: ExpressionList • ',' Expression

    ADDEQ     shift, and go to state 329
    DECEQ     shift, and go to state 330
    OREQ      shift, and go to state 331
    XOREQ     shift, and go to state 332
    MULEQ     shift, and go to state 333
    DIVEQ     shift, and go to state 334
    MODEQ     shift, and go to state 335
    LSHIFTEQ  shift, and go to state 336
    RSHIFTEQ  shift, and go to state 337
    ANDEQ     shift, and go to state 338
    ANDXOREQ  shift, and go to state 339
    EQ        shift, and go to state 340
    ','       shift, and go to state 285


State 210

  125 Assignment: IdentifierList • PEQ ExpressionList
  126           | IdentifierList • EQ ExpressionList

    EQ   shift, and go to state 341
    PEQ  shift, and go to state 342


State 211

  263 TypeName: id •
  264         | id • '.' TypeName
  292 IdentifierList: id •
  293               | id • ',' IdentifierList

    '.'  shift, and go to state 99
    ','  shift, and go to state 43

    id            reduce using rule 263 (TypeName)
    id            [reduce using rule 292 (IdentifierList)]
    CONST_STRING  reduce using rule 263 (TypeName)
    '}'           reduce using rule 263 (TypeName)
    ')'           reduce using rule 263 (TypeName)
    ')'           [reduce using rule 292 (IdentifierList)]
    '['           reduce using rule 263 (TypeName)
    '['           [reduce using rule 292 (IdentifierList)]
    ','           [reduce using rule 292 (IdentifierList)]
    '*'           reduce using rule 263 (TypeName)
    '*'           [reduce using rule 292 (IdentifierList)]
    $default      reduce using rule 292 (IdentifierList)


State 212

  285 Parameters: '(' ParameterList ',' ')' •

    $default  reduce using rule 285 (Parameters)


State 213

  286 ParameterList: ParameterDecl ',' ParameterList •

    $default  reduce using rule 286 (ParameterList)


State 214

  288 ParameterDecl: IdentifierList POINT Type •

    $default  reduce using rule 288 (ParameterDecl)


State 215

   10 MethodDecl: FUNCTION Receiver MethodName Signature Block •

    $default  reduce using rule 10 (MethodDecl)


State 216

  264 TypeName: id '.' TypeName •

    $default  reduce using rule 264 (TypeName)


State 217

  305 MapType: MAP '[' Type • ']' Type

    ']'  shift, and go to state 343


State 218

  298 InterfaceElem: id • Signature
  302 TypeTerm: id •

    '('  shift, and go to state 17

    $default  reduce using rule 302 (TypeTerm)

    Signature   go to state 344
    Parameters  go to state 35


State 219

  295 InterfaceType: INTERFACE '{' '}' •

    $default  reduce using rule 295 (InterfaceType)


State 220

  294 InterfaceType: INTERFACE '{' InterfaceElemList • '}'

    '}'  shift, and go to state 345


State 221

  296 InterfaceElemList: InterfaceElem • InterfaceElemList
  297                  | InterfaceElem •

    id   shift, and go to state 218
    '~'  shift, and go to state 169

    $default  reduce using rule 297 (InterfaceElemList)

    InterfaceElemList  go to state 346
    InterfaceElem      go to state 221
    TypeElem           go to state 222
    TypeTerm           go to state 172


State 222

  299 InterfaceElem: TypeElem •

    $default  reduce using rule 299 (InterfaceElem)


State 223

  307 ChannelType: CHAN POINTER id •

    $default  reduce using rule 307 (ChannelType)


State 224

  267 StructType: STRUCT '{' '}' •

    $default  reduce using rule 267 (StructType)


State 225

  274 EmbeddedField: '*' • TypeName TypeArgs
  276              | '*' • TypeName

    id  shift, and go to state 48

    TypeName  go to state 347


State 226

  275 EmbeddedField: TypeName • TypeArgs
  277              | TypeName •

    '['  shift, and go to state 155

    $default  reduce using rule 277 (EmbeddedField)

    TypeArgs  go to state 348


State 227

  266 StructType: STRUCT '{' DeclList • '}'

    '}'  shift, and go to state 349


State 228

  268 DeclList: FieldDecl • DeclList
  269         | FieldDecl •

    id   shift, and go to state 211
    '*'  shift, and go to state 225

    $default  reduce using rule 269 (DeclList)

    TypeName        go to state 226
    DeclList        go to state 350
    FieldDecl       go to state 228
    EmbeddedField   go to state 229
    IdentifierList  go to state 230


State 229

  272 FieldDecl: EmbeddedField • CONST_STRING
  273          | EmbeddedField •

    CONST_STRING  shift, and go to state 351

    $default  reduce using rule 273 (FieldDecl)


State 230

  270 FieldDecl: IdentifierList • Type CONST_STRING
  271          | IdentifierList • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 352
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 231

  224 FunctionLit: FUNCTION Signature • Block
  279 FunctionType: FUNCTION Signature •

    '{'  shift, and go to state 83

    $default  reduce using rule 279 (FunctionType)

    Block  go to state 353


State 232

  216 OperandName: id '.' • OperandName
  264 TypeName: id '.' • TypeName

    id  shift, and go to state 354

    OperandName  go to state 355
    TypeName     go to state 216


State 233

  167 UnaryExpr: XOR UnaryExpr •

    $default  reduce using rule 167 (UnaryExpr)


State 234

  306 ChannelType: CHAN • Type
  307            | CHAN • POINTER id
  308            | POINTER CHAN • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 102
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 356
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 235

  170 UnaryExpr: POINTER UnaryExpr •

    $default  reduce using rule 170 (UnaryExpr)


State 236

  202 LiteralType: id •
  210 Key: id •
  215 OperandName: id •
  216            | id • '.' OperandName
  263 TypeName: id •
  264         | id • '.' TypeName

    '.'  shift, and go to state 232

    '{'       reduce using rule 202 (LiteralType)
    ':'       reduce using rule 210 (Key)
    ':'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 263 (TypeName)]
    '('       reduce using rule 215 (OperandName)
    '('       [reduce using rule 263 (TypeName)]
    '['       reduce using rule 215 (OperandName)
    '['       [reduce using rule 263 (TypeName)]
    $default  reduce using rule 215 (OperandName)


State 237

  205 LiteralValue: '{' '}' •

    $default  reduce using rule 205 (LiteralValue)


State 238

  140 Expression: Expression • binary_op Expression
  211 Key: Expression •
  213 Element: Expression •

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    ':'       reduce using rule 211 (Key)
    $default  reduce using rule 213 (Element)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 239

  196 CompositeLit: LiteralValue •
  212 Key: LiteralValue •
  214 Element: LiteralValue •

    '}'       reduce using rule 196 (CompositeLit)
    '}'       [reduce using rule 214 (Element)]
    ':'       reduce using rule 196 (CompositeLit)
    ':'       [reduce using rule 212 (Key)]
    ','       reduce using rule 196 (CompositeLit)
    ','       [reduce using rule 214 (Element)]
    $default  reduce using rule 196 (CompositeLit)


State 240

  203 LiteralValue: '{' ElementList • '}'
  204             | '{' ElementList • ',' '}'
  206 ElementList: ElementList • ',' KeyedElement

    '}'  shift, and go to state 357
    ','  shift, and go to state 358


State 241

  207 ElementList: KeyedElement •

    $default  reduce using rule 207 (ElementList)


State 242

  208 KeyedElement: Key • ':' Element

    ':'  shift, and go to state 359


State 243

  209 KeyedElement: Element •

    $default  reduce using rule 209 (KeyedElement)


State 244

  187 Operand: '(' ExpressionList • ')'
  246 ExpressionList: ExpressionList • ',' Expression

    ')'  shift, and go to state 360
    ','  shift, and go to state 285


State 245

  179 Conversion: Type • '(' ExpressionList ')'
  180           | Type • '(' ExpressionList ',' ')'
  181 MethodExpr: Type • '.' MethodName
  250 Type: '(' Type • ')'

    '.'  shift, and go to state 286
    '('  shift, and go to state 287
    ')'  shift, and go to state 289


State 246

  199 LiteralType: '[' POINT • ']' Type

    ']'  shift, and go to state 361


State 247

  168 UnaryExpr: '*' UnaryExpr •

    $default  reduce using rule 168 (UnaryExpr)


State 248

  179 Conversion: Type • '(' ExpressionList ')'
  180           | Type • '(' ExpressionList ',' ')'
  181 MethodExpr: Type • '.' MethodName
  278 PointerType: '*' Type •

    '.'  shift, and go to state 286
    '('  shift, and go to state 287

    '.'       [reduce using rule 278 (PointerType)]
    '('       [reduce using rule 278 (PointerType)]
    $default  reduce using rule 278 (PointerType)


State 249

  169 UnaryExpr: '&' UnaryExpr •

    $default  reduce using rule 169 (UnaryExpr)


State 250

  165 UnaryExpr: '-' UnaryExpr •

    $default  reduce using rule 165 (UnaryExpr)


State 251

  164 UnaryExpr: '+' UnaryExpr •

    $default  reduce using rule 164 (UnaryExpr)


State 252

  166 UnaryExpr: '!' UnaryExpr •

    $default  reduce using rule 166 (UnaryExpr)


State 253

  157 rel_op: EQUAL •

    $default  reduce using rule 157 (rel_op)


State 254

  158 rel_op: NOTEQUAL •

    $default  reduce using rule 158 (rel_op)


State 255

  162 rel_op: GREATEROREQUAL •

    $default  reduce using rule 162 (rel_op)


State 256

  161 rel_op: LESSOREQUAL •

    $default  reduce using rule 161 (rel_op)


State 257

  142 binary_op: AND •

    $default  reduce using rule 142 (binary_op)


State 258

  141 binary_op: OR •

    $default  reduce using rule 141 (binary_op)


State 259

  149 mul_op: LSHIFT •

    $default  reduce using rule 149 (mul_op)


State 260

  150 mul_op: RSHIFT •

    $default  reduce using rule 150 (mul_op)


State 261

  154 add_op: XOR •

    $default  reduce using rule 154 (add_op)


State 262

  152 mul_op: AMP_EXP •

    $default  reduce using rule 152 (mul_op)


State 263

  146 mul_op: '*' •

    $default  reduce using rule 146 (mul_op)


State 264

  147 mul_op: '/' •

    $default  reduce using rule 147 (mul_op)


State 265

  148 mul_op: '%' •

    $default  reduce using rule 148 (mul_op)


State 266

  151 mul_op: '&' •

    $default  reduce using rule 151 (mul_op)


State 267

  153 add_op: '-' •

    $default  reduce using rule 153 (add_op)


State 268

  155 add_op: '|' •

    $default  reduce using rule 155 (add_op)


State 269

  156 add_op: '+' •

    $default  reduce using rule 156 (add_op)


State 270

  159 rel_op: '<' •

    $default  reduce using rule 159 (rel_op)


State 271

  160 rel_op: '>' •

    $default  reduce using rule 160 (rel_op)


State 272

  140 Expression: Expression binary_op • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 362
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 273

  145 binary_op: mul_op •

    $default  reduce using rule 145 (binary_op)


State 274

  144 binary_op: add_op •

    $default  reduce using rule 144 (binary_op)


State 275

  143 binary_op: rel_op •

    $default  reduce using rule 143 (binary_op)


State 276

  228 Selector: '.' • id
  237 TypeAssertion: '.' • '(' Type ')'

    id   shift, and go to state 363
    '('  shift, and go to state 364


State 277

  238 Arguments: '(' • ExpressionList ')'
  239          | '(' • ExpressionList ',' ')'
  240          | '(' • ExpressionList POINT ')'
  241          | '(' • Type ',' ')'
  242          | '(' • Type POINT ')'
  243          | '(' • Type ')'
  244          | '(' • Type ',' ExpressionList ')'
  245          | '(' • ')'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    ')'                shift, and go to state 365
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 366
    Type            go to state 367
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 278

  229 Index: '[' • Expression ']'
  230      | '[' • Expression ',' ']'
  231 Slice: '[' • Expression ':' Expression ']'
  232      | '[' • ':' Expression ']'
  233      | '[' • Expression ':' ']'
  234      | '[' • ':' ']'
  235      | '[' • Expression ':' Expression ':' Expression ']'
  236      | '[' • ':' Expression ':' Expression ']'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    ':'                shift, and go to state 368
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 369
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 279

  175 PrimaryExpr: PrimaryExpr Selector •

    $default  reduce using rule 175 (PrimaryExpr)


State 280

  176 PrimaryExpr: PrimaryExpr Index •

    $default  reduce using rule 176 (PrimaryExpr)


State 281

  177 PrimaryExpr: PrimaryExpr Slice •

    $default  reduce using rule 177 (PrimaryExpr)


State 282

  178 PrimaryExpr: PrimaryExpr TypeAssertion •

    $default  reduce using rule 178 (PrimaryExpr)


State 283

  172 PrimaryExpr: PrimaryExpr Arguments •

    $default  reduce using rule 172 (PrimaryExpr)


State 284

  195 CompositeLit: LiteralType LiteralValue •

    $default  reduce using rule 195 (CompositeLit)


State 285

  246 ExpressionList: ExpressionList ',' • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 370
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 286

  181 MethodExpr: Type '.' • MethodName

    id  shift, and go to state 41

    MethodName  go to state 371


State 287

  179 Conversion: Type '(' • ExpressionList ')'
  180           | Type '(' • ExpressionList ',' ')'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 372
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 288

  308 ChannelType: POINTER CHAN Type •

    $default  reduce using rule 308 (ChannelType)


State 289

  250 Type: '(' Type ')' •

    $default  reduce using rule 250 (Type)


State 290

  304 SliceType: '[' ']' Type •

    $default  reduce using rule 304 (SliceType)


State 291

  265 ArrayType: '[' Expression ']' • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 373
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 292

  113 VarSpec: IdentifierList Type EQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 113 (VarSpec)


State 293

  261 TypeList: Type • ',' TypeList
  262         | Type •

    ','  shift, and go to state 374

    ','       [reduce using rule 262 (TypeList)]
    $default  reduce using rule 262 (TypeList)


State 294

  259 TypeArgs: '[' TypeList • ']'
  260         | '[' TypeList • ',' ']'

    ']'  shift, and go to state 375
    ','  shift, and go to state 376


State 295

   89 ConstExpr: Type EQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 89 (ConstExpr)


State 296

  101 TypeParameters: '[' TypeParamList ',' ']' •

    $default  reduce using rule 101 (TypeParameters)


State 297

  103 TypeParamList: TypeParamDecl ',' TypeParamList •

    $default  reduce using rule 103 (TypeParamList)


State 298

  303 TypeTerm: '~' Type •

    $default  reduce using rule 303 (TypeTerm)


State 299

  300 TypeElem: TypeTerm '|' • TypeElem

    id   shift, and go to state 168
    '~'  shift, and go to state 169

    TypeElem  go to state 377
    TypeTerm  go to state 172


State 300

   66 IfStmt: IF SimpleStmt • SEMICOLON Expression Block ELSE IfStmt
   67       | IF SimpleStmt • SEMICOLON Expression Block ELSE Block
   68       | IF SimpleStmt • SEMICOLON Expression Block

    SEMICOLON  shift, and go to state 378


State 301

   69 IfStmt: IF Expression • Block
   70       | IF Expression • Block ELSE IfStmt
   71       | IF Expression • Block ELSE Block
  116 SimpleStmt: Expression •
  122 Channel: Expression •
  123 IncDecStmt: Expression • INC
  124           | Expression • DEC
  140 Expression: Expression • binary_op Expression
  247 ExpressionList: Expression •

    INC             shift, and go to state 325
    DEC             shift, and go to state 326
    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '{'             shift, and go to state 83
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    SEMICOLON  reduce using rule 116 (SimpleStmt)
    POINTER    reduce using rule 122 (Channel)
    $default   reduce using rule 247 (ExpressionList)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275
    Block      go to state 379


State 302

   76 ExprSwitchStmt: SWITCH '{' • ExprCaseClauseList '}'
  203 LiteralValue: '{' • ElementList '}'
  204             | '{' • ElementList ',' '}'
  205             | '{' • '}'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 236
    CASE               shift, and go to state 380
    DEFAULT            shift, and go to state 381
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '}'                shift, and go to state 237
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    ExprCaseClauseList  go to state 382
    ExprCaseClause      go to state 383
    ExprSwitchCase      go to state 384
    Expression          go to state 238
    UnaryExpr           go to state 129
    PrimaryExpr         go to state 130
    Conversion          go to state 131
    MethodExpr          go to state 132
    Operand             go to state 133
    BasicLit            go to state 134
    CompositeLit        go to state 135
    LiteralType         go to state 136
    LiteralValue        go to state 239
    ElementList         go to state 240
    KeyedElement        go to state 241
    Key                 go to state 242
    Element             go to state 243
    OperandName         go to state 138
    int_lit             go to state 139
    imaginary_lit       go to state 140
    float_lit           go to state 141
    FunctionLit         go to state 142
    Type                go to state 144
    TypeName            go to state 59
    ArrayType           go to state 145
    StructType          go to state 146
    PointerType         go to state 62
    FunctionType        go to state 63
    InterfaceType       go to state 64
    SliceType           go to state 147
    MapType             go to state 148
    ChannelType         go to state 67


State 303

   73 ExprSwitchStmt: SWITCH SimpleStmt • SEMICOLON Expression '{' ExprCaseClauseList '}'
   74               | SWITCH SimpleStmt • SEMICOLON '{' ExprCaseClauseList '}'

    SEMICOLON  shift, and go to state 385


State 304

   75 ExprSwitchStmt: SWITCH Expression • '{' ExprCaseClauseList '}'
  116 SimpleStmt: Expression •
  122 Channel: Expression •
  123 IncDecStmt: Expression • INC
  124           | Expression • DEC
  140 Expression: Expression • binary_op Expression
  247 ExpressionList: Expression •

    INC             shift, and go to state 325
    DEC             shift, and go to state 326
    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '{'             shift, and go to state 386
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    SEMICOLON  reduce using rule 116 (SimpleStmt)
    POINTER    reduce using rule 122 (Channel)
    $default   reduce using rule 247 (ExpressionList)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 305

   39 RangeClause: RANGE • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 387
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 306

   34 ForClause: SEMICOLON • Expression SEMICOLON
   35          | SEMICOLON • Expression SEMICOLON SimpleStmt
   36          | SEMICOLON • SEMICOLON SimpleStmt

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    SEMICOLON          shift, and go to state 388
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 389
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 307

   27 ForStmt: FOR ForClause • Block

    '{'  shift, and go to state 83

    Block  go to state 390


State 308

   28 ForStmt: FOR RangeClause • Block

    '{'  shift, and go to state 83

    Block  go to state 391


State 309

   30 ForClause: SimpleStmt • SEMICOLON Expression SEMICOLON SimpleStmt
   31          | SimpleStmt • SEMICOLON SEMICOLON
   32          | SimpleStmt • SEMICOLON Expression SEMICOLON
   33          | SimpleStmt • SEMICOLON SEMICOLON SimpleStmt

    SEMICOLON  shift, and go to state 392


State 310

   26 ForStmt: FOR Expression • Block
  116 SimpleStmt: Expression •
  122 Channel: Expression •
  123 IncDecStmt: Expression • INC
  124           | Expression • DEC
  140 Expression: Expression • binary_op Expression
  247 ExpressionList: Expression •

    INC             shift, and go to state 325
    DEC             shift, and go to state 326
    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '{'             shift, and go to state 83
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    SEMICOLON  reduce using rule 116 (SimpleStmt)
    POINTER    reduce using rule 122 (Channel)
    $default   reduce using rule 247 (ExpressionList)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275
    Block      go to state 393


State 311

   29 ForStmt: FOR Block •

    $default  reduce using rule 29 (ForStmt)


State 312

   37 RangeClause: ExpressionList • EQ RANGE Expression
  127 Assignment: ExpressionList • EQ ExpressionList
  128           | ExpressionList • ADDEQ ExpressionList
  129           | ExpressionList • DIVEQ ExpressionList
  130           | ExpressionList • DECEQ ExpressionList
  131           | ExpressionList • MULEQ ExpressionList
  132           | ExpressionList • MODEQ ExpressionList
  133           | ExpressionList • LSHIFTEQ ExpressionList
  134           | ExpressionList • RSHIFTEQ ExpressionList
  135           | ExpressionList • XOREQ ExpressionList
  136           | ExpressionList • ANDXOREQ ExpressionList
  137           | ExpressionList • ANDEQ ExpressionList
  138           | ExpressionList • OREQ ExpressionList
  246 ExpressionList: ExpressionList • ',' Expression

    ADDEQ     shift, and go to state 329
    DECEQ     shift, and go to state 330
    OREQ      shift, and go to state 331
    XOREQ     shift, and go to state 332
    MULEQ     shift, and go to state 333
    DIVEQ     shift, and go to state 334
    MODEQ     shift, and go to state 335
    LSHIFTEQ  shift, and go to state 336
    RSHIFTEQ  shift, and go to state 337
    ANDEQ     shift, and go to state 338
    ANDXOREQ  shift, and go to state 339
    EQ        shift, and go to state 394
    ','       shift, and go to state 285


State 313

   38 RangeClause: IdentifierList • PEQ RANGE Expression
  125 Assignment: IdentifierList • PEQ ExpressionList
  126           | IdentifierList • EQ ExpressionList

    EQ   shift, and go to state 341
    PEQ  shift, and go to state 395


State 314

   53 Label: id •

    $default  reduce using rule 53 (Label)


State 315

   47 BreakStmt: BREAK Label •

    $default  reduce using rule 47 (BreakStmt)


State 316

   54 SelectStmt: SELECT '{' • CommClauseList '}'
   55           | SELECT '{' • '}'

    CASE     shift, and go to state 396
    DEFAULT  shift, and go to state 397
    '}'      shift, and go to state 398

    CommClauseList  go to state 399
    CommClause      go to state 400
    CommCase        go to state 401


State 317

   45 ReturnStmt: RETURN ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 45 (ReturnStmt)


State 318

   44 GoStmt: GO Expression •
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    XOR       [reduce using rule 44 (GoStmt)]
    '*'       [reduce using rule 44 (GoStmt)]
    '&'       [reduce using rule 44 (GoStmt)]
    '-'       [reduce using rule 44 (GoStmt)]
    '+'       [reduce using rule 44 (GoStmt)]
    $default  reduce using rule 44 (GoStmt)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 319

   51 GotoStmt: GOTO Label •

    $default  reduce using rule 51 (GotoStmt)


State 320

   49 ContinueStmt: CONTINUE Label •

    $default  reduce using rule 49 (ContinueStmt)


State 321

   40 DeferStmt: DEFER Expression •
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    XOR       [reduce using rule 40 (DeferStmt)]
    '*'       [reduce using rule 40 (DeferStmt)]
    '&'       [reduce using rule 40 (DeferStmt)]
    '-'       [reduce using rule 40 (DeferStmt)]
    '+'       [reduce using rule 40 (DeferStmt)]
    $default  reduce using rule 40 (DeferStmt)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 322

  202 LiteralType: id •
  210 Key: id •
  215 OperandName: id •
  216            | id • '.' OperandName
  263 TypeName: id •
  264         | id • '.' TypeName
  292 IdentifierList: id •
  293               | id • ',' IdentifierList

    '.'  shift, and go to state 232
    ','  shift, and go to state 43

    EQ        reduce using rule 215 (OperandName)
    EQ        [reduce using rule 292 (IdentifierList)]
    PEQ       reduce using rule 292 (IdentifierList)
    '{'       reduce using rule 202 (LiteralType)
    '{'       [reduce using rule 215 (OperandName)]
    ':'       reduce using rule 210 (Key)
    ':'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 263 (TypeName)]
    '('       reduce using rule 215 (OperandName)
    '('       [reduce using rule 263 (TypeName)]
    '['       reduce using rule 215 (OperandName)
    '['       [reduce using rule 263 (TypeName)]
    ','       [reduce using rule 215 (OperandName)]
    $default  reduce using rule 215 (OperandName)


State 323

  116 SimpleStmt: Expression •
  122 Channel: Expression •
  123 IncDecStmt: Expression • INC
  124           | Expression • DEC
  140 Expression: Expression • binary_op Expression
  211 Key: Expression •
  213 Element: Expression •
  247 ExpressionList: Expression •

    INC             shift, and go to state 325
    DEC             shift, and go to state 326
    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    ADDEQ     reduce using rule 247 (ExpressionList)
    DECEQ     reduce using rule 247 (ExpressionList)
    OREQ      reduce using rule 247 (ExpressionList)
    XOREQ     reduce using rule 247 (ExpressionList)
    MULEQ     reduce using rule 247 (ExpressionList)
    DIVEQ     reduce using rule 247 (ExpressionList)
    MODEQ     reduce using rule 247 (ExpressionList)
    LSHIFTEQ  reduce using rule 247 (ExpressionList)
    RSHIFTEQ  reduce using rule 247 (ExpressionList)
    ANDEQ     reduce using rule 247 (ExpressionList)
    ANDXOREQ  reduce using rule 247 (ExpressionList)
    EQ        reduce using rule 247 (ExpressionList)
    XOR       [reduce using rule 116 (SimpleStmt)]
    POINTER   reduce using rule 116 (SimpleStmt)
    POINTER   [reduce using rule 122 (Channel)]
    '}'       reduce using rule 116 (SimpleStmt)
    '}'       [reduce using rule 213 (Element)]
    ':'       reduce using rule 211 (Key)
    ','       reduce using rule 213 (Element)
    ','       [reduce using rule 247 (ExpressionList)]
    '*'       [reduce using rule 116 (SimpleStmt)]
    '&'       [reduce using rule 116 (SimpleStmt)]
    '-'       [reduce using rule 116 (SimpleStmt)]
    '+'       [reduce using rule 116 (SimpleStmt)]
    $default  reduce using rule 116 (SimpleStmt)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 324

  121 SendStmt: Channel POINTER • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 402
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 325

  123 IncDecStmt: Expression INC •

    $default  reduce using rule 123 (IncDecStmt)


State 326

  124 IncDecStmt: Expression DEC •

    $default  reduce using rule 124 (IncDecStmt)


State 327

  225 Block: '{' Statements '}' •

    $default  reduce using rule 225 (Block)


State 328

  226 Statements: Statements Statement •

    $default  reduce using rule 226 (Statements)


State 329

  128 Assignment: ExpressionList ADDEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 403
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 330

  130 Assignment: ExpressionList DECEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 404
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 331

  138 Assignment: ExpressionList OREQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 405
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 332

  135 Assignment: ExpressionList XOREQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 406
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 333

  131 Assignment: ExpressionList MULEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 407
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 334

  129 Assignment: ExpressionList DIVEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 408
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 335

  132 Assignment: ExpressionList MODEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 409
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 336

  133 Assignment: ExpressionList LSHIFTEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 410
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 337

  134 Assignment: ExpressionList RSHIFTEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 411
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 338

  137 Assignment: ExpressionList ANDEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 412
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 339

  136 Assignment: ExpressionList ANDXOREQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 413
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 340

  127 Assignment: ExpressionList EQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 414
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 341

  126 Assignment: IdentifierList EQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 415
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 342

  125 Assignment: IdentifierList PEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 416
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 343

  305 MapType: MAP '[' Type ']' • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 417
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 344

  298 InterfaceElem: id Signature •

    $default  reduce using rule 298 (InterfaceElem)


State 345

  294 InterfaceType: INTERFACE '{' InterfaceElemList '}' •

    $default  reduce using rule 294 (InterfaceType)


State 346

  296 InterfaceElemList: InterfaceElem InterfaceElemList •

    $default  reduce using rule 296 (InterfaceElemList)


State 347

  274 EmbeddedField: '*' TypeName • TypeArgs
  276              | '*' TypeName •

    '['  shift, and go to state 155

    $default  reduce using rule 276 (EmbeddedField)

    TypeArgs  go to state 418


State 348

  275 EmbeddedField: TypeName TypeArgs •

    $default  reduce using rule 275 (EmbeddedField)


State 349

  266 StructType: STRUCT '{' DeclList '}' •

    $default  reduce using rule 266 (StructType)


State 350

  268 DeclList: FieldDecl DeclList •

    $default  reduce using rule 268 (DeclList)


State 351

  272 FieldDecl: EmbeddedField CONST_STRING •

    $default  reduce using rule 272 (FieldDecl)


State 352

  270 FieldDecl: IdentifierList Type • CONST_STRING
  271          | IdentifierList Type •

    CONST_STRING  shift, and go to state 419

    $default  reduce using rule 271 (FieldDecl)


State 353

  224 FunctionLit: FUNCTION Signature Block •

    $default  reduce using rule 224 (FunctionLit)


State 354

  215 OperandName: id •
  216            | id • '.' OperandName
  263 TypeName: id •
  264         | id • '.' TypeName

    '.'  shift, and go to state 232

    POINT     reduce using rule 215 (OperandName)
    POINT     [reduce using rule 263 (TypeName)]
    '.'       [reduce using rule 215 (OperandName)]
    '.'       [reduce using rule 263 (TypeName)]
    '('       reduce using rule 215 (OperandName)
    '('       [reduce using rule 263 (TypeName)]
    ')'       reduce using rule 215 (OperandName)
    ')'       [reduce using rule 263 (TypeName)]
    '['       reduce using rule 215 (OperandName)
    '['       [reduce using rule 263 (TypeName)]
    ','       reduce using rule 215 (OperandName)
    ','       [reduce using rule 263 (TypeName)]
    $default  reduce using rule 215 (OperandName)


State 355

  216 OperandName: id '.' OperandName •

    $default  reduce using rule 216 (OperandName)


State 356

  306 ChannelType: CHAN Type •
  308            | POINTER CHAN Type •

    '.'       reduce using rule 306 (ChannelType)
    '.'       [reduce using rule 308 (ChannelType)]
    '('       reduce using rule 306 (ChannelType)
    '('       [reduce using rule 308 (ChannelType)]
    $default  reduce using rule 308 (ChannelType)


State 357

  203 LiteralValue: '{' ElementList '}' •

    $default  reduce using rule 203 (LiteralValue)


State 358

  204 LiteralValue: '{' ElementList ',' • '}'
  206 ElementList: ElementList ',' • KeyedElement

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 236
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '}'                shift, and go to state 420
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 238
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 239
    KeyedElement   go to state 421
    Key            go to state 242
    Element        go to state 243
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 359

  208 KeyedElement: Key ':' • Element

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 422
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 423
    Element        go to state 424
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 360

  187 Operand: '(' ExpressionList ')' •

    $default  reduce using rule 187 (Operand)


State 361

  199 LiteralType: '[' POINT ']' • Type

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 425
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 362

  140 Expression: Expression • binary_op Expression
  140           | Expression binary_op Expression •

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    EQUAL           [reduce using rule 140 (Expression)]
    NOTEQUAL        [reduce using rule 140 (Expression)]
    GREATEROREQUAL  [reduce using rule 140 (Expression)]
    LESSOREQUAL     [reduce using rule 140 (Expression)]
    AND             [reduce using rule 140 (Expression)]
    OR              [reduce using rule 140 (Expression)]
    LSHIFT          [reduce using rule 140 (Expression)]
    RSHIFT          [reduce using rule 140 (Expression)]
    XOR             [reduce using rule 140 (Expression)]
    AMP_EXP         [reduce using rule 140 (Expression)]
    '*'             [reduce using rule 140 (Expression)]
    '/'             [reduce using rule 140 (Expression)]
    '%'             [reduce using rule 140 (Expression)]
    '&'             [reduce using rule 140 (Expression)]
    '-'             [reduce using rule 140 (Expression)]
    '|'             [reduce using rule 140 (Expression)]
    '+'             [reduce using rule 140 (Expression)]
    '<'             [reduce using rule 140 (Expression)]
    '>'             [reduce using rule 140 (Expression)]
    $default        reduce using rule 140 (Expression)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 363

  228 Selector: '.' id •

    $default  reduce using rule 228 (Selector)


State 364

  237 TypeAssertion: '.' '(' • Type ')'

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 426
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 365

  245 Arguments: '(' ')' •

    $default  reduce using rule 245 (Arguments)


State 366

  238 Arguments: '(' ExpressionList • ')'
  239          | '(' ExpressionList • ',' ')'
  240          | '(' ExpressionList • POINT ')'
  246 ExpressionList: ExpressionList • ',' Expression

    POINT  shift, and go to state 427
    ')'    shift, and go to state 428
    ','    shift, and go to state 429


State 367

  179 Conversion: Type • '(' ExpressionList ')'
  180           | Type • '(' ExpressionList ',' ')'
  181 MethodExpr: Type • '.' MethodName
  241 Arguments: '(' Type • ',' ')'
  242          | '(' Type • POINT ')'
  243          | '(' Type • ')'
  244          | '(' Type • ',' ExpressionList ')'

    POINT  shift, and go to state 430
    '.'    shift, and go to state 286
    '('    shift, and go to state 287
    ')'    shift, and go to state 431
    ','    shift, and go to state 432


State 368

  232 Slice: '[' ':' • Expression ']'
  234      | '[' ':' • ']'
  236      | '[' ':' • Expression ':' Expression ']'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    ']'                shift, and go to state 433
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 434
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 369

  140 Expression: Expression • binary_op Expression
  229 Index: '[' Expression • ']'
  230      | '[' Expression • ',' ']'
  231 Slice: '[' Expression • ':' Expression ']'
  233      | '[' Expression • ':' ']'
  235      | '[' Expression • ':' Expression ':' Expression ']'

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    ':'             shift, and go to state 435
    ']'             shift, and go to state 436
    ','             shift, and go to state 437
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 370

  140 Expression: Expression • binary_op Expression
  246 ExpressionList: ExpressionList ',' Expression •

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    XOR       [reduce using rule 246 (ExpressionList)]
    '*'       [reduce using rule 246 (ExpressionList)]
    '&'       [reduce using rule 246 (ExpressionList)]
    '-'       [reduce using rule 246 (ExpressionList)]
    '+'       [reduce using rule 246 (ExpressionList)]
    $default  reduce using rule 246 (ExpressionList)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 371

  181 MethodExpr: Type '.' MethodName •

    $default  reduce using rule 181 (MethodExpr)


State 372

  179 Conversion: Type '(' ExpressionList • ')'
  180           | Type '(' ExpressionList • ',' ')'
  246 ExpressionList: ExpressionList • ',' Expression

    ')'  shift, and go to state 438
    ','  shift, and go to state 439


State 373

  265 ArrayType: '[' Expression ']' Type •

    $default  reduce using rule 265 (ArrayType)


State 374

  261 TypeList: Type ',' • TypeList

    FUNCTION   shift, and go to state 47
    id         shift, and go to state 48
    MAP        shift, and go to state 49
    INTERFACE  shift, and go to state 50
    CHAN       shift, and go to state 51
    STRUCT     shift, and go to state 52
    POINTER    shift, and go to state 54
    '('        shift, and go to state 55
    '['        shift, and go to state 56
    '*'        shift, and go to state 57

    Type           go to state 293
    TypeList       go to state 440
    TypeName       go to state 59
    ArrayType      go to state 60
    StructType     go to state 61
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 65
    MapType        go to state 66
    ChannelType    go to state 67


State 375

  259 TypeArgs: '[' TypeList ']' •

    $default  reduce using rule 259 (TypeArgs)


State 376

  260 TypeArgs: '[' TypeList ',' • ']'

    ']'  shift, and go to state 441


State 377

  300 TypeElem: TypeTerm '|' TypeElem •

    $default  reduce using rule 300 (TypeElem)


State 378

   66 IfStmt: IF SimpleStmt SEMICOLON • Expression Block ELSE IfStmt
   67       | IF SimpleStmt SEMICOLON • Expression Block ELSE Block
   68       | IF SimpleStmt SEMICOLON • Expression Block

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 442
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 379

   69 IfStmt: IF Expression Block •
   70       | IF Expression Block • ELSE IfStmt
   71       | IF Expression Block • ELSE Block

    ELSE  shift, and go to state 443

    $default  reduce using rule 69 (IfStmt)


State 380

   80 ExprSwitchCase: CASE • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 444
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 381

   81 ExprSwitchCase: DEFAULT •

    $default  reduce using rule 81 (ExprSwitchCase)


State 382

   76 ExprSwitchStmt: SWITCH '{' ExprCaseClauseList • '}'

    '}'  shift, and go to state 445


State 383

   77 ExprCaseClauseList: ExprCaseClause • ExprCaseClauseList
   78                   | ExprCaseClause •

    CASE     shift, and go to state 380
    DEFAULT  shift, and go to state 381

    $default  reduce using rule 78 (ExprCaseClauseList)

    ExprCaseClauseList  go to state 446
    ExprCaseClause      go to state 383
    ExprSwitchCase      go to state 384


State 384

   79 ExprCaseClause: ExprSwitchCase • ':' Statements

    ':'  shift, and go to state 447


State 385

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON • Expression '{' ExprCaseClauseList '}'
   74               | SWITCH SimpleStmt SEMICOLON • '{' ExprCaseClauseList '}'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 448
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 449
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 386

   75 ExprSwitchStmt: SWITCH Expression '{' • ExprCaseClauseList '}'

    CASE     shift, and go to state 380
    DEFAULT  shift, and go to state 381

    ExprCaseClauseList  go to state 450
    ExprCaseClause      go to state 383
    ExprSwitchCase      go to state 384


State 387

   39 RangeClause: RANGE Expression •
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    $default  reduce using rule 39 (RangeClause)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 388

   36 ForClause: SEMICOLON SEMICOLON • SimpleStmt

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    '{'  [reduce using rule 120 (EmptyStatement)]

    SimpleStmt      go to state 451
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 389

   34 ForClause: SEMICOLON Expression • SEMICOLON
   35          | SEMICOLON Expression • SEMICOLON SimpleStmt
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    SEMICOLON       shift, and go to state 452
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 390

   27 ForStmt: FOR ForClause Block •

    $default  reduce using rule 27 (ForStmt)


State 391

   28 ForStmt: FOR RangeClause Block •

    $default  reduce using rule 28 (ForStmt)


State 392

   30 ForClause: SimpleStmt SEMICOLON • Expression SEMICOLON SimpleStmt
   31          | SimpleStmt SEMICOLON • SEMICOLON
   32          | SimpleStmt SEMICOLON • Expression SEMICOLON
   33          | SimpleStmt SEMICOLON • SEMICOLON SimpleStmt

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    SEMICOLON          shift, and go to state 453
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 454
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 393

   26 ForStmt: FOR Expression Block •

    $default  reduce using rule 26 (ForStmt)


State 394

   37 RangeClause: ExpressionList EQ • RANGE Expression
  127 Assignment: ExpressionList EQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    RANGE              shift, and go to state 455
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 414
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 395

   38 RangeClause: IdentifierList PEQ • RANGE Expression
  125 Assignment: IdentifierList PEQ • ExpressionList

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    RANGE              shift, and go to state 456
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 416
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 396

   59 CommCase: CASE • SendStmt
   60         | CASE • RecvStmt

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    RecvStmt        go to state 457
    RecvExpr        go to state 458
    SendStmt        go to state 459
    Channel         go to state 203
    Expression      go to state 460
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 461
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 462
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 397

   61 CommCase: DEFAULT •

    $default  reduce using rule 61 (CommCase)


State 398

   55 SelectStmt: SELECT '{' '}' •

    $default  reduce using rule 55 (SelectStmt)


State 399

   54 SelectStmt: SELECT '{' CommClauseList • '}'
   56 CommClauseList: CommClauseList • CommClause

    CASE     shift, and go to state 396
    DEFAULT  shift, and go to state 397
    '}'      shift, and go to state 463

    CommClause  go to state 464
    CommCase    go to state 401


State 400

   57 CommClauseList: CommClause •

    $default  reduce using rule 57 (CommClauseList)


State 401

   58 CommClause: CommCase • ':' Statements

    ':'  shift, and go to state 465


State 402

  121 SendStmt: Channel POINTER Expression •
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    XOR       [reduce using rule 121 (SendStmt)]
    '*'       [reduce using rule 121 (SendStmt)]
    '&'       [reduce using rule 121 (SendStmt)]
    '-'       [reduce using rule 121 (SendStmt)]
    '+'       [reduce using rule 121 (SendStmt)]
    $default  reduce using rule 121 (SendStmt)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 403

  128 Assignment: ExpressionList ADDEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 128 (Assignment)


State 404

  130 Assignment: ExpressionList DECEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 130 (Assignment)


State 405

  138 Assignment: ExpressionList OREQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 138 (Assignment)


State 406

  135 Assignment: ExpressionList XOREQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 135 (Assignment)


State 407

  131 Assignment: ExpressionList MULEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 131 (Assignment)


State 408

  129 Assignment: ExpressionList DIVEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 129 (Assignment)


State 409

  132 Assignment: ExpressionList MODEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 132 (Assignment)


State 410

  133 Assignment: ExpressionList LSHIFTEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 133 (Assignment)


State 411

  134 Assignment: ExpressionList RSHIFTEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 134 (Assignment)


State 412

  137 Assignment: ExpressionList ANDEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 137 (Assignment)


State 413

  136 Assignment: ExpressionList ANDXOREQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 136 (Assignment)


State 414

  127 Assignment: ExpressionList EQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 127 (Assignment)


State 415

  126 Assignment: IdentifierList EQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 126 (Assignment)


State 416

  125 Assignment: IdentifierList PEQ ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 125 (Assignment)


State 417

  305 MapType: MAP '[' Type ']' Type •

    $default  reduce using rule 305 (MapType)


State 418

  274 EmbeddedField: '*' TypeName TypeArgs •

    $default  reduce using rule 274 (EmbeddedField)


State 419

  270 FieldDecl: IdentifierList Type CONST_STRING •

    $default  reduce using rule 270 (FieldDecl)


State 420

  204 LiteralValue: '{' ElementList ',' '}' •

    $default  reduce using rule 204 (LiteralValue)


State 421

  206 ElementList: ElementList ',' KeyedElement •

    $default  reduce using rule 206 (ElementList)


State 422

  140 Expression: Expression • binary_op Expression
  213 Element: Expression •

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    $default  reduce using rule 213 (Element)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 423

  196 CompositeLit: LiteralValue •
  214 Element: LiteralValue •

    '}'       reduce using rule 196 (CompositeLit)
    '}'       [reduce using rule 214 (Element)]
    ','       reduce using rule 196 (CompositeLit)
    ','       [reduce using rule 214 (Element)]
    $default  reduce using rule 196 (CompositeLit)


State 424

  208 KeyedElement: Key ':' Element •

    $default  reduce using rule 208 (KeyedElement)


State 425

  199 LiteralType: '[' POINT ']' Type •

    $default  reduce using rule 199 (LiteralType)


State 426

  237 TypeAssertion: '.' '(' Type • ')'

    ')'  shift, and go to state 466


State 427

  240 Arguments: '(' ExpressionList POINT • ')'

    ')'  shift, and go to state 467


State 428

  238 Arguments: '(' ExpressionList ')' •

    $default  reduce using rule 238 (Arguments)


State 429

  239 Arguments: '(' ExpressionList ',' • ')'
  246 ExpressionList: ExpressionList ',' • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    ')'                shift, and go to state 468
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 370
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 430

  242 Arguments: '(' Type POINT • ')'

    ')'  shift, and go to state 469


State 431

  243 Arguments: '(' Type ')' •

    $default  reduce using rule 243 (Arguments)


State 432

  241 Arguments: '(' Type ',' • ')'
  244          | '(' Type ',' • ExpressionList ')'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    ')'                shift, and go to state 470
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression      go to state 128
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 471
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 433

  234 Slice: '[' ':' ']' •

    $default  reduce using rule 234 (Slice)


State 434

  140 Expression: Expression • binary_op Expression
  232 Slice: '[' ':' Expression • ']'
  236      | '[' ':' Expression • ':' Expression ']'

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    ':'             shift, and go to state 472
    ']'             shift, and go to state 473
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 435

  231 Slice: '[' Expression ':' • Expression ']'
  233      | '[' Expression ':' • ']'
  235      | '[' Expression ':' • Expression ':' Expression ']'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    ']'                shift, and go to state 474
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 475
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 436

  229 Index: '[' Expression ']' •

    $default  reduce using rule 229 (Index)


State 437

  230 Index: '[' Expression ',' • ']'

    ']'  shift, and go to state 476


State 438

  179 Conversion: Type '(' ExpressionList ')' •

    $default  reduce using rule 179 (Conversion)


State 439

  180 Conversion: Type '(' ExpressionList ',' • ')'
  246 ExpressionList: ExpressionList ',' • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    ')'                shift, and go to state 477
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 370
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 440

  261 TypeList: Type ',' TypeList •

    $default  reduce using rule 261 (TypeList)


State 441

  260 TypeArgs: '[' TypeList ',' ']' •

    $default  reduce using rule 260 (TypeArgs)


State 442

   66 IfStmt: IF SimpleStmt SEMICOLON Expression • Block ELSE IfStmt
   67       | IF SimpleStmt SEMICOLON Expression • Block ELSE Block
   68       | IF SimpleStmt SEMICOLON Expression • Block
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '{'             shift, and go to state 83
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275
    Block      go to state 478


State 443

   70 IfStmt: IF Expression Block ELSE • IfStmt
   71       | IF Expression Block ELSE • Block

    IF   shift, and go to state 175
    '{'  shift, and go to state 83

    IfStmt  go to state 479
    Block   go to state 480


State 444

   80 ExprSwitchCase: CASE ExpressionList •
  246 ExpressionList: ExpressionList • ',' Expression

    ','  shift, and go to state 285

    $default  reduce using rule 80 (ExprSwitchCase)


State 445

   76 ExprSwitchStmt: SWITCH '{' ExprCaseClauseList '}' •

    $default  reduce using rule 76 (ExprSwitchStmt)


State 446

   77 ExprCaseClauseList: ExprCaseClause ExprCaseClauseList •

    $default  reduce using rule 77 (ExprCaseClauseList)


State 447

   79 ExprCaseClause: ExprSwitchCase ':' • Statements

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 175
    SWITCH             shift, and go to state 176
    FALLTHROUGH        shift, and go to state 177
    FOR                shift, and go to state 178
    BREAK              shift, and go to state 179
    SELECT             shift, and go to state 180
    RETURN             shift, and go to state 181
    MAP                shift, and go to state 49
    GO                 shift, and go to state 182
    GOTO               shift, and go to state 183
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONTINUE           shift, and go to state 184
    DEFER              shift, and go to state 185
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 186
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    FUNCTION           [reduce using rule 120 (EmptyStatement)]
    id                 [reduce using rule 120 (EmptyStatement)]
    VAR                [reduce using rule 120 (EmptyStatement)]
    CONST              [reduce using rule 120 (EmptyStatement)]
    IF                 [reduce using rule 120 (EmptyStatement)]
    SWITCH             [reduce using rule 120 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 120 (EmptyStatement)]
    FOR                [reduce using rule 120 (EmptyStatement)]
    BREAK              [reduce using rule 120 (EmptyStatement)]
    SELECT             [reduce using rule 120 (EmptyStatement)]
    RETURN             [reduce using rule 120 (EmptyStatement)]
    MAP                [reduce using rule 120 (EmptyStatement)]
    GO                 [reduce using rule 120 (EmptyStatement)]
    GOTO               [reduce using rule 120 (EmptyStatement)]
    INTERFACE          [reduce using rule 120 (EmptyStatement)]
    CHAN               [reduce using rule 120 (EmptyStatement)]
    CONTINUE           [reduce using rule 120 (EmptyStatement)]
    DEFER              [reduce using rule 120 (EmptyStatement)]
    CONST_INT          [reduce using rule 120 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 120 (EmptyStatement)]
    CONST_STRING       [reduce using rule 120 (EmptyStatement)]
    BOOL               [reduce using rule 120 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 120 (EmptyStatement)]
    CONST_HEX          [reduce using rule 120 (EmptyStatement)]
    CONST_BIN          [reduce using rule 120 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 120 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 120 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 120 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 120 (EmptyStatement)]
    TYPE               [reduce using rule 120 (EmptyStatement)]
    STRUCT             [reduce using rule 120 (EmptyStatement)]
    XOR                [reduce using rule 120 (EmptyStatement)]
    POINTER            [reduce using rule 120 (EmptyStatement)]
    '{'                [reduce using rule 120 (EmptyStatement)]
    '('                [reduce using rule 120 (EmptyStatement)]
    '['                [reduce using rule 120 (EmptyStatement)]
    '*'                [reduce using rule 120 (EmptyStatement)]
    '&'                [reduce using rule 120 (EmptyStatement)]
    '-'                [reduce using rule 120 (EmptyStatement)]
    '+'                [reduce using rule 120 (EmptyStatement)]
    '!'                [reduce using rule 120 (EmptyStatement)]
    $default           reduce using rule 120 (EmptyStatement)

    Statement       go to state 187
    ForStmt         go to state 188
    DeferStmt       go to state 189
    Declaration     go to state 190
    GoStmt          go to state 191
    ReturnStmt      go to state 192
    BreakStmt       go to state 193
    ContinueStmt    go to state 194
    GotoStmt        go to state 195
    SelectStmt      go to state 196
    IfStmt          go to state 197
    SwitchStmt      go to state 198
    ExprSwitchStmt  go to state 199
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 200
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    Block           go to state 207
    Statements      go to state 481
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 448

   74 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON '{' • ExprCaseClauseList '}'
  203 LiteralValue: '{' • ElementList '}'
  204             | '{' • ElementList ',' '}'
  205             | '{' • '}'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 236
    CASE               shift, and go to state 380
    DEFAULT            shift, and go to state 381
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '}'                shift, and go to state 237
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    ExprCaseClauseList  go to state 482
    ExprCaseClause      go to state 383
    ExprSwitchCase      go to state 384
    Expression          go to state 238
    UnaryExpr           go to state 129
    PrimaryExpr         go to state 130
    Conversion          go to state 131
    MethodExpr          go to state 132
    Operand             go to state 133
    BasicLit            go to state 134
    CompositeLit        go to state 135
    LiteralType         go to state 136
    LiteralValue        go to state 239
    ElementList         go to state 240
    KeyedElement        go to state 241
    Key                 go to state 242
    Element             go to state 243
    OperandName         go to state 138
    int_lit             go to state 139
    imaginary_lit       go to state 140
    float_lit           go to state 141
    FunctionLit         go to state 142
    Type                go to state 144
    TypeName            go to state 59
    ArrayType           go to state 145
    StructType          go to state 146
    PointerType         go to state 62
    FunctionType        go to state 63
    InterfaceType       go to state 64
    SliceType           go to state 147
    MapType             go to state 148
    ChannelType         go to state 67


State 449

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression • '{' ExprCaseClauseList '}'
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '{'             shift, and go to state 483
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 450

   75 ExprSwitchStmt: SWITCH Expression '{' ExprCaseClauseList • '}'

    '}'  shift, and go to state 484


State 451

   36 ForClause: SEMICOLON SEMICOLON SimpleStmt •

    $default  reduce using rule 36 (ForClause)


State 452

   34 ForClause: SEMICOLON Expression SEMICOLON •
   35          | SEMICOLON Expression SEMICOLON • SimpleStmt

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    '{'  [reduce using rule 34 (ForClause)]
    '{'  [reduce using rule 120 (EmptyStatement)]

    SimpleStmt      go to state 485
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 453

   31 ForClause: SimpleStmt SEMICOLON SEMICOLON •
   33          | SimpleStmt SEMICOLON SEMICOLON • SimpleStmt

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    '{'  [reduce using rule 31 (ForClause)]
    '{'  [reduce using rule 120 (EmptyStatement)]

    SimpleStmt      go to state 486
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 454

   30 ForClause: SimpleStmt SEMICOLON Expression • SEMICOLON SimpleStmt
   32          | SimpleStmt SEMICOLON Expression • SEMICOLON
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    SEMICOLON       shift, and go to state 487
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 455

   37 RangeClause: ExpressionList EQ RANGE • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 488
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 456

   38 RangeClause: IdentifierList PEQ RANGE • Expression

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 489
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 457

   60 CommCase: CASE RecvStmt •

    $default  reduce using rule 60 (CommCase)


State 458

   64 RecvStmt: RecvExpr •

    $default  reduce using rule 64 (RecvStmt)


State 459

   59 CommCase: CASE SendStmt •

    $default  reduce using rule 59 (CommCase)


State 460

   65 RecvExpr: Expression •
  122 Channel: Expression •
  140 Expression: Expression • binary_op Expression
  247 ExpressionList: Expression •

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    POINTER   reduce using rule 122 (Channel)
    ':'       reduce using rule 65 (RecvExpr)
    $default  reduce using rule 247 (ExpressionList)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 461

   62 RecvStmt: ExpressionList • EQ RecvExpr
  246 ExpressionList: ExpressionList • ',' Expression

    EQ   shift, and go to state 490
    ','  shift, and go to state 285


State 462

   63 RecvStmt: IdentifierList • PEQ RecvExpr

    PEQ  shift, and go to state 491


State 463

   54 SelectStmt: SELECT '{' CommClauseList '}' •

    $default  reduce using rule 54 (SelectStmt)


State 464

   56 CommClauseList: CommClauseList CommClause •

    $default  reduce using rule 56 (CommClauseList)


State 465

   58 CommClause: CommCase ':' • Statements

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 175
    SWITCH             shift, and go to state 176
    FALLTHROUGH        shift, and go to state 177
    FOR                shift, and go to state 178
    BREAK              shift, and go to state 179
    SELECT             shift, and go to state 180
    RETURN             shift, and go to state 181
    MAP                shift, and go to state 49
    GO                 shift, and go to state 182
    GOTO               shift, and go to state 183
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONTINUE           shift, and go to state 184
    DEFER              shift, and go to state 185
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 186
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    FUNCTION           [reduce using rule 120 (EmptyStatement)]
    id                 [reduce using rule 120 (EmptyStatement)]
    VAR                [reduce using rule 120 (EmptyStatement)]
    CONST              [reduce using rule 120 (EmptyStatement)]
    IF                 [reduce using rule 120 (EmptyStatement)]
    SWITCH             [reduce using rule 120 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 120 (EmptyStatement)]
    FOR                [reduce using rule 120 (EmptyStatement)]
    BREAK              [reduce using rule 120 (EmptyStatement)]
    SELECT             [reduce using rule 120 (EmptyStatement)]
    RETURN             [reduce using rule 120 (EmptyStatement)]
    MAP                [reduce using rule 120 (EmptyStatement)]
    GO                 [reduce using rule 120 (EmptyStatement)]
    GOTO               [reduce using rule 120 (EmptyStatement)]
    INTERFACE          [reduce using rule 120 (EmptyStatement)]
    CHAN               [reduce using rule 120 (EmptyStatement)]
    CONTINUE           [reduce using rule 120 (EmptyStatement)]
    DEFER              [reduce using rule 120 (EmptyStatement)]
    CONST_INT          [reduce using rule 120 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 120 (EmptyStatement)]
    CONST_STRING       [reduce using rule 120 (EmptyStatement)]
    BOOL               [reduce using rule 120 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 120 (EmptyStatement)]
    CONST_HEX          [reduce using rule 120 (EmptyStatement)]
    CONST_BIN          [reduce using rule 120 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 120 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 120 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 120 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 120 (EmptyStatement)]
    TYPE               [reduce using rule 120 (EmptyStatement)]
    STRUCT             [reduce using rule 120 (EmptyStatement)]
    XOR                [reduce using rule 120 (EmptyStatement)]
    POINTER            [reduce using rule 120 (EmptyStatement)]
    '{'                [reduce using rule 120 (EmptyStatement)]
    '('                [reduce using rule 120 (EmptyStatement)]
    '['                [reduce using rule 120 (EmptyStatement)]
    '*'                [reduce using rule 120 (EmptyStatement)]
    '&'                [reduce using rule 120 (EmptyStatement)]
    '-'                [reduce using rule 120 (EmptyStatement)]
    '+'                [reduce using rule 120 (EmptyStatement)]
    '!'                [reduce using rule 120 (EmptyStatement)]
    $default           reduce using rule 120 (EmptyStatement)

    Statement       go to state 187
    ForStmt         go to state 188
    DeferStmt       go to state 189
    Declaration     go to state 190
    GoStmt          go to state 191
    ReturnStmt      go to state 192
    BreakStmt       go to state 193
    ContinueStmt    go to state 194
    GotoStmt        go to state 195
    SelectStmt      go to state 196
    IfStmt          go to state 197
    SwitchStmt      go to state 198
    ExprSwitchStmt  go to state 199
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 200
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    Block           go to state 207
    Statements      go to state 492
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 466

  237 TypeAssertion: '.' '(' Type ')' •

    $default  reduce using rule 237 (TypeAssertion)


State 467

  240 Arguments: '(' ExpressionList POINT ')' •

    $default  reduce using rule 240 (Arguments)


State 468

  239 Arguments: '(' ExpressionList ',' ')' •

    $default  reduce using rule 239 (Arguments)


State 469

  242 Arguments: '(' Type POINT ')' •

    $default  reduce using rule 242 (Arguments)


State 470

  241 Arguments: '(' Type ',' ')' •

    $default  reduce using rule 241 (Arguments)


State 471

  244 Arguments: '(' Type ',' ExpressionList • ')'
  246 ExpressionList: ExpressionList • ',' Expression

    ')'  shift, and go to state 493
    ','  shift, and go to state 285


State 472

  236 Slice: '[' ':' Expression ':' • Expression ']'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 494
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 473

  232 Slice: '[' ':' Expression ']' •

    $default  reduce using rule 232 (Slice)


State 474

  233 Slice: '[' Expression ':' ']' •

    $default  reduce using rule 233 (Slice)


State 475

  140 Expression: Expression • binary_op Expression
  231 Slice: '[' Expression ':' Expression • ']'
  235      | '[' Expression ':' Expression • ':' Expression ']'

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    ':'             shift, and go to state 495
    ']'             shift, and go to state 496
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 476

  230 Index: '[' Expression ',' ']' •

    $default  reduce using rule 230 (Index)


State 477

  180 Conversion: Type '(' ExpressionList ',' ')' •

    $default  reduce using rule 180 (Conversion)


State 478

   66 IfStmt: IF SimpleStmt SEMICOLON Expression Block • ELSE IfStmt
   67       | IF SimpleStmt SEMICOLON Expression Block • ELSE Block
   68       | IF SimpleStmt SEMICOLON Expression Block •

    ELSE  shift, and go to state 497

    $default  reduce using rule 68 (IfStmt)


State 479

   70 IfStmt: IF Expression Block ELSE IfStmt •

    $default  reduce using rule 70 (IfStmt)


State 480

   71 IfStmt: IF Expression Block ELSE Block •

    $default  reduce using rule 71 (IfStmt)


State 481

   79 ExprCaseClause: ExprSwitchCase ':' Statements •
  226 Statements: Statements • Statement

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 175
    SWITCH             shift, and go to state 176
    FALLTHROUGH        shift, and go to state 177
    FOR                shift, and go to state 178
    BREAK              shift, and go to state 179
    SELECT             shift, and go to state 180
    RETURN             shift, and go to state 181
    MAP                shift, and go to state 49
    GO                 shift, and go to state 182
    GOTO               shift, and go to state 183
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONTINUE           shift, and go to state 184
    DEFER              shift, and go to state 185
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 186
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    FUNCTION           [reduce using rule 120 (EmptyStatement)]
    id                 [reduce using rule 120 (EmptyStatement)]
    VAR                [reduce using rule 120 (EmptyStatement)]
    CONST              [reduce using rule 120 (EmptyStatement)]
    IF                 [reduce using rule 120 (EmptyStatement)]
    SWITCH             [reduce using rule 120 (EmptyStatement)]
    CASE               reduce using rule 79 (ExprCaseClause)
    CASE               [reduce using rule 120 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 120 (EmptyStatement)]
    DEFAULT            reduce using rule 79 (ExprCaseClause)
    DEFAULT            [reduce using rule 120 (EmptyStatement)]
    FOR                [reduce using rule 120 (EmptyStatement)]
    BREAK              [reduce using rule 120 (EmptyStatement)]
    SELECT             [reduce using rule 120 (EmptyStatement)]
    RETURN             [reduce using rule 120 (EmptyStatement)]
    MAP                [reduce using rule 120 (EmptyStatement)]
    GO                 [reduce using rule 120 (EmptyStatement)]
    GOTO               [reduce using rule 120 (EmptyStatement)]
    INTERFACE          [reduce using rule 120 (EmptyStatement)]
    CHAN               [reduce using rule 120 (EmptyStatement)]
    CONTINUE           [reduce using rule 120 (EmptyStatement)]
    DEFER              [reduce using rule 120 (EmptyStatement)]
    CONST_INT          [reduce using rule 120 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 120 (EmptyStatement)]
    CONST_STRING       [reduce using rule 120 (EmptyStatement)]
    BOOL               [reduce using rule 120 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 120 (EmptyStatement)]
    CONST_HEX          [reduce using rule 120 (EmptyStatement)]
    CONST_BIN          [reduce using rule 120 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 120 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 120 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 120 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 120 (EmptyStatement)]
    TYPE               [reduce using rule 120 (EmptyStatement)]
    STRUCT             [reduce using rule 120 (EmptyStatement)]
    XOR                [reduce using rule 120 (EmptyStatement)]
    POINTER            [reduce using rule 120 (EmptyStatement)]
    '{'                [reduce using rule 120 (EmptyStatement)]
    '}'                reduce using rule 79 (ExprCaseClause)
    '}'                [reduce using rule 120 (EmptyStatement)]
    '('                [reduce using rule 120 (EmptyStatement)]
    '['                [reduce using rule 120 (EmptyStatement)]
    '*'                [reduce using rule 120 (EmptyStatement)]
    '&'                [reduce using rule 120 (EmptyStatement)]
    '-'                [reduce using rule 120 (EmptyStatement)]
    '+'                [reduce using rule 120 (EmptyStatement)]
    '!'                [reduce using rule 120 (EmptyStatement)]
    $default           reduce using rule 79 (ExprCaseClause)

    Statement       go to state 328
    ForStmt         go to state 188
    DeferStmt       go to state 189
    Declaration     go to state 190
    GoStmt          go to state 191
    ReturnStmt      go to state 192
    BreakStmt       go to state 193
    ContinueStmt    go to state 194
    GotoStmt        go to state 195
    SelectStmt      go to state 196
    IfStmt          go to state 197
    SwitchStmt      go to state 198
    ExprSwitchStmt  go to state 199
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 200
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    Block           go to state 207
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 482

   74 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON '{' ExprCaseClauseList • '}'

    '}'  shift, and go to state 498


State 483

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression '{' • ExprCaseClauseList '}'

    CASE     shift, and go to state 380
    DEFAULT  shift, and go to state 381

    ExprCaseClauseList  go to state 499
    ExprCaseClause      go to state 383
    ExprSwitchCase      go to state 384


State 484

   75 ExprSwitchStmt: SWITCH Expression '{' ExprCaseClauseList '}' •

    $default  reduce using rule 75 (ExprSwitchStmt)


State 485

   35 ForClause: SEMICOLON Expression SEMICOLON SimpleStmt •

    $default  reduce using rule 35 (ForClause)


State 486

   33 ForClause: SimpleStmt SEMICOLON SEMICOLON SimpleStmt •

    $default  reduce using rule 33 (ForClause)


State 487

   30 ForClause: SimpleStmt SEMICOLON Expression SEMICOLON • SimpleStmt
   32          | SimpleStmt SEMICOLON Expression SEMICOLON •

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    '{'  [reduce using rule 32 (ForClause)]
    '{'  [reduce using rule 120 (EmptyStatement)]

    SimpleStmt      go to state 500
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 488

   37 RangeClause: ExpressionList EQ RANGE Expression •
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    $default  reduce using rule 37 (RangeClause)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 489

   38 RangeClause: IdentifierList PEQ RANGE Expression •
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    $default  reduce using rule 38 (RangeClause)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 490

   62 RecvStmt: ExpressionList EQ • RecvExpr

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    RecvExpr       go to state 501
    Expression     go to state 502
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 491

   63 RecvStmt: IdentifierList PEQ • RecvExpr

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    RecvExpr       go to state 503
    Expression     go to state 502
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 492

   58 CommClause: CommCase ':' Statements •
  226 Statements: Statements • Statement

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 174
    VAR                shift, and go to state 6
    CONST              shift, and go to state 7
    IF                 shift, and go to state 175
    SWITCH             shift, and go to state 176
    FALLTHROUGH        shift, and go to state 177
    FOR                shift, and go to state 178
    BREAK              shift, and go to state 179
    SELECT             shift, and go to state 180
    RETURN             shift, and go to state 181
    MAP                shift, and go to state 49
    GO                 shift, and go to state 182
    GOTO               shift, and go to state 183
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONTINUE           shift, and go to state 184
    DEFER              shift, and go to state 185
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    TYPE               shift, and go to state 8
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 186
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    FUNCTION           [reduce using rule 120 (EmptyStatement)]
    id                 [reduce using rule 120 (EmptyStatement)]
    VAR                [reduce using rule 120 (EmptyStatement)]
    CONST              [reduce using rule 120 (EmptyStatement)]
    IF                 [reduce using rule 120 (EmptyStatement)]
    SWITCH             [reduce using rule 120 (EmptyStatement)]
    CASE               reduce using rule 58 (CommClause)
    CASE               [reduce using rule 120 (EmptyStatement)]
    FALLTHROUGH        [reduce using rule 120 (EmptyStatement)]
    DEFAULT            reduce using rule 58 (CommClause)
    DEFAULT            [reduce using rule 120 (EmptyStatement)]
    FOR                [reduce using rule 120 (EmptyStatement)]
    BREAK              [reduce using rule 120 (EmptyStatement)]
    SELECT             [reduce using rule 120 (EmptyStatement)]
    RETURN             [reduce using rule 120 (EmptyStatement)]
    MAP                [reduce using rule 120 (EmptyStatement)]
    GO                 [reduce using rule 120 (EmptyStatement)]
    GOTO               [reduce using rule 120 (EmptyStatement)]
    INTERFACE          [reduce using rule 120 (EmptyStatement)]
    CHAN               [reduce using rule 120 (EmptyStatement)]
    CONTINUE           [reduce using rule 120 (EmptyStatement)]
    DEFER              [reduce using rule 120 (EmptyStatement)]
    CONST_INT          [reduce using rule 120 (EmptyStatement)]
    CONST_CHAR         [reduce using rule 120 (EmptyStatement)]
    CONST_STRING       [reduce using rule 120 (EmptyStatement)]
    BOOL               [reduce using rule 120 (EmptyStatement)]
    CONST_OCTAL        [reduce using rule 120 (EmptyStatement)]
    CONST_HEX          [reduce using rule 120 (EmptyStatement)]
    CONST_BIN          [reduce using rule 120 (EmptyStatement)]
    DECIMAL_FLOAT_LIT  [reduce using rule 120 (EmptyStatement)]
    HEX_FLOAT_LIT      [reduce using rule 120 (EmptyStatement)]
    RUNE_LIT           [reduce using rule 120 (EmptyStatement)]
    IMAGINARY_LIT      [reduce using rule 120 (EmptyStatement)]
    TYPE               [reduce using rule 120 (EmptyStatement)]
    STRUCT             [reduce using rule 120 (EmptyStatement)]
    XOR                [reduce using rule 120 (EmptyStatement)]
    POINTER            [reduce using rule 120 (EmptyStatement)]
    '{'                [reduce using rule 120 (EmptyStatement)]
    '}'                reduce using rule 58 (CommClause)
    '}'                [reduce using rule 120 (EmptyStatement)]
    '('                [reduce using rule 120 (EmptyStatement)]
    '['                [reduce using rule 120 (EmptyStatement)]
    '*'                [reduce using rule 120 (EmptyStatement)]
    '&'                [reduce using rule 120 (EmptyStatement)]
    '-'                [reduce using rule 120 (EmptyStatement)]
    '+'                [reduce using rule 120 (EmptyStatement)]
    '!'                [reduce using rule 120 (EmptyStatement)]
    $default           reduce using rule 58 (CommClause)

    Statement       go to state 328
    ForStmt         go to state 188
    DeferStmt       go to state 189
    Declaration     go to state 190
    GoStmt          go to state 191
    ReturnStmt      go to state 192
    BreakStmt       go to state 193
    ContinueStmt    go to state 194
    GotoStmt        go to state 195
    SelectStmt      go to state 196
    IfStmt          go to state 197
    SwitchStmt      go to state 198
    ExprSwitchStmt  go to state 199
    ConstDecl       go to state 13
    TypeDecl        go to state 14
    VarDecl         go to state 15
    SimpleStmt      go to state 200
    EmptyStatement  go to state 201
    SendStmt        go to state 202
    Channel         go to state 203
    IncDecStmt      go to state 204
    Assignment      go to state 205
    Expression      go to state 206
    UnaryExpr       go to state 129
    PrimaryExpr     go to state 130
    Conversion      go to state 131
    MethodExpr      go to state 132
    Operand         go to state 133
    BasicLit        go to state 134
    CompositeLit    go to state 135
    LiteralType     go to state 136
    LiteralValue    go to state 137
    OperandName     go to state 138
    int_lit         go to state 139
    imaginary_lit   go to state 140
    float_lit       go to state 141
    FunctionLit     go to state 142
    Block           go to state 207
    ExpressionList  go to state 209
    Type            go to state 144
    TypeName        go to state 59
    ArrayType       go to state 145
    StructType      go to state 146
    PointerType     go to state 62
    FunctionType    go to state 63
    IdentifierList  go to state 210
    InterfaceType   go to state 64
    SliceType       go to state 147
    MapType         go to state 148
    ChannelType     go to state 67


State 493

  244 Arguments: '(' Type ',' ExpressionList ')' •

    $default  reduce using rule 244 (Arguments)


State 494

  140 Expression: Expression • binary_op Expression
  236 Slice: '[' ':' Expression ':' Expression • ']'

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    ']'             shift, and go to state 504
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 495

  235 Slice: '[' Expression ':' Expression ':' • Expression ']'

    FUNCTION           shift, and go to state 105
    id                 shift, and go to state 106
    MAP                shift, and go to state 49
    INTERFACE          shift, and go to state 50
    CHAN               shift, and go to state 51
    CONST_INT          shift, and go to state 107
    CONST_CHAR         shift, and go to state 108
    CONST_STRING       shift, and go to state 109
    BOOL               shift, and go to state 110
    CONST_OCTAL        shift, and go to state 111
    CONST_HEX          shift, and go to state 112
    CONST_BIN          shift, and go to state 113
    DECIMAL_FLOAT_LIT  shift, and go to state 114
    HEX_FLOAT_LIT      shift, and go to state 115
    RUNE_LIT           shift, and go to state 116
    IMAGINARY_LIT      shift, and go to state 117
    STRUCT             shift, and go to state 52
    XOR                shift, and go to state 118
    POINTER            shift, and go to state 119
    '{'                shift, and go to state 120
    '('                shift, and go to state 121
    '['                shift, and go to state 122
    '*'                shift, and go to state 123
    '&'                shift, and go to state 124
    '-'                shift, and go to state 125
    '+'                shift, and go to state 126
    '!'                shift, and go to state 127

    Expression     go to state 505
    UnaryExpr      go to state 129
    PrimaryExpr    go to state 130
    Conversion     go to state 131
    MethodExpr     go to state 132
    Operand        go to state 133
    BasicLit       go to state 134
    CompositeLit   go to state 135
    LiteralType    go to state 136
    LiteralValue   go to state 137
    OperandName    go to state 138
    int_lit        go to state 139
    imaginary_lit  go to state 140
    float_lit      go to state 141
    FunctionLit    go to state 142
    Type           go to state 144
    TypeName       go to state 59
    ArrayType      go to state 145
    StructType     go to state 146
    PointerType    go to state 62
    FunctionType   go to state 63
    InterfaceType  go to state 64
    SliceType      go to state 147
    MapType        go to state 148
    ChannelType    go to state 67


State 496

  231 Slice: '[' Expression ':' Expression ']' •

    $default  reduce using rule 231 (Slice)


State 497

   66 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE • IfStmt
   67       | IF SimpleStmt SEMICOLON Expression Block ELSE • Block

    IF   shift, and go to state 175
    '{'  shift, and go to state 83

    IfStmt  go to state 506
    Block   go to state 507


State 498

   74 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON '{' ExprCaseClauseList '}' •

    $default  reduce using rule 74 (ExprSwitchStmt)


State 499

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression '{' ExprCaseClauseList • '}'

    '}'  shift, and go to state 508


State 500

   30 ForClause: SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt •

    $default  reduce using rule 30 (ForClause)


State 501

   62 RecvStmt: ExpressionList EQ RecvExpr •

    $default  reduce using rule 62 (RecvStmt)


State 502

   65 RecvExpr: Expression •
  140 Expression: Expression • binary_op Expression

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    $default  reduce using rule 65 (RecvExpr)

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 503

   63 RecvStmt: IdentifierList PEQ RecvExpr •

    $default  reduce using rule 63 (RecvStmt)


State 504

  236 Slice: '[' ':' Expression ':' Expression ']' •

    $default  reduce using rule 236 (Slice)


State 505

  140 Expression: Expression • binary_op Expression
  235 Slice: '[' Expression ':' Expression ':' Expression • ']'

    EQUAL           shift, and go to state 253
    NOTEQUAL        shift, and go to state 254
    GREATEROREQUAL  shift, and go to state 255
    LESSOREQUAL     shift, and go to state 256
    AND             shift, and go to state 257
    OR              shift, and go to state 258
    LSHIFT          shift, and go to state 259
    RSHIFT          shift, and go to state 260
    XOR             shift, and go to state 261
    AMP_EXP         shift, and go to state 262
    ']'             shift, and go to state 509
    '*'             shift, and go to state 263
    '/'             shift, and go to state 264
    '%'             shift, and go to state 265
    '&'             shift, and go to state 266
    '-'             shift, and go to state 267
    '|'             shift, and go to state 268
    '+'             shift, and go to state 269
    '<'             shift, and go to state 270
    '>'             shift, and go to state 271

    binary_op  go to state 272
    mul_op     go to state 273
    add_op     go to state 274
    rel_op     go to state 275


State 506

   66 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt •

    $default  reduce using rule 66 (IfStmt)


State 507

   67 IfStmt: IF SimpleStmt SEMICOLON Expression Block ELSE Block •

    $default  reduce using rule 67 (IfStmt)


State 508

   73 ExprSwitchStmt: SWITCH SimpleStmt SEMICOLON Expression '{' ExprCaseClauseList '}' •

    $default  reduce using rule 73 (ExprSwitchStmt)


State 509

  235 Slice: '[' Expression ':' Expression ':' Expression ']' •

    $default  reduce using rule 235 (Slice)
